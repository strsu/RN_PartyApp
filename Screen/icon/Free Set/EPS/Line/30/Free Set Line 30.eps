%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Free Set Line 30.eps
%%Creator: Adobe Illustrator(R) 21.0
%%For: Imola-PC
%%CreationDate: 2/20/2017
%%BoundingBox: 0 0 570 870
%%HiResBoundingBox: 0 0 570 870
%%CropBox: 0 0 570 870
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 21.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 21.0.0 x223 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c137 79.159768, 2016/08/11-13:24:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Business 30</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 2017 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2017-02-20T14:05:02+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2017-02-20T14:05:03+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2017-02-20T14:05:03+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>168</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAACoAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9F22lmYW11NFJLeNGrG7&#xA;W5mRKlR1QPtWp+ECn37FCb6e8j2Fs8jcpGiQu3SrFRU4EpZqF+/qXFvcXEdrGpCJxmEcnFwP3jV4&#xA;t48eB6inyKEx0+QvbA1LRgkQyMas6fssa717b798CUJrN5JGRFEY6xj1XWSc2xcUYKqsqsftCpxQ&#xA;t8v3jzRyREh40CSwv6xnbhNyIR2IB5IQR32pvhKhvzJJImn7FhE5dZ2UVIX0nK+PWQKMAUqFokNv&#xA;qcUVirJG9BcR+j6KhVjf4vsx1PLh22r2ruVTmaT04Xk4l+CluC9TQVoPfAlJbW6vUuLeWSEcbhkV&#xA;3WRGLcgefR2LhHpxoNlr0woT3AlgL3urS+rImqSIS6twodgrDmqkcVowanelDhYs00lpG0qzaVi8&#xA;jQRF3NaligqTWpwMmPeYrzU4byQW0hVeYFBKykD00P2ajbc0IHjXthCCneiSTPasZW5MGUVDmQV9&#xA;NC3FyTX4ie+BIQPmW7uYg0cdyYFpEzcWRCAS/J+TFT8JVa/FSnXY1whBW+Wbu6lCrJdG4jKyMqsV&#xA;ZxRkIYsCx35mgrTwxKhMtYZxbxgVETSKtwR/vsg1/ht36b9MCUo0IzLdQfu0iZ3lWdIX5oUVQUNe&#xA;T9/8/EoCe6lLJFp11LE3CWOGRkalaMFJBpvXfAlKHmv7ezuZPXlijijEkErelKhqG25Ecn5FAdjX&#xA;4wKbYUJudO087m2ir/qL/TAlEAAAACgGwAxV2KuxV2KuxVplVlKsAysKMp3BB7HFVO3tLW2Urbwp&#xA;Cp6rGoQbfIDFVXFVqxRK7SKiq7/bYAAmnicVXYq7FXYq7FXYq7FXYq5lVlKsAVIoQdwQcVU4ba3h&#xA;r6MSR8vtcFC1p40xVUZVZSrAFSKEHcEHFUOun2CkFbaIFSCpCKKEdKbYqgv0gFufVkaRIAxL3DBh&#xA;bmIqQtCdh8VDy/GlBhQmiOjorowZGAKsDUEHoQcCUovNTvpDdxWoS3+rFkMsrgSMyxiQtGgWQcQr&#xA;g/F18B1woRml3r3dtykUCWNvTkKnkpYAGqnw3/2xvgSqXl0YuEabSymisRVVqQvIjavxOBT/AG8V&#xA;WafNPIjiWrcDx5kAHkNnXYANxYfaAAp7g4qt1proabL9Vr9YYokVDxNXcLTl269cVSryxc6jLKfr&#xA;VRGYiFJlaYM6P8R+MKVosijbrhKAnWoSyx2jtEwR6qvqMKhQzBSx/wBUGuBKWLq/p3cCvdBo2cpM&#xA;GaKQAFTRwYgvFeYABb3+EUqChO8CWP3msX8NzNbLLDV5eMMp/wB1rt8Ldq/FvXpvhQn6c+C8yC9B&#xA;yI2Fe9BvgSl90+qTyyx2ZSJYapzL0JcorKSDHIKDliqLtppJPVWRAjxPwIViwNVVq1IX+bwxVL9a&#xA;1mbTZUYW7XMbox4IVBBUipNak+1Px7FDej6vPqM8haBreONF+FirVLE0KkUPbf6OncKjr+SSKyml&#xA;iYK8SM6lhUfCK0I22NPHFKU6FJq31mZLm7jvIi3JWSh4im5qpIFWNFXwFdu5QE6nd44ZHRPUdVLL&#xA;H05ECoHQ9cCUsF7fq5cehLyoWhWZqUkoI+H7v3Fa+NdtsKERNo9pIka8pUWNgyKJHK7ClODlkIoe&#xA;lMCUbHGkcaxoKIgCqPADYYqhp9MsppvWkQmQEMGDutGAAqOJG+w3xVWht4oQwjr8Z5MWZnJNAOrE&#xA;noMVauLWC4XjKpIAIqCVNG2IqpBoe4xVUVVVQqgKqiiqNgAOwxVTuraO5haGT7DEHoDupDDYgjqO&#xA;+KqVrptvbSmVN34lQeMa7Egn+7VK9B1xVFYqpTWlrM8ck0SSPCeUTMoJU+IJ6dMVVcVQj6TpzrOr&#xA;W6kXLB5/FmHQ1xVFIiIioihUUAKoFAAOgAxVCXGjabcTNNLDylenJuTCtAAOhHYYqrWtnbWkRit0&#xA;4ISWIqTUnvU1OKqnpJ6vq0/eceJbxFagHxp2xV3pJ6vq0/eceIbwFakDwr3xVqaJJoXievCRSjU2&#xA;NGFDiqjbabZ20iyQpwZY/S27gEGreLbdcVROKoSLSNOiufrEcCLJ+yQoou5NV22+0f8AMnFUtk8x&#xA;3gS4uUsA9jbuY3m9YB/hND+74++3xYaRaeqQVBHQiuBKU3+vfVJpovSRmjICqXYM1UDVpwIHWnXC&#xA;i0bpt415ZR3LII2krVA3ICjEdaL4eGBKH1bUpLZRHbryuW405I7IOZKpUjiPiccftYoX6TqD3kcn&#xA;qAK8bU2DKSCB1VvslX5IRU7r9AUqupXwsrN7kgNxKjizcQeTAdaHxriqG0/V5bm7NtNCkMgWRqLL&#xA;6n926o37K9C2/wDQg4oR88vpQvJxLcQTxHU4pS/9J3aOsrwqbSY0hKlSxFFIpxZvU5VcqFXoMUJn&#xA;ilKxqzPdBFlhAeMPFAQ5kJZlCl2WoRW5DttXFCYwyrNDHKoIWRQ6g9aMK74pQFxqF42omxslj5pH&#xA;6kjzFqdR8IC79GBxQi7G6F1bLNx4MSyuhNeLoxR1r7MpxS1fXP1eIOXSJC1Hmk+wgoTybdepHHr3&#xA;xVfazGaBJCB8VaEdCK7MPZhuMVbmnjhUM9fiPFQqsxJ67BQT2xVL9K12O+Kq0RiZ0R02loS4YleT&#xA;xxiq8Dii0wuZjDbSzBeRjRn41pXiK0rvilKn1vUI54Vks4vq80qwi5SdmXkXCECsQ3326VwotZJ5&#xA;VhYTxLd3CWs7l3tw5pUmp3ONrSeKAoAHQCgwJQN7o9ndP6jKRIWRnYM4qEI2oGA3ApiqKt7eG3hW&#xA;GFeMa/ZXc9TXviqF1DS0u5I5RK0MkZUlkJFQrchsCBUb0Jr1O2+KrtO01LMyvUNLMauVDBaAkgAM&#xA;z92J698VX31kl2kasEJif1F9Rea14lelV/m23xVDWmiw280coWIGIllKIwapUrTk7uafF0xRSPnh&#xA;SeF4X+xICp+n54pQZ0uV5f31y0luDyWEgVr8B+Imo+0hI4qKVoMVR+KpeulshYK8bxMSVEsfN1Vu&#xA;NUV+S7fAKbeHhiqMt4I7e3it4hSKFFjQdaKooPwxVBXGlSnUf0haTLDO0ZikEkfqKQSDUANGQfhH&#xA;entiqLs7VLW3WFSWC1LM3VmYlmY+5Yk4qsnsVmuEn9R0kjXilAhAr1I5q1CfbFVHT9NltLm5lacS&#xA;pcENx9MIQRsDVTxO3X4RXFUZNDHMoVwSAagglSD4gihGKoDTNDt7EhgebqiRp9riBGpRTxZn+Lia&#xA;V8NsUUj7iITQSQk0EishI7chTFKVQ6LepIge8ja2SRZVt1hZQrKwb4SZWp+Pj1wopFvrFiihuRbk&#xA;SEAp8QU0dl36LQ1+7qRUJRoIIBBqDuCMVQ8t7GjtGiNM8dPUWOh48txWpG/t1xVUtrmG5gSeFuUb&#xA;ioJBUimxDKwDKwOxBFQdjiq2W8hjlMTcy4UMQkbvQEkDdQf5Tiq211C0u3lSByzwECVSrLxJrseQ&#xA;G+2KojFVEXlu1z9XRuclGLcdwvGlQx7H4htiqtiqDh1IyG3/ANFmRLn7EjGKgqhk3o5bovhiqMxV&#xA;Kv8AFGg0r9aBHiEkp3/yfY40i0ygningjniPKKVQ8bUIqrCoNDQ9MUulnjiAL136KqlmPyVQTiro&#xA;pY5U5oaitDUEEEdQQdwcVUr2+W0WItFJMZX9NViXka8WapG21FxVqzv1umkUQyxNFTkJV4/ar03O&#xA;Kuv7+OyjSSRGcSOsYC8RQtXcl2UACnjiqjpus21/JNHEjoYXaMl+BDFApYqUZ9h6i4qj8VUIryOW&#xA;6ntlDc7cJzY04kuCQBvXYDfbFUnTR9VeW4mn9AmaX1BGK1odlDMFA+AAfsnl07ksUJ+K0Fdz3I2w&#xA;JS+XTppZrh+YjWR0KFdyVCoDy6dChpiqIsIZIbb05FVW5yHin2aNIzCn0HFVG6g1L6361o0YUqiu&#xA;sld+JY02B/n8cVXWVo8NzcTNGkXr8SQjs9WBYsx5KtK8hiqtex3Ets8Vu4ilkHESmp4g9SKFTWnT&#xA;fFVPT9Ois46LQyEAFgOIoOgVR9ke2KorFUosjqpNjDPY+jHb09SX1UYbQsmwG/2jhQm+BLFx5c1e&#xA;g5G0Zqbni2/3KPw6bU+ytDaKZDYwyQWNvBIVMkUSI5QcU5KoB4qKUHgMCUJd6P8AWrkzSzHiG5RA&#xA;cwyfCBQVYp1FfsfiAcUI23idPUeQj1JW5uF6D4QoAr7KMUoXWoLme0CW8XqvzHJeQQ8GBVyCdq8W&#xA;PX+zFSu0u1+rxzKI2iV5C6q5Utuqgn4SVFWBoBsPbpiq7UrA3kUSBlX05Vl+NOanjX4StV61xVDW&#xA;+nXMGqJOqxLCY2ST0kEa02I+GrHly71pTFCaEVBFae4xSk1ppFxFqUkrT3BQFSkzNH8QAUsrADcM&#xA;a1+EdPlQoThXR68WDcTxahrQjscCW8VQ13qVjZsq3MyxswJAPWg6nboPfFUQrKyhlIZWFVYbgg9x&#xA;iq2WeKIAu1CdlUAlifZRUn6MVdFNHKvKM1FaHsQfAg7g+xxVc7oilnYKqipYmgA+eKqVrfWV2rNa&#xA;3EdwqmjNE6uAffiTiqtiqHh1GymuZLaKUNPFXmlDUcSAeo7chiqIxVpmVaciBUgCu256DFW8VU5r&#xA;i3hoZpUjDdObBa/fiqoCCAQag7gjFVryxIyo7qrvsikgFqeA74quxVxIAJJoBuScVUoru3lcpG9W&#xA;A5AEEVXpyWoHJfcbYqq4qoJfWryemsg5H7JoQrf6rEcW6djiqDC3llPKYoPrEc7F+XLiQzMSFoA3&#xA;83U/Sf5VCZ4pYzrhtk1t3uYyyNbQiNuLMKrJLyG0kXiPHCEFONAVk0LTkZSrLawhlIoQRGuxBwJC&#xA;jqxmjcsFPpzKsZlqKRgFmYnkyL8R4ihND+BUL9IMz83dTwEccSuTXnwL/F1auzDep+eKu122e5tY&#xA;4BJLCjSD1JIAxcBVZl+yC1OYXpikoWxgu/r0E0k0zuvNGQrII/TZRuWkRd+SLSnv9BQneBKU2EMa&#xA;6pJxWQSx+v65b1OP76VXj4lvgNVH7PTvhQm2BKUXFtHMsv1lHa9YERN6TSLEStKRMAo4nqatv+1T&#xA;oChM7VJUtoklblKqKJG61YChO/vgSlWqLfR6iZ1jea1khWNVhMgdZFZixbgV2KuKfI9NsKEbpEN3&#xA;Dp0Md4VNwORcLuq8mLBQe/EHjXAlAa1FdNcuEiZ4ZIU3Achnjdjxb0wzdG77b+2FCI0i1WGWUxRN&#xA;FDRRU81WR96sEkJZeIoP4mmwVE6nFLLYyJFX1PhIpsaKwJps3YeGKVLTZleWQM/qTFIyzA8uIC0K&#xA;MQFowfkeg6/cqiryN5LSeOP7bxsq9typAxVJp5DG8qW9HS5BBjRSDG7EUkkUCsZTqSevjUKCUJ9g&#xA;S7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqwxrq+e9BkKC4SSKNmMbhOEyhy&#xA;7ycah0CSfZcBSANt6lDLrVpWtYWlBErIpkBFDyIFdvngSgpLgATetfm2lDOBEPSqFBPAhWVmaq0O&#xA;KERp8ssizF3aQCSiM6emacFJHGin7RPXFKE1iab63bW6XgsY3jllachftRtGFHxEL/uwmhwob0We&#xA;ZpbqB7oXiRFGS42+IyAlvsmlK+GKhG6g8qWFy8TcJVicxvQHiwUkGh60OBKA0GO8hM8NxPJMu0iC&#xA;YHmvKSRSKsSaHhUdh22phQEyuJHjhZ0XkwptQmgruaDc0G9BgSlUWoL6wWKU3FwGo5BZY5BUBljQ&#xA;lwCAwK+NK147koTnAlil/b3txNeapACRAxMUfUuUAVeB5rx2QOu3xcuhwoZVHIkkayIao4DKfEHc&#xA;YEsf1M01KcPfXFs9EKIrr6ZjYUWiclIYurfF08e1ChMdDDfUyfVlljMj+k87rJJxB4mrLUH4w1N+&#xA;mBIQWt3QjvfTluzaxCAOjeoIhzLkHc05fDvTvTthQXaJdCS99OK7N1EYC7t6glHMOANxXj8O9O1e&#xA;+KhNr67W0tmnYFgpAA92IUEnsN9zgSlOl3U8uryH6201tKgMSMvE1UVcBB9lV5L8R+R6hmKE6nkM&#xA;UEkoUsUUtxHU0FaYEpLb3YF69PWaSKcCXlI5Qi4I4jiWZKIJB09qdTQoTWXTtPmJM1tFIWNWLorV&#xA;I8ajAlEKqqoVQAoFABsABirsVdiqnNbW81PWiSTj9nmoalfCuKtw28EIIhjWME1IRQoJ6V2xVcyq&#xA;ylWAZWFGU7gg9jiqyG3t4aiGJIw3XgoWv3YqqYq0FUMWAHI0BPc06Yq3iqHOm6cSSbWGp6n01/pi&#xA;quiIiKiKFRQAqgUAA6ADFVk1tbTEGaJJCvTmoan34qvVVVQqgKqiiqNgAOwxVvFXYq5lVlKsAVIo&#xA;QdwQcVaWONd1UKaBdhTZeg+QrireKqKWdoknqJBGsm55qihqnY7gYqlMWuSy20TIyqeKCRz6bFmI&#xA;Ban7yNF9tySa/D8OFFprYSyTWNtLJ/eSRI79t2UE9h+rAlBajeXEUrKhlLBlCRQqGqjKTzP7uX9t&#xA;Svb38cUI6zkeS3V2PKpbi38yhiFbb+ZaHFKE1K9aOQwrI8QAjBaNFMjPPJ6UYjMlY9iCWqDTbFDe&#xA;kagbuME8yDFHMvqqqyL6nIGOThWMujRkHj/aVKpqtzNb2jND/emvHcD7CmRtyHpVUI6HFVCzn1Bd&#xA;SNpdMHHoCXkKU5VCmgCim9e5r7dMUJjLIkUbyyHiiKWdvAAVOKWF+V/M2uS6tNa6ozy25a3jjlaG&#xA;KMRySQGQqTFI+7NTYjv2wkMQWbYGSX3lxfC6kjiaGO3iiSSSR24sC7ONiQ6gfB3GKoqxleayt5XI&#xA;LyRozEdKsoJxVLNU1uKG4aFGuAIarM1vbSzfvWVDFHyEbp8Qkr86b4UJhp97HdQEqzGSIiOcNG8R&#xA;EnEMfhkVW6MD0wJa1A3JSKK2l9CWaQL63EPxCgufhOx5BOP01xVbps07C4gnYyS2s3pNNRVDhkWU&#xA;EKpNKCQLv4VxVXurgW8DTFGkCUJVKVpXc/EVFB1O+KpfpGsm9d4jG3NTyYgKBGrAMqv8Va706b/O&#xA;oChM5JEijaSQ8UQFmY9gBUnFKUT6hfm4hCMF5iKQ2/HiyrI4WkrPWtQf2ACrUrUYUIq20hLZUEM8&#xA;ilEEYfjCXKjsW9OpwJRkMSwwxxLUrGoRSetFFN8VWz2yykNyZGA4sUIBKnqp2PXxG47HFVVVVVCq&#xA;AFAoANgAMVQeoaXDevBI0kkUtsxaKSMrUFhTcMGU02O46jFV1hp0FkJREWYzyGWRnNSWbrSgFATU&#xA;08ScVVLq0huohHLXiHR9jTdGDU+RpRh3FRirjaQm8S73EyRtEKHYq7K2470KbfTiqpLGksTxuKo6&#xA;lWHsRQ4qhI9JhST1DIzNUM3wxLyKsGFSiKftAHFUbiqGXTbNfW4x0M7CSU1NSwPIGtaih3FMVRCI&#xA;iIqIoVFACqBQADoAMVSy+8vw3bylrmZI5pFleFRCyc1QR8v3kbn7KjviikbZ2a2yyfvHmklf1JZp&#xA;OPJmoFFQgRRRVA2A6eOKXXtnDdw+lL0DK6tRSQVNduQYe3TpirdpaRWsPpRfZqWJoASWNT9kKPwx&#xA;VfNEk0LxPUpIpRgCQaMKHcYqpwWVvBI0kQKs4AerEg0JNdyd6sanviqpcQiaCSEsyCRWQuhow5Cl&#xA;VPjiqA0/y7pdhcNcW8ZEj8iSx5bs1a1O+32R7Y2ilr6xOsM031dQkEqwsrSEScn4UHHgRX94Nq/L&#xA;FU0BqAaU9jilK9W1k2M0UQUEyFQCxADFiQEFWXc8T4/LFCY28wmgjmUUEqK4HswrilQvb02xRVj5&#xA;u4JBJ4qAGVdyAzVPMBQqmpxV1lffWeamMxyR05CtVNSQCrbV+yeoFOmKqtzcx28RdwzdQqIpZmIB&#xA;NFUdTtiq2K5cyiKZBHI6l4wrcqqtAeoXcchiqs7qiM7miKCzE9gNziqAi1MmSIyALHMQqji44k9B&#xA;zI4vX/J6e/XFUwxVLTqshkDJERANircQ7D4gSDzCpQjo9D12qMUI+GUSwpKAVEihgrChFRWhHjil&#xA;A3OtRRXklpGheWERmaqygD1iRHQpHJWpBxRaI0/UIL639eGvEM0bVVl+JGKtTkFqKjrilu/v4LKA&#xA;zTVIFKItOR334gkVoN9sVW6fqVvfpI8AYCKRoyHHEkr+1TrQ9q4qrzTRwpzkNBUKPEsxooHuSaYq&#xA;g9O1eK95AxvA/qSRosg4ljEaNxrTpiqNlkSKJ5HNERSzH2AqcVS6LW1nNv8AV4SRcEcBIwVihJqw&#xA;VeewVWPxUr2rii1aTT5W1NbsTARAANb8WIJAPxfaC8txvx6DFKNxVK9V0ia8njkR4uKmMlJYy+8b&#xA;M1ahhsSwqvenXFCPtYWgtYYWYO0SKhcCgJUAVpU0+/FKy7s/XZXEhRkVlAoCpDFT8QO/VB0IOKt2&#xA;toICW5s7FVTcKAAtSAAoH8xxV15ai5gMfNomoeEqU5KSpWoqCOjHFVG10xIbgzN6fQcI4o/TQMOQ&#xA;L0q1WIelcVRNzEZraWEMFMiMgYjkByFK02riqVpolyILCIzQgWbo7FIaFgu7LXl+0wqaAb7+2FFJ&#xA;xgSljaS4lCrJWAmrMwQuoBZqAFCr1Zur1P2t6nFCYQxCKFIgSwjUKGY1JoKVJ8cUpTdeVrK5v7i9&#xA;ae4iluDGW9GVo6emABuu/wCyD4bYbRSL0fSLfS7eSCBmZJJWmPLsWpt+GBK7UdIstQUJdKzL0IR2&#xA;QkUOxZCG79jiq+0060tC3oJxrt40Hz6n6f6YqqXMLTRFFYKwZWViKgFGDCoqKio8cVQthps9tKry&#xA;zrLxQoAqFKk8eTGrvUkpU4qjpI0kjaNxVHBVh4g7HFUJ9QKyq8QgXgSyM0RaQEjix58weRHU4qoD&#xA;zFYGMShZfR58PVMZCcTWj8unEkcR3rtTGkWmeKVKa5EbcQjSvTkyoASq+JqR9Hc9sVVEdXRXUhlY&#xA;AqR0IPTFVs8qwxNIwJCioVerHsq17k7DFW4pVliSVPsSKGWvgRUYqp3l3FaQGaX7AKr2G7sFG5IA&#xA;3Pc4qo2uqW1xP6CbSFS4HKN/hUgH+7Z6faHXFUZiqGi1CKSWOMqyeupaB2pxcCh2oSRsa0NDiqJx&#xA;VCPqdskxjbnQVDS8G9MEVrVqUotPiboO5GKovFUJfalFaFQY3lY7lY+PwrQnkeTKOiH32xVExyJI&#xA;gdDUGvsQQaEH3BxVDahq2m6f6f12dYPVr6fKu/GlenzGKrrDU7DUI3ksp1nSNuDlezUBpv7HFVaa&#xA;aKGF5pWCRRqXkc9AqipP3YqhYNa0yeZIIpw0shIReLCpALGlQOwOKo3FVks8UQBkYLU0H+fhiqUS&#xA;2OqJGojVD6bKoMcnxNDC5eEcJFCBunI18eu2FCcR+p6a+oAJKDmF6cqb0wJQF5bXRvGliaYI8aIR&#xA;CYh9hmJr6lDvy2pihFWULw2qRuasKk1ptUkhdgBRa02GKUH5gsXvbOOFYnlAk5Msb+mwARgGryTo&#xA;xH04oKpolm9pZCAxGFVI4RFufH4V5UJLbc+RG+KQiL1JHgoil2V434igJCSKxpUgdBiqF06C9WZG&#xA;uOZ4I685ClSW9P8AlZupQsegFaDFCOuIVmgkhYlVlVkLLSoDClRWoxSx+00PUxfxG59EWsJSRWij&#xA;iVuaEmgIjBodvorhRTI8CWJar5d1eae7SJg9pPyMYqRvI7M4PGSHj/eMP2vHqdjaKZTbCZbeJZjy&#xA;mCKJG8WpudvfAljvnPR76+ED2FqJbgBw8wWBiAPsqwmZKg8m6ePUYQgsit7eC2hSCBBHEgoqKKAd&#xA;8CUPeW1w93a3EIU+h6nJXYrXmAOoVsVbs7WWO5urmYKJLgpRUJYBUWg3IXetcVW6vpzX9ukQfhxf&#xA;nXxIRgB0O3IiuKqcVhf/AF2K5nnjkCkllVCnH4WAC7mo+LvviqNuVle3lSI8ZWRhGxNKMRsaj3xV&#xA;KLPQJoRbGVo5ZFeRro8VWock0XgikjfdW/huUUneBLsVQ91qOn2hAu7qG3JBYCWRUqB1PxEYqiFZ&#xA;WUMpBUioI3BBxVzMqqWYgKBUk7AAYq4EEVHTFXYq0ro4qrBhUioNRUGh/HFXMyqpZiFVRVmOwAHc&#xA;4qsguLedC8EqSoDxLIwYVHaoxVUxVDS6ppkM6wTXcMc7EBYnkRXJPQBSa4qicVWSzQxAGWRYwTQF&#xA;iFqfDfFV+KuLKoqSAKgb+JNBiqyOaGUsI5FcoeLhSDQ+Bp0xVc7oil3YKg3LMaAfScVajkjkQPGw&#xA;dD0ZSCDTbqMVXYqpi5tjL6IlQyjrGGHLb264qx02rtqC3s9pdfpAQ+kfTVSokJY1SUtTj8W1ewFc&#xA;KGRwGYwRmZQkxUGRVNQGpuAe4rgSx+/e8gvJit1Fp7vcJI081KTQBFCqjH+RuQMexPWoruUJvpSF&#xA;bZiEaOJpHaCJlKsqMxIqDuKmrAHoDTtgSoavHdSSwxIziJyteCFuLrLGeRO4Hwlj8XhihboFxezf&#xA;Xhc27Wwt7l7eKNkKI6x7iaLkTVJAw6bAgjFQidVFwbUei5Ueogm4oZGMbMFcKF3Boa1oenTFKXaV&#xA;ZyJqaTCL0W9Eib924DArGyqHcncMxruenbChObmEzQPGrcGIqjkVCsN1NKitCK0wJSGyt9QvJI72&#xA;3SK1hJiARaqyx8Vd1AKEchI8gPSvQ9MKGRYEsXe3QTRTTySIbNhG9p6knObmP30qry5N8bAqAN+J&#xA;pXkKFDIrKOSOzgjlqZUjRXJoTyCgGtNsCUg80yRxyfFdfVWKpRvWMJKhJyygg/tUH00PUDCEFPNN&#xA;4/VfgNY/Ul4UNRx9VuNPanT2wJQ2uWsE0UbXKTS2sfL1YYPULkkfC1IvjNCP2d98UFC+V9Ei0tLg&#xA;RcikxXdhIgJTkBRJGYr8JUfOvamEqAjtYRTbJJIzrDFIHm9MBm40IBCkNXixDbCu22+BKhYLW5EU&#xA;V1cSJbFpJxMgj5NLUgf3cZI+Itt4DFCa4pY5ZRWixW4j+qEVtzEsYUTK3KPkKAf6xOFDI8CXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWIW2pawbaOHULp3jJKtLFH6dzLUK1F4&#xA;rwH2xQqVNPE4UMtilWWJJU+xIoZa+BFRgSkmsRtcXHxzenGJFtYE4s1JpFDiXaSPpWlN/wAcKE10&#xA;9pWtEEzB5U5RySAUDNGxQtSppy41pXAlD6rfJCFtlDNLMRzCbFYuQDtUbgkVC03J6dCQq3pcLxyT&#xA;uodbaXi0COoj41rWiChXan2gDiqvf3q2dv6zRvKeSqscYqzFjQAVoPvOKpZoq6lPdPqEkrfVLgMy&#xA;QMWPEkgKoHJlHELQkbE7rscKAmt5LJFbNJGAXBWlVLdWAOykHpgSldpqE7zEx3YumJ+K34qvHduS&#xA;KoUSKUoN5D0OFCdYEpRPe3tzcm1gBijJZRIASxMcgV/iqvEAb+/SoOFCbIvFFWpPEAVJqTTxOBLE&#xA;vNGp3i3jWqTIY43ikSFeaMCo9WrMPtcWStAdwQKd8IQU90C+lvbD15Jkn+NlSSNWUFVNBXlSpPWo&#xA;AwJC7XrgW+kXUpYrRKVDKh+IhaBnKqpNaAk7YqV2i3QutLt516MpAHJXpxYrxLIzqxWlKg74qFHz&#xA;DcXUNhW3DfGxWSRXCMi8GbmGP+Uo+fTEIKT6Fc3CakkMa8omkdJuNY1VFEnpt6bb1YRJ7jx7kqGS&#xA;X7zpY3DwAmdYnaIAAkuFJXY++BLHjPClZbSSt6OTLMGdhOKrSNQev20FW2JK0rXYoT8aZpw6WsI/&#xA;55r/AEwJRCqqqFUBVUUVRsAB2GKqUlnA7lzzVmpyKO6VptUhCKnFVSKJIkCIKKOg/Ekk9ScVWm3h&#xA;acTlaygcQ1T0FabdO5xVUxVbLFFKhjlRZI2+0jAEH5g4q2iJGioihEQBVVRQADYAAYq3irsVdiqx&#xA;YYVkaVY1EjbM4ADH5nFV+KoG60TS7uYzXEAkkalWJbsKDYHFaRNraW9rF6UC8I6khak7nc9ScVbn&#xA;toZwgkB/dtzQqzKQ1CtQVIPRiMVdBbQwBxGD+8bm5ZmYlqBaksSeigYqukjjkQpIodG2ZWAIPzBx&#xA;VRtdPs7U1gjCmgXkSWIUAAKCxJAoo2xVEYqh0sLRJhMqfvFrwJLELyFDxUmi7bbYqlQ1e4kvIYgZ&#xA;Ua4VHioitCpkVmRW+H1G2AqVNOu44nChObab1reKanH1EV+PWnIVpgSgr7UbmFHkghLwRlkkkALE&#xA;ED7QVd2CtsR8+lN1VfTNQhv7OO4idXDCjFK05DrSu/34qoahqc1vfWtrBCbhpatMi7MsfQMCaL17&#xA;HFW9J1Oa8ku4riL0J7eUqITufSJIjdj0q/Emg/VQlVHsaKTStBWnTFUDot3Jc2jO7tIQ54u6hSVY&#xA;B1oAF2o2x79fbFUfiqV2N3ey6pOkk8L2x9QRWyIRLEYXCVd+Z5c68vsD6cUJpiljg1fULhluIWki&#xA;icBo0eLjFTru7qCdtzxbpvtxbChPbK5W6s4LlRRZ40kA9nUN/HAlLdXvr6C4dbfkQsIcAFAA3xk1&#xA;5KxOydqdMKE0t5JpIVeaL0ZDXlHyDUoaDcbbjfAlB6vd3USJb2lRdThvSYIshqlCQFd4lrQ1+Jqf&#xA;PFXaRd3UqPb3dTdQBfVYosZq9SAVR5VrQV+FqfLFUTfPIlszoxTiVLOKEqnIczuCNlr2xVqyaRkk&#xA;5uZAJGVCwUNRTxNeIUfaBI9sVRGKsasNUuJrfT7hNQmuJJpY4ruIxxeiHIpIgZYl3Vtvt4UJu2kW&#xA;xlEgZlABVVUJVVNaqrlfUUfEfssKdqYEo1EREVEUKigBVAoAB0AGKoS80uG6hlhaSSOGcETRxlQG&#xA;r16gkV70OKqmn6faafaR2lonpwxigHUk9ySepOKqd/pGnX9PrUXqEcSCGZT8Dcl3Ur3xVuw0qwsF&#xA;K2kXDkArMWZ2YKWI5M5ZjQuepxVEyRrJG0bbq4Kt8iKYqpWlpHaxenGWYfDuxqfgRUHYdkxVXxVB&#xA;22mQQXb3KMxeTnyBCD+8YPuVUMaUoKnpiqMxVKZfLOnSTGQNLHVuXFGFBX7QFQSAQSKA9NhhtFJp&#xA;HGkcaxxqFRAFRR0AAoBgSg73SLe7uFuHd1dUMY48aUIYHqp6hyMVR2KpfqWixX88Ez3NxA0FeIgk&#xA;4V5Ag1NCR1/ZI+7FXabosVhPPMlzcTtPTkJ5OdOIAFDQE9P2ifuxVF3VutzA0LO0YanxoQGBBBFK&#xA;gjt3GKqVtYGGczm5llZ14ur8ArHajlUVPiotK+H0YqisVS2y0GzswixM3BDy4UjALcg5Y8UXcuAx&#xA;8e+KKVVvrp5YhHAjRTRtKjGQhyqlf2eFKnn/ADYpRcUiSxJIhqjqGU+xFRiqB1bWodO9NDFJcTSh&#xA;nWKMoCEQqGcl2RaBnUda79OuKomxvI721S4jVkVuQKOAHVkYqysATurKQcVU9U1KLT7f1pBXegBN&#xA;APcnfatB06kYqu0++ivbcTR/Z6bGoNQGBB8CGB8fEA4qp6tq1rpdp9ZuW4oWCLUMRybx4hiNgT0x&#xA;VB6V5q0zUbz6pDIrSspdOHqEUXrUvHHTrthpFptPKsMTSMCQoqFXqx7Kte5OwwJQY1ywYgIXdu4C&#xA;kAAfabk1FIUbmh6dMVtH4qxa58+W8E80Rs3b0ZLiMsG6/VmKsfs96bYaRbJLO5W5tILlQVWeNZAp&#xA;6gOoan44ErJbuk3oRRtLLQljQhFpQ0Z6EBiG2GKqsEyTR+onSrKQeoZCVZTTwYEYqhb3U2t5vQht&#xA;Zbu44eoI4zGvw1I3MjJ3xVXgnd3eORPTkSjcQeQKtWhrQdwRird3cG3gMojaVgVVY14glnYKBVio&#xA;6nxxVQtr26e4EFxaNblkZ0fmjqQpUEGhqD8fhiqKlkSKJ5HNERSzH2AqcVUGupkUySwFIQKluSll&#xA;A6l1G1P9UnFUNNpryJDEY4XFuOMFxJ8TKuwoUK0NQBX4hXrttihHwQpBBHDGKRxKEQeyigxSlOoa&#xA;Bc3Gp/XYL024dFjlQpzNEbkDGeSqCe/JWB222wopM7O0gs7aO2gBEcYoKmpJJqWYnqWJqT44EqWo&#xA;adFeLHyoHjJKkgkUPUGhU9gdiMVXafYRWULRpSsjmRyBQFiAO5Y9AOpxVdeWzXCIFcIyMTVgSCCr&#xA;IRsyHo3jiqGsdJ+qXAkVkCcGUxoripYqa1aR/wCTwxVGXEImhaMkryHwuKVVhuGFe4O+KoBfL9kh&#xA;DRtIr/EHblXksrBpVofhX1CKtxAqd+uKKTPFLE7nyBDPPPK16y+tJcycRGhp9aYswqa/ZrthtFMm&#xA;srYWtnBbBuYgjSPlSleCha0+jAlLtS8vi9vPrHr8UKFWhZSy8yKeoKMtDQAfRhtFI7TrL6nbCEyN&#xA;M9SXlfqT0Hc9FAH9uBKy5sp5LpLiGZY2XjVXQuDxDjsydpDiqrFbyLMZpZechXjRRwQCtem57dyf&#xA;bFWr+yS8g9JmKgMHHWnJd1rQqdjuN+u+KoSz0aWG7S5nu3uHiDBC3IUDCjLuzCh2PTqBihMJo/Uh&#xA;ePb41K/EKjcU3AIqPpxSh0spTGEuLl5lIAdKKqsAKeBffv8AF+G2KrbvWbG03mcrHz9Iy/s86E8B&#xA;3Ztuig4qjFZWUMpDKwqrDcEHuMVU57y0t6evMkdaABmAO5oMVVVZWAKkEHoRiqlPdQwAc+RJBIVE&#xA;eRiF6/CgY98Vatru3uV5QsWFAdwV2PQ0YDbbriq64uYbdA8pIUmgoCx6E9FBPQYqtS8gd1Qc1Ztl&#xA;5xugJArQFlA6DFVbFUqsvM2nXl99SiWUTUJBZCFoK/te9DTDSLTXAlSnuoIKeoxFQTsC1AOpNAaA&#xA;eJxVVxVRlulQuqo8roAWVBU7kClTQV70r0xVUilSReS9OhBFCD4EHFXSSJGhdzxUdT89hiro5EkQ&#xA;Oh5Keh+WxxVZc3UNtF6kpIXwVWdjsTsqBmOw8MVQVt5i0i5vVsopm+tOvJY3ilQ048urqo+zvjSL&#xA;TCSRI42kc0RAWY9aACp6YpUTqFuCoIkXkyqC0UoFWIUbladTiqDjtIjp8dhLZmVowKiQApz/AN+8&#xA;692JO3xe2KExt4hDBHCDURqqAnvxFMUoOWzvxcy3EFwgMhjAVo6lURqleQYVHxMelffFVextpLa3&#xA;EMkgl4k8CF4BVJ+FAKnZRsN8VUdUiuiYJLaNpWVisqLJ6RMbKSfi6/bVOn6q4qu0yGdFlknjMckj&#xA;AKjP6hCKoAHL58j9PjirWq2808cIjTmEl5SAEBgvBhVKlRyDEd/fFVG3trpZLRRG6RwmsvqFOO0b&#xA;IPTVXfjuw+HpT36qEzxSxzSdOaK7tZDbqjrSpW3MZRRCy0L8R+0Ty+I8idqDChkeBLHBo2sLrst4&#xA;HUoaMs21WUSO4hKn/IYLy/oMKE9sonis4IpKepHGivTcVVQDTAlL7yxdr8StEkiMW4l4hMAWWMb/&#xA;ABKV/ufCm+FCL0u1kt7YJJsx47UApwjWPsWG/CvXAl17BPO8cQFbYn99RipYEEFSQQaUNdq1PWg6&#xA;qtWFvNbF4AKWq0EHJy5UAABQWJYigrv0PjireppdmFXtFDXERZowaU5GN0UmpXYMwJ36YqgPLujz&#xA;WJke5d57h1VWuJQgZjyZmoqM4Fary33P0YSgJpexvJZzxoKu8bqo6VJUgdcCVBrO7l4l5UVRIshQ&#xA;B2NFfnx5GSntXj9GKosyxCQRl1EhFQlRyI8aYquxV2KuxVp3SNGd2CIgLMzGgAG5JJxVysrKGUhl&#xA;YVVhuCD3GKt4q7FXYqtEsRNA6knoKjFV2KuxV2KuxV2KrZJYokLyuqIKVZiABU0G5xV0csUqB4nV&#xA;0NaMpBBoaHcYquxV2KuxVoOhcoGHMAErXcA1oae9Dirz2/8AMOvr5g4i3kVI5VAURkjiUAO9R8SM&#xA;x470I6ipNSxt6FGzNGrOvBiAWStaHuKjAySG5tNOFzdNdaTJcTySc/XSIODRQEKNWqmigHpuMKE1&#xA;0yGeK0VZwqSGhMSbqh4ioFAP2qnp3wJQ/mK4a30iaQLzq0SMhXkCskqowYVX4SG336YhBX6FOZ9K&#xA;gcqV48o1BHH4Y3KKaVPULikKPmOGSW0hVYmlHrAuEDMQOD70UE9aDCEFLdGt7tb6zea1eNwtJXIe&#xA;g+B6VJUD9pV+j6MVT/UlZtOulUFmMMgAAqSSp7b4EpAsVobiEwQOsnrWhBVgdkFHJAXotaP774UM&#xA;nwJY7PbXR1GFpYXdlH7yZVYjlVOjAdwH4mvw1HSlQUJ/biVYIxKeUoVRIw7tTf8AHAlK7u21JL2a&#xA;WFpHhlHwqrtRSECheJagDN1KjbrUdcKEZplvcQQN67s0kjc6OxcqOIHGpJ8K7bYEobXnto4VlvYx&#xA;LZLtIjoZELmROFUCv70NNjigu0F7aSFpbKMRWTbRoiGNA4kfnRCqe1TTc4qEbeyzR27NCnOTYAbm&#xA;lTQmgDHYeAOKUFpyvFdFUEjxSoPUeRWUh1H2vijiB5VNTux22oNlCZSCQxsImCyEHgzAsoamxKgr&#xA;Ue1Rilhul2vmBdclHIJc/u2upXXkhQkCoULGaHhIFrK256GgIKH/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:93c28a9f-eaba-9746-8245-7c378d70b7ab</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:93c28a9f-eaba-9746-8245-7c378d70b7ab</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:717bf8bd-8d26-dd4a-a961-9d8dee600bbf</stRef:instanceID>
            <stRef:documentID>xmp.did:717bf8bd-8d26-dd4a-a961-9d8dee600bbf</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d5ba5d1e-dd25-5c41-9c73-481c1dcd4983</stEvt:instanceID>
                  <stEvt:when>2016-08-29T20:41:15+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:93c28a9f-eaba-9746-8245-7c378d70b7ab</stEvt:instanceID>
                  <stEvt:when>2017-02-20T14:05:03+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>690.000000</stDim:w>
            <stDim:h>1005.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 425 CP</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>48</xmpG:red>
                           <xmpG:green>59</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 11.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -870 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 870 li
570 870 li
570 0 li
cp
clp
1 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
246.561 14.7275 mo
244.074 15.5518 242.5 17.3428 242.5 18.3433 cv
242.5 20.6328 li
242.5 24.4253 248.097 27.5 255 27.5 cv
261.903 27.5 267.5 24.4253 267.5 20.6328 cv
267.5 18.3433 li
267.5 17.3428 265.926 15.5513 263.438 14.7275 cv
false sop
/0 
[/DeviceCMYK] /CSA add_res
.775174 .628168 .559289 .479377 cmyk
@
263.216 18.6958 mo
263.395 17.8936 263.5 17.0049 263.5 16 cv
263.5 9.64844 258.938 2.5 255 2.5 cv
251.031 2.5 246.5 9.64844 246.5 16 cv
246.5 16.981 246.601 17.8506 246.771 18.6387 cv
@
245.75 18.3721 mo
248.132 19.0674 251.45 19.5 255.125 19.5 cv
258.8 19.5 262.118 19.0674 264.5 18.3721 cv
@
256.5 10.5 mo
255 10.5 li
254.171 10.5 253.5 11.0596 253.5 11.75 cv
253.5 11.75 li
253.5 12.4404 254.171 13 255 13 cv
255 13 li
255.829 13 256.5 13.5596 256.5 14.25 cv
256.5 14.25 li
256.5 14.9404 255.829 15.5 255 15.5 cv
253.5 15.5 li
@
255 10.5 mo
255 9.5 li
@
255 15.5 mo
255 16.5 li
@
304.5 8.51416 mo
300.5 8.51416 li
300.5 24.0005 li
300.5 24.8286 301.172 25.4995 302.001 25.499 cv
328 25.5 li
328.825 25.5 329.5 24.8335 329.5 24.019 cv
329.5 4.5 li
304.5 4.51758 li
304.5 23.5015 li
304.5 24.6055 303.604 25.5 302.5 25.5 cv
@
311.5 10.5127 mo
313.5 10.5127 li
@
316.5 7.51514 mo
316.5 11.5117 li
318 13.5103 li
319.5 11.5117 li
319.5 7.51514 li
@
319.5 7.51514 mo
319.5 11.5117 li
321 13.5103 li
322.5 11.5117 li
322.5 7.51514 li
@
327.5 7.51514 mo
326 7.51514 li
325.171 7.51514 324.5 8.18604 324.5 9.01367 cv
324.5 9.01367 li
324.5 9.8418 325.171 10.5127 326 10.5127 cv
326 10.5127 li
326.829 10.5127 327.5 11.1836 327.5 12.0112 cv
327.5 12.0112 li
327.5 12.8389 326.829 13.5103 326 13.5103 cv
324.5 13.5103 li
@
314.5 22.5024 mo
306.5 22.5024 li
306.5 16.5073 li
314.5 16.5073 li
314.5 22.5024 li
cp
@
318.5 16.5073 mo
327.5 16.5073 li
@
318.5 19.5049 mo
327.5 19.5049 li
@
318.5 22.5024 mo
327.5 22.5024 li
@
314.5 13.5103 mo
311.5 13.5103 li
311.5 7.51514 li
314.5 7.51514 li
@
306.5 13.5103 mo
306.5 7.51514 li
308 7.51514 li
308.829 7.51514 309.5 8.18604 309.5 9.01367 cv
309.5 13.5103 li
@
130.5 16.5005 mo
133.6 16.5 li
134.915 20.416 li
@
142.5 16.5005 mo
145.6 16.5 li
146.915 20.416 li
@
136.5 6.50049 mo
139.6 6.5 li
140.915 10.416 li
@
143.402 14.5 mo
143.462 14.3428 143.5 14.1763 143.5 14 cv
143.5 13.9995 li
143.5 12.5649 143.253 11.1396 142.768 9.77979 cv
141.371 5.86377 li
141.081 5.04883 140.27 4.5 139.356 4.5 cv
130.644 4.5 li
129.73 4.5 128.919 5.04883 128.629 5.86377 cv
127.12 10.0947 li
126.709 11.2461 126.5 12.4526 126.5 13.667 cv
126.5 14 li
126.5 14.1763 126.538 14.3428 126.598 14.5 cv
@
135.906 25.5 mo
147.906 25.5 li
148.787 25.5 149.5 24.8286 149.5 24 cv
149.5 23.9995 li
149.5 22.5649 149.253 21.1396 148.768 19.7798 cv
147.371 15.8638 li
147.081 15.0488 146.27 14.5 145.356 14.5 cv
136.644 14.5 li
135.989 14.5 135.396 14.7896 135 15.2495 cv
@
122.629 15.8638 mo
122.919 15.0488 123.73 14.5 124.644 14.5 cv
133.356 14.5 li
134.27 14.5 135.081 15.0488 135.371 15.8638 cv
136.768 19.7798 li
137.252 21.1396 137.5 22.5649 137.5 23.9995 cv
137.5 24 li
137.5 24.8286 136.787 25.5 135.906 25.5 cv
122.094 25.5 li
121.213 25.5 120.5 24.8286 120.5 24 cv
120.5 23.6675 li
120.5 22.4526 120.709 21.2461 121.12 20.0947 cv
122.629 15.8638 li
cp
@
195.5 249.5 mo
201.5 249.5 li
@
195.5 253.5 mo
201.5 253.5 li
@
192.492 257.508 mo
197.495 257.494 li
@
191.5 248.5 mo
190 248.5 li
189.171 248.5 188.5 249.06 188.5 249.75 cv
188.5 249.75 li
188.5 250.44 189.171 251 190 251 cv
190 251 li
190.829 251 191.5 251.56 191.5 252.25 cv
191.5 252.25 li
191.5 252.94 190.829 253.5 190 253.5 cv
188.5 253.5 li
@
190 248.5 mo
190 247.5 li
@
190 253.5 mo
190 254.5 li
@
182.5 251.5 mo
182.5 266 li
182.5 266.828 183.171 267.5 184 267.5 cv
206 267.5 li
206.829 267.5 207.5 266.828 207.5 266 cv
207.5 251.5 li
@
198.232 244.5 mo
196.266 243.015 li
195.925 242.714 195.494 242.5 195 242.5 cv
194.506 242.5 194.075 242.714 193.734 243.015 cv
191.768 244.5 li
@
185.5 249.234 mo
182.5 251.5 li
193.734 260.985 li
194.075 261.286 194.506 261.5 195 261.5 cv
195.494 261.5 195.945 261.286 196.285 260.985 cv
207.5 251.5 li
204.5 249.234 li
@
185.5 254.037 mo
185.5 246 li
185.5 245.172 186.171 244.5 187 244.5 cv
203 244.5 li
203.829 244.5 204.5 245.172 204.5 246 cv
204.5 254.037 li
@
.5 10.5 mo
14.1099 19.2651 li
14.4023 19.4126 14.749 19.5 15.123 19.5 cv
15.4971 19.5 15.8442 19.4126 16.1367 19.2651 cv
16.1401 19.2651 li
29.5 10.5 li
@
15.5 15 mo
15.5 15.2764 15.2764 15.5 15 15.5 cv
14.7236 15.5 14.5 15.2764 14.5 15 cv
14.5 14.7236 14.7236 14.5 15 14.5 cv
15.2764 14.5 15.5 14.7236 15.5 15 cv
cp
@
28 27.5 mo
2 27.5 li
1.17139 27.5 .5 26.8286 .5 26 cv
.5 8 li
.5 7.17139 1.17139 6.5 2 6.5 cv
28 6.5 li
28.8286 6.5 29.5 7.17139 29.5 8 cv
29.5 26 li
29.5 26.8286 28.8286 27.5 28 27.5 cv
cp
@
20.5 6.5 mo
9.5 6.5 li
9.5 4 li
9.5 3.17139 10.1714 2.5 11 2.5 cv
19 2.5 li
19.8286 2.5 20.5 3.17139 20.5 4 cv
20.5 6.5 li
cp
@
86 140.5 mo
64 140.5 li
63.1714 140.5 62.5 139.829 62.5 139 cv
62.5 122.5 li
87.5 122.5 li
87.5 139 li
87.5 139.829 86.8286 140.5 86 140.5 cv
cp
@
75.5 147 mo
75.5 147.276 75.2764 147.5 75 147.5 cv
74.7236 147.5 74.5 147.276 74.5 147 cv
74.5 146.724 74.7236 146.5 75 146.5 cv
75.2764 146.5 75.5 146.724 75.5 147 cv
cp
@
75 147 mo
75 140.5 li
@
69.5 131.5 mo
66.5 131.5 li
66.5 137.5 li
69.5 137.5 li
69.5 131.5 li
cp
@
76.5 128.5 mo
73.5 128.5 li
73.5 137.5 li
76.5 137.5 li
76.5 128.5 li
cp
@
83.5 125.5 mo
80.5688 125.512 li
80.5 137.5 li
83.5 137.5 li
83.5 125.5 li
cp
@
315 844.5 mo
308.12 844.5 302.498 848.91 300.5 855 cv
302.498 861.09 308.12 865.5 315 865.5 cv
321.88 865.5 327.502 861.09 329.5 855 cv
327.502 848.91 321.88 844.5 315 844.5 cv
cp
@
321.5 855 mo
321.5 851.41 318.59 848.5 315 848.5 cv
311.41 848.5 308.5 851.41 308.5 855 cv
308.5 858.59 311.41 861.5 315 861.5 cv
318.59 861.5 321.5 858.59 321.5 855 cv
cp
@
313.5 858 mo
315.25 858 li
315.94 858 316.5 857.328 316.5 856.5 cv
316.5 856.5 li
316.5 855.672 315.94 855 315.25 855 cv
314.75 855 li
314.06 855 313.5 854.328 313.5 853.5 cv
313.5 853.5 li
313.5 852.672 314.06 852 314.75 852 cv
316.5 852 li
@
315 851 mo
315 852 li
@
315 858 mo
315 859 li
@
448 325.5 mo
422 325.5 li
421.172 325.5 420.5 324.828 420.5 324 cv
420.5 306 li
420.5 305.172 421.172 304.5 422 304.5 cv
448 304.5 li
448.828 304.5 449.5 305.172 449.5 306 cv
449.5 324 li
449.5 324.828 448.828 325.5 448 325.5 cv
cp
@
447.5 319.5 mo
447.5 310.5 li
445.291 310.5 443.5 308.709 443.5 306.5 cv
426.5 306.5 li
426.5 308.709 424.709 310.5 422.5 310.5 cv
422.5 319.5 li
424.709 319.5 426.5 321.291 426.5 323.5 cv
443.5 323.5 li
443.5 321.291 445.291 319.5 447.5 319.5 cv
cp
@
440.5 315 mo
440.5 318.037 438.037 320.5 435 320.5 cv
431.963 320.5 429.5 318.037 429.5 315 cv
429.5 311.963 431.963 309.5 435 309.5 cv
438.037 309.5 440.5 311.963 440.5 315 cv
cp
@
509.5 15 mo
509.5 23.0083 503.008 29.5 495 29.5 cv
486.992 29.5 480.5 23.0083 480.5 15 cv
480.5 6.9917 486.992 .5 495 .5 cv
503.008 .5 509.5 6.9917 509.5 15 cv
cp
@
505.5 15 mo
505.5 20.7988 500.799 25.5 495 25.5 cv
489.201 25.5 484.5 20.7988 484.5 15 cv
484.5 9.20117 489.201 4.5 495 4.5 cv
500.799 4.5 505.5 9.20117 505.5 15 cv
cp
@
493.5 9.5 mo
493.5 10.5 li
@
496.5 9.5 mo
496.5 10.8794 li
@
493.5 19.5 mo
493.5 20.5 li
@
496.5 19.4854 mo
496.5 20.5 li
@
495.25 10.5 mo
492.5 10.5 li
492.5 15 li
495.25 15 li
496.492 15 497.5 13.9927 497.5 12.75 cv
497.5 12.75 li
497.5 11.5073 496.492 10.5 495.25 10.5 cv
cp
@
496.25 15 mo
492.5 15 li
492.5 19.5 li
496.25 19.5 li
497.492 19.5 498.5 18.4927 498.5 17.25 cv
498.5 17.25 li
498.5 16.0073 497.492 15 496.25 15 cv
cp
@
492.5 10.5 mo
491.5 10.5 li
@
492.5 19.5 mo
491.5 19.5 li
@
556.5 16.5 mo
554.75 16.5 li
554.06 16.5 553.5 17.0596 553.5 17.75 cv
553.5 17.75 li
553.5 18.4404 554.06 19 554.75 19 cv
555.25 19 li
555.94 19 556.5 19.5596 556.5 20.25 cv
556.5 20.25 li
556.5 20.9404 555.94 21.5 555.25 21.5 cv
553.5 21.5 li
@
555 16.5 mo
555 15.5 li
@
555 21.5 mo
555 22.5 li
@
548.5 19 mo
548.5 19.2764 548.276 19.5 548 19.5 cv
547.724 19.5 547.5 19.2764 547.5 19 cv
547.5 18.7236 547.724 18.5 548 18.5 cv
548.276 18.5 548.5 18.7236 548.5 19 cv
cp
@
562.5 19 mo
562.5 19.2764 562.276 19.5 562 19.5 cv
561.724 19.5 561.5 19.2764 561.5 19 cv
561.5 18.7236 561.724 18.5 562 18.5 cv
562.276 18.5 562.5 18.7236 562.5 19 cv
cp
@
564.551 8.5 mo
564.532 8.6665 564.5 8.82861 564.5 9 cv
564.5 11.4854 566.515 13.5 569 13.5 cv
569.171 13.5 569.334 13.4683 569.5 13.4497 cv
@
569.5 22.5503 mo
569.334 22.5317 569.171 22.5 569 22.5 cv
566.515 22.5 564.5 24.5146 564.5 27 cv
564.5 27.1714 564.532 27.3335 564.551 27.5 cv
@
545.449 27.5 mo
545.468 27.3335 545.5 27.1714 545.5 27 cv
545.5 24.5146 543.485 22.5 541 22.5 cv
540.829 22.5 540.666 22.5317 540.5 22.5503 cv
@
540.5 12 mo
540.5 26 li
540.5 26.8286 541.172 27.5 542 27.5 cv
568 27.5 li
568.828 27.5 569.5 26.8286 569.5 26 cv
569.5 10 li
569.5 9.17139 568.828 8.5 568 8.5 cv
550.694 8.5 li
@
551.521 11.9297 mo
551.521 15.0029 549.056 17.5 546.021 17.5 cv
542.986 17.5 540.521 15.0029 540.521 11.9297 cv
540.521 11.8247 540.521 11.7197 540.527 11.6152 cv
540.618 8.41699 542.5 7.5 542.5 7.5 cv
542.5 7.5 542.6 10.5 544.5 10.5 cv
544.5 9.53027 544.589 7.71484 545 6.5 cv
545.53 4.93457 546.443 3.66797 547.854 2.646 cv
547.854 6.35937 551.158 6.98193 551.488 11.3335 cv
551.501 11.5298 551.521 11.7197 551.521 11.9297 cv
cp
@
60.5562 15.062 mo
74.7002 17.627 li
75.3135 17.7432 75.9458 17.4019 76.1865 16.8247 cv
81.8066 3.56885 li
@
74.2065 26.5 mo
88.7114 18.6714 li
89.4404 18.2778 89.7129 17.3667 89.3203 16.6362 cv
82.6831 4.29004 li
82.29 3.55957 81.3809 3.28662 80.6519 3.68018 cv
61.2886 14.1304 li
60.5596 14.5239 60.2871 15.4351 60.6797 16.166 cv
66.2354 26.5 li
@
63.0088 26.5 mo
86.5088 26.5 li
@
80.5 80.5 mo
85.5 80.5 li
85.5 74.5 li
80.5 74.5 li
80.5 80.5 li
cp
@
68.5 84.5 mo
77.5 84.5 li
@
68.5 81.5 mo
73.5 81.5 li
@
85.7964 70.4751 mo
81.9185 63.2627 li
81.5391 62.5576 80.6611 62.2939 79.957 62.6738 cv
61.2612 72.7627 li
60.5576 73.1426 60.2944 74.022 60.6733 74.7275 cv
64.5083 81.8594 li
@
77.7021 70.4751 mo
80.9829 62.5527 li
@
60.5723 73.5796 mo
64.5083 74.3311 li
@
88 87.5 mo
66 87.5 li
65.1714 87.5 64.5 86.8286 64.5 86 cv
64.5 72 li
64.5 71.1714 65.1714 70.5 66 70.5 cv
88 70.5 li
88.8286 70.5 89.5 71.1714 89.5 72 cv
89.5 86 li
89.5 86.8286 88.8286 87.5 88 87.5 cv
cp
@
148 205.5 mo
122 205.5 li
121.171 205.5 120.5 204.829 120.5 204 cv
120.5 186 li
120.5 185.171 121.171 184.5 122 184.5 cv
148 184.5 li
148.829 184.5 149.5 185.171 149.5 186 cv
149.5 204 li
149.5 204.829 148.829 205.5 148 205.5 cv
cp
@
140.5 194.5 mo
145.5 194.5 li
145.5 188.5 li
140.5 188.5 li
140.5 194.5 li
cp
@
124.5 201.5 mo
134.5 201.5 li
@
124.5 198.5 mo
129.5 198.5 li
@
263.5 73.5 mo
263.5 66 li
263.5 65.1714 262.829 64.5 262 64.5 cv
242 64.5 li
241.171 64.5 240.5 65.1714 240.5 66 cv
240.5 79 li
240.5 79.8286 241.171 80.5 242 80.5 cv
257.59 80.5 li
@
240.94 64.9399 mo
249.73 72.8071 li
250.226 73.2529 250.869 73.5 251.536 73.5 cv
251.536 73.5 li
252.16 73.5 252.764 73.2842 253.246 72.8896 cv
263.059 64.9414 li
@
257.5 79.5 mo
257.5 76.1865 260.187 73.5 263.5 73.5 cv
266.813 73.5 269.5 76.1865 269.5 79.5 cv
269.5 82.8135 266.813 85.5 263.5 85.5 cv
260.187 85.5 257.5 82.8135 257.5 79.5 cv
cp
@
267.578 83.8789 mo
267.488 83.7993 267.402 83.7153 267.299 83.6548 cv
266.413 83.1323 265.025 82.5 263.5 82.5 cv
261.975 82.5 260.587 83.1323 259.701 83.6548 cv
259.598 83.7153 259.512 83.7993 259.422 83.8789 cv
@
266 78.5 mo
266 79.8809 264.881 81 263.5 81 cv
262.119 81 261 79.8809 261 78.5 cv
261 77.1191 262.119 76 263.5 76 cv
264.881 76 266 77.1191 266 78.5 cv
cp
@
207.5 136.5 mo
203.5 136.5 li
202.396 136.5 201.5 137.396 201.5 138.5 cv
201.5 138.5 li
201.5 139.604 200.604 140.5 199.5 140.5 cv
190.5 140.5 li
189.396 140.5 188.5 139.604 188.5 138.5 cv
188.5 138.5 li
188.5 137.396 187.604 136.5 186.5 136.5 cv
182.5 136.5 li
@
182.5 136.5 mo
182.5 146 li
182.5 146.829 183.171 147.5 184 147.5 cv
206 147.5 li
206.829 147.5 207.5 146.829 207.5 146 cv
207.5 136.5 li
@
205.502 133.17 mo
207.5 136.5 li
@
182.5 136.5 mo
184.5 133.167 li
@
184.5 136.5 mo
184.5 124 li
184.5 123.171 185.171 122.5 186 122.5 cv
204 122.5 li
204.829 122.5 205.5 123.171 205.5 124 cv
205.5 136.5 li
@
195 127.5 mo
195 133.5 li
@
189 129.414 mo
189 133.586 li
189 133.851 189.105 134.105 189.293 134.293 cv
192.207 137.207 li
192.395 137.395 192.649 137.5 192.914 137.5 cv
197.046 137.5 li
197.334 137.5 197.609 137.375 197.799 137.159 cv
200.752 133.783 li
200.912 133.601 201 133.367 201 133.124 cv
201 129.414 li
201 129.149 200.895 128.895 200.707 128.707 cv
197.793 125.793 li
197.605 125.605 197.351 125.5 197.086 125.5 cv
192.914 125.5 li
192.649 125.5 192.395 125.605 192.207 125.793 cv
189.293 128.707 li
189.105 128.895 189 129.149 189 129.414 cv
cp
@
195.5 135.5 mo
195.5 135.776 195.276 136 195 136 cv
194.724 136 194.5 135.776 194.5 135.5 cv
194.5 135.224 194.724 135 195 135 cv
195.276 135 195.5 135.224 195.5 135.5 cv
cp
f
433.5 74.5 mo
433.5 78.25 li
@
420.5 74.5 mo
449.5 74.5 li
@
420.5 68.5 mo
420.5 66 li
420.5 65.1714 421.172 64.5 422 64.5 cv
424.5 64.5 li
@
424.5 85.5 mo
422 85.5 li
421.172 85.5 420.5 84.8286 420.5 84 cv
420.5 81.5 li
@
449.5 81.5 mo
449.5 84 li
449.5 84.8286 448.828 85.5 448 85.5 cv
445.5 85.5 li
@
445.5 64.5 mo
448 64.5 li
448.828 64.5 449.5 65.1714 449.5 66 cv
449.5 68.5 li
@
423.5 74.5 mo
423.5 81.5 li
@
436.5 74.5 mo
436.5 81.5 li
@
446.5 74.5 mo
446.5 81.5 li
@
433.5 74.5 mo
433.5 78.5 li
@
433.5 80.5 mo
433.5 81.5 li
@
439.5 74.5 mo
439.5 78.5 li
@
439.5 80.5 mo
439.5 81.5 li
@
443.5 74.5 mo
443.5 78.5 li
@
443.5 80.5 mo
443.5 81.5 li
@
430.5 74.5 mo
430.5 78.5 li
@
430.5 80.5 mo
430.5 81.5 li
@
427.5 74.5 mo
427.5 78.5 li
@
427.5 80.5 mo
427.5 81.5 li
@
446.5 68.5 mo
446.5 72.5 li
@
443.5 68.5 mo
443.5 72.5 li
@
439.5 68.5 mo
439.5 72.5 li
@
436.5 68.5 mo
436.5 72.5 li
@
433.5 72.5 mo
433.5 68.5 li
@
430.5 72.5 mo
430.5 68.5 li
@
427.5 72.5 mo
427.5 68.5 li
@
423.5 72.5 mo
423.5 68.5 li
@
369.5 70.5 mo
369.5 64 li
369.5 63.1714 370.172 62.5 371 62.5 cv
379 62.5 li
379.828 62.5 380.5 63.1714 380.5 64 cv
380.5 70.5 li
@
362.5 83.5 mo
387.5 83.5 li
@
387.5 68.5 mo
362.5 68.5 li
362.5 86 li
362.5 86.8286 363.172 87.5 364 87.5 cv
386 87.5 li
386.828 87.5 387.5 86.8286 387.5 86 cv
387.5 68.5 li
cp
@
125.476 84.5239 mo
127.708 86.7559 130.883 85.7637 132.619 87.5 cv
134.455 85.6646 145.665 74.4546 147.5 72.6191 cv
145.764 70.8828 146.756 67.7085 144.524 65.4761 cv
142.292 63.2441 139.117 64.2363 137.381 62.5 cv
135.545 64.3354 124.335 75.5454 122.5 77.3809 cv
124.236 79.1172 123.244 82.2915 125.476 84.5239 cv
cp
@
127.262 72.6191 mo
132.262 77.6191 130.595 79.5239 135.595 84.5239 cv
@
134.405 65.4761 mo
139.222 70.293 137.921 72.564 142.738 77.3809 cv
@
482.5 64.5 mo
484.368 64.5 li
485.038 64.5 485.627 64.9438 485.811 65.5879 cv
489.5 78.5 li
487.449 81.063 li
486.664 82.0449 487.363 83.5 488.621 83.5 cv
505.5 83.5 li
@
505.5 87.5 mo
505.5 88.6045 504.604 89.5 503.5 89.5 cv
502.396 89.5 501.5 88.6045 501.5 87.5 cv
501.5 86.3955 502.396 85.5 503.5 85.5 cv
504.604 85.5 505.5 86.3955 505.5 87.5 cv
cp
@
491.5 87.5 mo
491.5 88.6045 490.604 89.5 489.5 89.5 cv
488.396 89.5 487.5 88.6045 487.5 87.5 cv
487.5 86.3955 488.396 85.5 489.5 85.5 cv
490.604 85.5 491.5 86.3955 491.5 87.5 cv
cp
@
489.5 78.5 mo
502.051 78.5 li
502.631 78.5 503.158 78.166 503.406 77.6421 cv
507.072 69.9038 li
507.354 69.3086 507.5 68.6582 507.5 68 cv
507.5 67.1714 506.828 66.5 506 66.5 cv
501.489 66.5 li
@
491.511 66.5 mo
486.071 66.5 li
@
496.5 73 mo
500.875 71.0435 501.5 69.7065 501.5 65.6958 cv
501.5 62.0654 li
496.5 60.5 li
491.5 62.0654 li
491.5 65.6958 li
491.5 69.7065 492.125 71.0435 496.5 73 cv
cp
@
496.5 70.7969 mo
498.914 69.6348 499.388 68.8975 499.479 67 cv
496.5 67 li
496.5 70.7969 li
@
493.5 63.5352 mo
496.5 62.5957 li
496.5 67 li
493.5 67 li
493.5 63.5352 li
cp
@
540.5 70.5 mo
569.5 70.5 li
@
553.5 60.5 mo
546.5 70.5 li
@
556.5 60.5 mo
563.5 70.5 li
@
552.5 83.5 mo
557.5 83.5 li
@
555 81 mo
555 86 li
@
541.5 70.5 mo
545.65 82.4907 li
545.859 83.0947 546.429 83.5 547.068 83.5 cv
549 83.5 li
@
561 83.5 mo
562.932 83.5 li
563.571 83.5 564.141 83.0947 564.35 82.4907 cv
568.5 70.5 li
@
549 83.5 mo
549 80.1865 551.687 77.5 555 77.5 cv
558.313 77.5 561 80.1865 561 83.5 cv
561 86.8135 558.313 89.5 555 89.5 cv
551.687 89.5 549 86.8135 549 83.5 cv
cp
@
149.5 255 mo
149.5 263.008 143.008 269.5 135 269.5 cv
126.992 269.5 120.5 263.008 120.5 255 cv
120.5 246.992 126.992 240.5 135 240.5 cv
143.008 240.5 149.5 246.992 149.5 255 cv
cp
@
139 250.5 mo
139 252.709 137.209 254.5 135 254.5 cv
132.791 254.5 131 252.709 131 250.5 cv
131 248.291 132.791 246.5 135 246.5 cv
137.209 246.5 139 248.291 139 250.5 cv
cp
@
135 256.5 mo
132.299 256.5 129.843 257.554 128.272 258.425 cv
127.187 259.027 126.5 260.228 126.5 261.547 cv
126.5 262.188 li
126.5 262.912 127.043 263.5 127.714 263.5 cv
142.286 263.5 li
142.957 263.5 143.5 262.912 143.5 262.188 cv
143.5 261.547 li
143.5 260.228 142.813 259.027 141.728 258.425 cv
140.157 257.554 137.701 256.5 135 256.5 cv
cp
@
19.5 67 mo
19.5 70.5898 16.5898 73.5 13 73.5 cv
9.41016 73.5 6.5 70.5898 6.5 67 cv
6.5 63.4102 9.41016 60.5 13 60.5 cv
16.5898 60.5 19.5 63.4102 19.5 67 cv
cp
@
24.8765 80.2573 mo
24.4229 79.416 23.7456 78.709 22.8931 78.25 cv
20.5845 77.0049 16.9712 75.5 13 75.5 cv
9.02881 75.5 5.41553 77.0049 3.10693 78.25 cv
1.50928 79.1108 .5 80.8252 .5 82.7104 cv
.5 84 li
.5 84.8286 1.17139 85.5 2 85.5 cv
19.5508 85.5 li
@
28.7104 79.5 mo
24.6509 79.5 19.5 82.4395 19.5 86.0801 cv
19.5 86.8975 19.8076 87.7061 20.5508 88.4492 cv
21.2939 89.1924 22.1025 89.5 22.9194 89.5 cv
26.5605 89.5 29.5 84.3491 29.5 80.2896 cv
29.5 79.8535 29.1465 79.5 28.7104 79.5 cv
cp
@
27 82 mo
23.4844 83.5103 20.8359 85.1758 19.5 89.5 cv
@
439.5 127 mo
439.5 130.59 436.59 133.5 433 133.5 cv
429.41 133.5 426.5 130.59 426.5 127 cv
426.5 123.41 429.41 120.5 433 120.5 cv
436.59 120.5 439.5 123.41 439.5 127 cv
cp
@
444.289 139.396 mo
443.899 138.936 443.434 138.541 442.894 138.25 cv
440.584 137.005 436.972 135.5 433 135.5 cv
429.028 135.5 425.416 137.005 423.106 138.25 cv
421.51 139.111 420.5 140.825 420.5 142.71 cv
420.5 144 li
420.5 144.829 421.172 145.5 422 145.5 cv
442 145.5 li
@
445 137.5 mo
440.5 149.5 li
445 147.5 li
449.5 149.5 li
445 137.5 li
cp
@
127.438 139.413 mo
129.501 135.5 li
131.501 136.5 li
129.001 129.5 li
120.501 129.5 li
123.001 131.5 li
120.729 136.437 li
120.044 137.804 120.972 139.5 122.501 139.5 cv
132.501 139.5 li
132.501 147.5 li
128.501 147.5 li
127.26 147.5 126.097 146.891 125.39 145.871 cv
120.983 138.771 li
@
139.501 147.5 mo
141.288 147.5 li
142.519 147.5 143.672 146.891 144.373 145.871 cv
149.232 138.448 li
@
143.879 139.413 mo
140.752 134.37 li
146.381 131.217 li
149.283 136.437 li
149.961 137.804 149.018 139.5 147.501 139.5 cv
139.501 139.5 li
@
135.635 124.913 mo
132.482 129.326 li
125.546 125.543 li
128.246 121.944 li
129.708 119.996 132.65 120.057 134.03 122.063 cv
138.158 128.065 li
135.635 129.326 li
142.572 130.587 li
145.501 123 li
143.203 124.283 li
141.429 121.623 li
140.961 120.921 140.174 120.5 139.331 120.5 cv
131.852 120.5 li
@
139.501 147.5 mo
139.501 149.5 li
134.501 143.5 li
139.501 137.5 li
139.501 139.5 li
@
318 132 mo
322 132 li
@
320 132 mo
320 138 li
@
316.5 138 mo
313.5 138 li
313.5 132 li
316.5 132 li
@
313.5 135 mo
316 135 li
@
308.5 138 mo
308.5 132 li
310 132 li
310.829 132 311.5 132.671 311.5 133.5 cv
311.5 133.5 li
311.5 134.329 310.829 135 310 135 cv
308.5 135 li
@
327.22 142.78 mo
325.5 137.495 li
329.279 137.495 li
@
327.22 142.78 mo
328.657 140.529 329.5 137.863 329.5 134.994 cv
329.5 128.523 325.262 123.047 319.412 121.179 cv
@
302.147 141.688 mo
307.583 142.84 li
305.694 146.114 li
@
302.147 141.688 mo
303.378 144.058 305.265 146.122 307.749 147.556 cv
313.351 150.791 320.211 149.858 324.754 145.725 cv
@
315.629 120.515 mo
311.914 124.647 li
310.024 121.374 li
@
315.629 120.515 mo
312.962 120.396 310.232 120.999 307.749 122.433 cv
302.146 125.668 299.523 132.078 300.831 138.079 cv
@
557.5 197 mo
559.3 197.832 564.905 200.428 564.905 200.428 cv
565.442 200.62 566.049 200.423 566.344 199.896 cv
566.638 199.369 566.5 198.728 566.071 198.344 cv
566.071 198.344 561.172 194.916 559.574 193.722 cv
556.815 189.875 li
556.815 189.794 556.166 181.52 556.166 181.52 cv
556.058 180.944 555.59 180.5 555 180.5 cv
554.41 180.5 553.942 180.944 553.834 181.52 cv
553.834 181.52 553.185 189.794 553.185 189.875 cv
550.426 193.722 li
548.828 194.916 543.929 198.344 543.929 198.344 cv
543.5 198.728 543.362 199.369 543.656 199.896 cv
543.951 200.423 544.558 200.62 545.095 200.428 cv
545.095 200.428 550.857 197.832 552.658 197 cv
557.5 197 li
cp
@
555.5 194 mo
555.5 194.276 555.276 194.5 555 194.5 cv
554.724 194.5 554.5 194.276 554.5 194 cv
554.5 193.724 554.724 193.5 555 193.5 cv
555.276 193.5 555.5 193.724 555.5 194 cv
cp
@
553.5 197 mo
552 209.5 li
558 209.5 li
556.5 197 li
@
429.5 206 mo
429.5 206.276 429.276 206.5 429 206.5 cv
428.724 206.5 428.5 206.276 428.5 206 cv
428.5 205.724 428.724 205.5 429 205.5 cv
429.276 205.5 429.5 205.724 429.5 206 cv
cp
f
431.5 195 mo
431.5 192.515 433.515 190.5 436 190.5 cv
437.554 190.5 438.923 191.287 439.731 192.484 cv
@
440.5 195 mo
440.5 197.485 438.485 199.5 436 199.5 cv
434.446 199.5 433.077 198.713 432.269 197.516 cv
@
431.5 195 mo
433.5 193.5 li
@
440.5 195 mo
438.5 196.5 li
@
426.5 184.5 mo
428.664 202.534 li
@
430.125 209.299 mo
430.339 209.416 430.572 209.5 430.831 209.5 cv
441.169 209.5 li
441.929 209.5 442.568 208.933 442.658 208.179 cv
445.5 184.5 li
@
432.5 206 mo
432.5 204.067 430.933 202.5 429 202.5 cv
427.067 202.5 425.5 204.067 425.5 206 cv
425.5 207.933 427.067 209.5 429 209.5 cv
430.933 209.5 432.5 207.933 432.5 206 cv
cp
@
446.5 184.5 mo
425.5 184.5 li
425.5 182 li
425.5 181.171 426.172 180.5 427 180.5 cv
445 180.5 li
445.828 180.5 446.5 181.171 446.5 182 cv
446.5 184.5 li
cp
@
492.5 132 mo
492.5 132.276 492.276 132.5 492 132.5 cv
491.724 132.5 491.5 132.276 491.5 132 cv
491.5 131.724 491.724 131.5 492 131.5 cv
492.276 131.5 492.5 131.724 492.5 132 cv
cp
@
498.5 132 mo
498.5 132.276 498.276 132.5 498 132.5 cv
497.724 132.5 497.5 132.276 497.5 132 cv
497.5 131.724 497.724 131.5 498 131.5 cv
498.276 131.5 498.5 131.724 498.5 132 cv
cp
@
492.5 138 mo
492.5 138.276 492.276 138.5 492 138.5 cv
491.724 138.5 491.5 138.276 491.5 138 cv
491.5 137.724 491.724 137.5 492 137.5 cv
492.276 137.5 492.5 137.724 492.5 138 cv
cp
@
498.5 138 mo
498.5 138.276 498.276 138.5 498 138.5 cv
497.724 138.5 497.5 138.276 497.5 138 cv
497.5 137.724 497.724 137.5 498 137.5 cv
498.276 137.5 498.5 137.724 498.5 138 cv
cp
@
495.5 135 mo
495.5 135.276 495.276 135.5 495 135.5 cv
494.724 135.5 494.5 135.276 494.5 135 cv
494.5 134.724 494.724 134.5 495 134.5 cv
495.276 134.5 495.5 134.724 495.5 135 cv
cp
@
499 147.5 mo
491 147.5 li
490.172 147.5 489.5 146.829 489.5 146 cv
489.5 124 li
489.5 123.171 490.172 122.5 491 122.5 cv
499 122.5 li
499.828 122.5 500.5 123.171 500.5 124 cv
500.5 146 li
500.5 146.829 499.828 147.5 499 147.5 cv
cp
@
482.5 139 mo
482.5 131 li
482.5 130.171 483.172 129.5 484 129.5 cv
506 129.5 li
506.828 129.5 507.5 130.171 507.5 131 cv
507.5 139 li
507.5 139.829 506.828 140.5 506 140.5 cv
484 140.5 li
483.172 140.5 482.5 139.829 482.5 139 cv
cp
@
269.5 130.781 mo
265.953 124.719 li
258.5 128.965 li
258.5 120.5 li
251.5 120.5 li
251.5 128.965 li
244.047 124.719 li
240.5 130.781 li
247.906 135 li
240.5 139.219 li
244.047 145.281 li
251.5 141.035 li
251.5 149.5 li
258.5 149.5 li
258.5 141.035 li
265.953 145.281 li
269.5 139.219 li
262.094 135 li
269.5 130.781 li
cp
@
189 60.5 mo
189 68.5 li
@
193 60.5 mo
193 68.5 li
@
197 60.5 mo
197 68.5 li
@
201 60.5 mo
201 68.5 li
@
185.5 74.5 mo
204.5 74.5 li
@
185.5 83.5 mo
204.5 83.5 li
@
190.5 77.5 mo
199.5 77.5 li
@
190.5 80.5 mo
199.5 80.5 li
@
202.5 68.5 mo
187.5 68.5 li
186.508 69.9883 li
185.851 70.9741 185.5 72.1323 185.5 73.3169 cv
185.5 88 li
185.5 88.8286 186.171 89.5 187 89.5 cv
203 89.5 li
203.829 89.5 204.5 88.8286 204.5 88 cv
204.5 73.3169 li
204.5 72.1323 204.149 70.9741 203.492 69.9883 cv
202.5 68.5 li
cp
@
203 68.5 mo
187 68.5 li
186.171 68.5 185.5 67.8286 185.5 67 cv
185.5 62 li
185.5 61.1714 186.171 60.5 187 60.5 cv
203 60.5 li
203.829 60.5 204.5 61.1714 204.5 62 cv
204.5 67 li
204.5 67.8286 203.829 68.5 203 68.5 cv
cp
@
555 125.5 mo
560.247 125.5 564.5 129.753 564.5 135 cv
564.5 140.247 560.247 144.5 555 144.5 cv
549.753 144.5 545.5 140.247 545.5 135 cv
@
555 141.5 mo
551.41 141.5 548.5 138.59 548.5 135 cv
548.5 131.41 551.41 128.5 555 128.5 cv
558.59 128.5 561.5 131.41 561.5 135 cv
@
566 122.5 mo
565.408 122.5 li
565.201 123.081 564.652 123.5 564 123.5 cv
563.348 123.5 562.799 123.081 562.592 122.5 cv
562.408 122.5 li
562.201 123.081 561.652 123.5 561 123.5 cv
560.348 123.5 559.799 123.081 559.592 122.5 cv
559.408 122.5 li
559.201 123.081 558.652 123.5 558 123.5 cv
557.348 123.5 556.799 123.081 556.592 122.5 cv
556.408 122.5 li
556.201 123.081 555.652 123.5 555 123.5 cv
554.348 123.5 553.799 123.081 553.592 122.5 cv
553.408 122.5 li
553.201 123.081 552.652 123.5 552 123.5 cv
551.348 123.5 550.799 123.081 550.592 122.5 cv
550.408 122.5 li
550.201 123.081 549.652 123.5 549 123.5 cv
548.348 123.5 547.799 123.081 547.592 122.5 cv
547.408 122.5 li
547.201 123.081 546.652 123.5 546 123.5 cv
545.348 123.5 544.799 123.081 544.592 122.5 cv
544 122.5 li
543.172 122.5 542.5 123.171 542.5 124 cv
542.5 146 li
542.5 146.829 543.172 147.5 544 147.5 cv
544.592 147.5 li
544.799 146.919 545.348 146.5 546 146.5 cv
546.652 146.5 547.201 146.919 547.408 147.5 cv
547.592 147.5 li
547.799 146.919 548.348 146.5 549 146.5 cv
549.652 146.5 550.201 146.919 550.408 147.5 cv
550.592 147.5 li
550.799 146.919 551.348 146.5 552 146.5 cv
552.652 146.5 553.201 146.919 553.408 147.5 cv
553.592 147.5 li
553.799 146.919 554.348 146.5 555 146.5 cv
555.652 146.5 556.201 146.919 556.408 147.5 cv
556.592 147.5 li
556.799 146.919 557.348 146.5 558 146.5 cv
558.652 146.5 559.201 146.919 559.408 147.5 cv
559.592 147.5 li
559.799 146.919 560.348 146.5 561 146.5 cv
561.652 146.5 562.201 146.919 562.408 147.5 cv
562.592 147.5 li
562.799 146.919 563.348 146.5 564 146.5 cv
564.652 146.5 565.201 146.919 565.408 147.5 cv
566 147.5 li
566.828 147.5 567.5 146.829 567.5 146 cv
567.5 124 li
567.5 123.171 566.828 122.5 566 122.5 cv
cp
@
4.5 189.5 mo
6 188 li
@
7 192 mo
8.5 190.5 li
@
18 203 mo
19.5 201.5 li
@
20.5 205.5 mo
22 204 li
@
14.4834 189.483 mo
7.5 182.5 li
2.5 187.5 li
9.50977 194.51 li
@
15.5264 200.526 mo
22.5 207.5 li
27.5 202.5 li
20.5366 195.537 li
@
18 186 mo
24 192 li
@
5 199 mo
7.5 199 li
8 202 li
10.5 202.997 li
10.5 205.531 li
@
3.74121 203.241 mo
6.91602 206.416 li
@
21 189 mo
8 202 li
@
10.5 205.531 mo
26.9771 189.12 li
27.3003 188.797 27.5 188.35 27.5 187.857 cv
27.5 187.364 27.3003 186.917 26.9771 186.594 cv
23.4058 183.023 li
23.0825 182.7 22.6362 182.5 22.1431 182.5 cv
21.6499 182.5 21.2031 182.7 20.8804 183.023 cv
5 199 li
2.5 207.5 li
10.5 205.531 li
cp
@
182.5 207.5 mo
193.583 196.167 193.658 198.52 201.5 190.5 cv
@
207.497 182.5 mo
203.653 186.296 200.599 187.645 197.5 189 cv
196.5 191.5 li
196.5 191.5 196.23 190.374 195.882 189.669 cv
194.082 190.481 192.452 191.344 191.019 192.696 cv
191.004 193.26 191.157 193.741 191.5 194.5 cv
190.906 194.541 190.286 194.43 189.806 194.027 cv
186.681 198.028 186.5 203.232 186.5 203.232 cv
186.5 203.232 191.049 205.448 199.469 197.134 cv
207.889 188.821 207.497 182.5 207.497 182.5 cv
cp
@
209.5 15 mo
209.5 23.0083 203.008 29.5 195 29.5 cv
186.992 29.5 180.5 23.0083 180.5 15 cv
180.5 6.9917 186.992 .5 195 .5 cv
203.008 .5 209.5 6.9917 209.5 15 cv
cp
@
4 ml
180.5 14.5 mo
180.5 14.1655 180.549 13.8364 180.643 13.5146 cv
@
[1.98706 2.98059 ] 0 dsh
182.322 11.1001 mo
184.798 8.95264 189.548 7.5 195 7.5 cv
201.326 7.5 206.706 9.45557 208.687 12.1826 cv
@
[] 0 dsh
209.357 13.5146 mo
209.451 13.8364 209.5 14.1655 209.5 14.5 cv
@
10 ml
209.5 15.5 mo
209.5 19.3662 203.008 22.5 195 22.5 cv
186.992 22.5 180.5 19.3662 180.5 15.5 cv
@
4 ml
195.5 .5 mo
195.834 .5 196.164 .548828 196.485 .642578 cv
@
[1.98706 2.98059 ] 0 dsh
198.9 2.32227 mo
201.047 4.79834 202.5 9.54785 202.5 15 cv
202.5 21.3257 200.544 26.7056 197.817 28.6865 cv
@
[] 0 dsh
196.485 29.3574 mo
196.164 29.4512 195.834 29.5 195.5 29.5 cv
@
10 ml
194.5 29.5 mo
190.634 29.5 187.5 23.0083 187.5 15 cv
187.5 6.9917 190.634 .5 194.5 .5 cv
@
84.5381 183.536 mo
84.5381 186.536 li
81.5381 186.536 li
@
84.4463 186.28 mo
81.9932 183.959 78.6821 182.536 75.0391 182.536 cv
71.0298 182.536 67.4229 184.259 64.9189 187.006 cv
@
62.5381 187.536 mo
62.5381 207.536 li
72.5381 197.536 li
62.5381 187.536 li
cp
@
87.5381 187.536 mo
87.5381 207.536 li
77.5381 197.538 li
87.5381 187.536 li
cp
@
4 ml
75.0381 207.536 mo
75.0381 206.536 li
@
[2.15873 3.2381 ] 0 dsh
75.0381 203.298 mo
75.0381 188.727 li
@
[] 0 dsh
75.0381 187.107 mo
75.0381 186.107 li
@
10 ml
263 209.5 mo
247 209.5 li
246.171 209.5 245.5 208.829 245.5 208 cv
245.5 182 li
245.5 181.171 246.171 180.5 247 180.5 cv
263 180.5 li
263.829 180.5 264.5 181.171 264.5 182 cv
264.5 208 li
264.5 208.829 263.829 209.5 263 209.5 cv
cp
@
254.5 182.5 mo
255.5 182.5 li
@
253.5 207.5 mo
256.5 207.5 li
@
263 182.5 mo
263 182.776 262.776 183 262.5 183 cv
262.224 183 262 182.776 262 182.5 cv
262 182.224 262.224 182 262.5 182 cv
262.776 182 263 182.224 263 182.5 cv
cp
f
245.5 205.5 mo
264.5 205.5 li
@
378.411 197.583 mo
378.42 197.58 li
377.153 193.359 li
377.139 193.364 li
376.976 192.867 376.505 192.5 375.929 192.5 cv
375.583 192.5 361.489 196.818 361.427 196.847 cv
360.896 196.997 360.5 197.446 360.5 198 cv
360.5 198.097 360.534 198.279 360.534 198.279 cv
361.811 202.515 li
361.835 202.508 li
361.951 203.068 362.447 203.5 363.071 203.5 cv
363.272 203.5 377.511 199.182 377.573 199.153 cv
378.104 199.003 378.5 198.554 378.5 198 cv
378.5 197.852 378.462 197.714 378.411 197.583 cv
cp
@
374 196 mo
374 196.552 373.553 197 373 197 cv
372.447 197 372 196.552 372 196 cv
372 195.448 372.447 195 373 195 cv
373.553 195 374 195.448 374 196 cv
cp
@
368.512 194.5 mo
368.772 188.933 373.369 184.5 379 184.5 cv
384.799 184.5 389.5 189.201 389.5 195 cv
389.5 200.799 384.799 205.5 379 205.5 cv
@
317.5 75 mo
317.5 76.3809 316.381 77.5 315 77.5 cv
313.619 77.5 312.5 76.3809 312.5 75 cv
312.5 73.6191 313.619 72.5 315 72.5 cv
316.381 72.5 317.5 73.6191 317.5 75 cv
cp
@
306.868 83.8682 mo
311.359 79.3774 318.641 79.3774 323.132 83.8682 cv
323.868 83.1318 li
319.377 78.6406 319.377 71.3594 323.868 66.8682 cv
323.132 66.1318 li
318.641 70.6226 311.359 70.6226 306.868 66.1318 cv
306.132 66.8682 li
310.623 71.3594 310.623 78.6406 306.132 83.1318 cv
306.868 83.8682 li
cp
@
307 71.5 mo
304.515 71.5 302.5 69.4854 302.5 67 cv
302.5 64.5146 304.515 62.5 307 62.5 cv
309.485 62.5 311.5 64.5146 311.5 67 cv
@
318.5 67 mo
318.5 64.5146 320.515 62.5 323 62.5 cv
325.485 62.5 327.5 64.5146 327.5 67 cv
327.5 69.4854 325.485 71.5 323 71.5 cv
@
311.5 83 mo
311.5 85.4854 309.485 87.5 307 87.5 cv
304.515 87.5 302.5 85.4854 302.5 83 cv
302.5 80.5146 304.515 78.5 307 78.5 cv
@
323 78.5 mo
325.485 78.5 327.5 80.5146 327.5 83 cv
327.5 85.4854 325.485 87.5 323 87.5 cv
320.515 87.5 318.5 85.4854 318.5 83 cv
@
428.5 366.5 mo
429 360.5 li
440 360.5 li
440.5 366.5 li
@
428.5 383.5 mo
429 389.5 li
440 389.5 li
440.5 383.5 li
@
441 383.5 mo
428 383.5 li
427.172 383.5 426.5 382.828 426.5 382 cv
426.5 368 li
426.5 367.172 427.172 366.5 428 366.5 cv
441 366.5 li
441.828 366.5 442.5 367.172 442.5 368 cv
442.5 382 li
442.5 382.828 441.828 383.5 441 383.5 cv
cp
@
442.5 376.5 mo
443 376.5 li
443 379.5 li
442.5 379.5 li
@
443.5 373.5 mo
442.5 373.5 li
442.5 370.5 li
443.5 370.5 li
443.5 373.5 li
cp
@
367 129.5 mo
367 129.776 366.776 130 366.5 130 cv
366.224 130 366 129.776 366 129.5 cv
366 129.224 366.224 129 366.5 129 cv
366.776 129 367 129.224 367 129.5 cv
cp
@
367.76 144.214 mo
369.538 146.249 371.899 147.5 374.5 147.5 cv
380.022 147.5 384.5 141.903 384.5 135 cv
384.5 128.097 380.022 122.5 374.5 122.5 cv
371.899 122.5 369.538 123.751 367.76 125.786 cv
@
365.242 144.215 mo
367.444 147.44 370.776 149.5 374.5 149.5 cv
381.117 149.5 386.5 142.995 386.5 135 cv
386.5 127.005 381.117 120.5 374.5 120.5 cv
370.776 120.5 367.444 122.56 365.242 125.785 cv
@
366.5 144.5 mo
366.5 144.5 li
364.843 144.5 363.5 143.157 363.5 141.5 cv
363.5 128.5 li
363.5 126.843 364.843 125.5 366.5 125.5 cv
366.5 125.5 li
368.157 125.5 369.5 126.843 369.5 128.5 cv
369.5 141.5 li
369.5 143.157 368.157 144.5 366.5 144.5 cv
cp
@
366.5 134.5 mo
366.5 134.5 li
365.947 134.5 365.5 134.948 365.5 135.5 cv
365.5 139.5 li
365.5 140.052 365.947 140.5 366.5 140.5 cv
366.5 140.5 li
367.053 140.5 367.5 140.052 367.5 139.5 cv
367.5 135.5 li
367.5 134.948 367.053 134.5 366.5 134.5 cv
cp
@
83 243.5 mo
67 243.5 li
66.1714 243.5 65.5 244.172 65.5 245 cv
65.5 268 li
65.5 268.828 66.1714 269.5 67 269.5 cv
83 269.5 li
83.8286 269.5 84.5 268.828 84.5 268 cv
84.5 245 li
84.5 244.172 83.8286 243.5 83 243.5 cv
cp
@
79.5 243.5 mo
79.5 240.5 li
70.5 240.5 li
70.5 243.5 li
@
67.5 256.5 mo
82.5 256.5 li
@
67.5 251 mo
82.5 251 li
@
67.5 262 mo
82.5 262 li
@
82.5 267.5 mo
67.5 267.5 li
67.5 245.5 li
82.5 245.5 li
82.5 267.5 li
cp
@
8.5 253.5 mo
10.1802 256.802 12.1982 258.809 15.5 260.5 cv
17.9785 258.71 li
18.2935 258.395 18.7598 258.29 19.1685 258.43 cv
20.4751 258.861 21.8867 259.095 23.3335 259.095 cv
23.9751 259.095 24.5 259.62 24.5 260.262 cv
24.5 264.333 li
24.5 264.975 23.9751 265.5 23.3335 265.5 cv
12.3784 265.5 3.5 256.622 3.5 245.667 cv
3.5 245.025 4.0249 244.5 4.6665 244.5 cv
8.75 244.5 li
9.3916 244.5 9.9165 245.025 9.9165 245.667 cv
9.9165 247.125 10.1499 248.525 10.5815 249.832 cv
10.71 250.24 10.6167 250.695 10.29 251.021 cv
8.5 253.5 li
cp
@
24 145.5 mo
6 145.5 li
5.17139 145.5 4.5 144.829 4.5 144 cv
4.5 126 li
4.5 125.171 5.17139 124.5 6 124.5 cv
24 124.5 li
24.8286 124.5 25.5 125.171 25.5 126 cv
25.5 144 li
25.5 144.829 24.8286 145.5 24 145.5 cv
cp
@
22.5 142.5 mo
7.5 142.5 li
7.5 127.5 li
22.5 127.5 li
22.5 142.5 li
cp
@
7.5 124.5 mo
7.5 122.5 li
@
22.5 124.5 mo
22.5 122.5 li
@
10.5 122.5 mo
10.5 124.5 li
@
13.5 122.5 mo
13.5 124.5 li
@
16.5 122.5 mo
16.5 124.5 li
@
19.5 122.5 mo
19.5 124.5 li
@
7.5 147.5 mo
7.5 145.5 li
@
22.5 147.5 mo
22.5 145.5 li
@
10.5 145.5 mo
10.5 147.5 li
@
13.5 145.5 mo
13.5 147.5 li
@
16.5 145.5 mo
16.5 147.5 li
@
19.5 145.5 mo
19.5 147.5 li
@
25.5 127.5 mo
27.5 127.5 li
@
25.5 142.5 mo
27.5 142.5 li
@
27.5 130.5 mo
25.5 130.5 li
@
27.5 133.5 mo
25.5 133.5 li
@
27.5 136.5 mo
25.5 136.5 li
@
27.5 139.5 mo
25.5 139.5 li
@
2.5 127.5 mo
4.5 127.5 li
@
2.5 142.5 mo
4.5 142.5 li
@
4.5 130.5 mo
2.5 130.5 li
@
4.5 133.5 mo
2.5 133.5 li
@
4.5 136.5 mo
2.5 136.5 li
@
4.5 139.5 mo
2.5 139.5 li
@
249.682 249.5 mo
249.029 249.5 248.5 250.051 248.5 250.73 cv
248.5 257.213 li
248.5 258.622 248.758 260.019 249.261 261.327 cv
250.864 265.5 li
259.136 265.5 li
260.739 261.327 li
261.242 260.019 261.5 258.622 261.5 257.213 cv
261.5 250.73 li
261.5 250.051 260.971 249.5 260.318 249.5 cv
@
253.5 265.5 mo
253.5 269.5 li
@
256.5 265.5 mo
256.5 269.5 li
@
260.5 249.5 mo
249.5 249.5 li
249.5 240.5 li
260.5 240.5 li
260.5 249.5 li
cp
@
252.5 245.5 mo
251.5 245.5 li
251.5 242.5 li
252.5 242.5 li
252.5 245.5 li
cp
@
258.5 245.5 mo
257.5 245.5 li
257.5 242.5 li
258.5 242.5 li
258.5 245.5 li
cp
@
362 5.5 mo
388 5.5 li
388.828 5.5 389.5 6.17139 389.5 7 cv
389.5 23 li
389.5 23.8286 388.828 24.5 388 24.5 cv
362 24.5 li
361.172 24.5 360.5 23.8286 360.5 23 cv
360.5 7 li
360.5 6.17139 361.172 5.5 362 5.5 cv
cp
@
366.5 12.3599 mo
366.5 12.3599 li
366.5 12.5479 366.516 12.7358 366.546 12.9204 cv
367.425 18.2012 li
367.647 19.5376 368.624 20.5 369.759 20.5 cv
380.241 20.5 li
381.376 20.5 382.353 19.5376 382.575 18.2012 cv
383.454 12.9204 li
383.484 12.7358 383.5 12.5479 383.5 12.3599 cv
383.5 12.3599 li
383.5 10.7803 382.435 9.5 381.12 9.5 cv
368.88 9.5 li
367.565 9.5 366.5 10.7803 366.5 12.3599 cv
cp
@
364.5 15 mo
364.5 15.2764 364.276 15.5 364 15.5 cv
363.724 15.5 363.5 15.2764 363.5 15 cv
363.5 14.7236 363.724 14.5 364 14.5 cv
364.276 14.5 364.5 14.7236 364.5 15 cv
cp
@
386.5 15 mo
386.5 15.2764 386.276 15.5 386 15.5 cv
385.724 15.5 385.5 15.2764 385.5 15 cv
385.5 14.7236 385.724 14.5 386 14.5 cv
386.276 14.5 386.5 14.7236 386.5 15 cv
cp
@
370 12.5 mo
370 12.7764 369.776 13 369.5 13 cv
369.224 13 369 12.7764 369 12.5 cv
369 12.2236 369.224 12 369.5 12 cv
369.776 12 370 12.2236 370 12.5 cv
cp
f
372 12.5 mo
372 12.7764 371.776 13 371.5 13 cv
371.224 13 371 12.7764 371 12.5 cv
371 12.2236 371.224 12 371.5 12 cv
371.776 12 372 12.2236 372 12.5 cv
cp
f
374 12.5 mo
374 12.7764 373.776 13 373.5 13 cv
373.224 13 373 12.7764 373 12.5 cv
373 12.2236 373.224 12 373.5 12 cv
373.776 12 374 12.2236 374 12.5 cv
cp
f
376 12.5 mo
376 12.7764 375.776 13 375.5 13 cv
375.224 13 375 12.7764 375 12.5 cv
375 12.2236 375.224 12 375.5 12 cv
375.776 12 376 12.2236 376 12.5 cv
cp
f
378 12.5 mo
378 12.7764 377.776 13 377.5 13 cv
377.224 13 377 12.7764 377 12.5 cv
377 12.2236 377.224 12 377.5 12 cv
377.776 12 378 12.2236 378 12.5 cv
cp
f
380 12.5 mo
380 12.7764 379.776 13 379.5 13 cv
379.224 13 379 12.7764 379 12.5 cv
379 12.2236 379.224 12 379.5 12 cv
379.776 12 380 12.2236 380 12.5 cv
cp
f
371 15 mo
371 15.2764 370.776 15.5 370.5 15.5 cv
370.224 15.5 370 15.2764 370 15 cv
370 14.7236 370.224 14.5 370.5 14.5 cv
370.776 14.5 371 14.7236 371 15 cv
cp
f
373 15 mo
373 15.2764 372.776 15.5 372.5 15.5 cv
372.224 15.5 372 15.2764 372 15 cv
372 14.7236 372.224 14.5 372.5 14.5 cv
372.776 14.5 373 14.7236 373 15 cv
cp
f
375 15 mo
375 15.2764 374.776 15.5 374.5 15.5 cv
374.224 15.5 374 15.2764 374 15 cv
374 14.7236 374.224 14.5 374.5 14.5 cv
374.776 14.5 375 14.7236 375 15 cv
cp
f
377 15 mo
377 15.2764 376.776 15.5 376.5 15.5 cv
376.224 15.5 376 15.2764 376 15 cv
376 14.7236 376.224 14.5 376.5 14.5 cv
376.776 14.5 377 14.7236 377 15 cv
cp
f
379 15 mo
379 15.2764 378.776 15.5 378.5 15.5 cv
378.224 15.5 378 15.2764 378 15 cv
378 14.7236 378.224 14.5 378.5 14.5 cv
378.776 14.5 379 14.7236 379 15 cv
cp
f
381 15 mo
381 15.2764 380.776 15.5 380.5 15.5 cv
380.224 15.5 380 15.2764 380 15 cv
380 14.7236 380.224 14.5 380.5 14.5 cv
380.776 14.5 381 14.7236 381 15 cv
cp
f
370 17.5 mo
370 17.7764 369.776 18 369.5 18 cv
369.224 18 369 17.7764 369 17.5 cv
369 17.2236 369.224 17 369.5 17 cv
369.776 17 370 17.2236 370 17.5 cv
cp
f
372 17.5 mo
372 17.7764 371.776 18 371.5 18 cv
371.224 18 371 17.7764 371 17.5 cv
371 17.2236 371.224 17 371.5 17 cv
371.776 17 372 17.2236 372 17.5 cv
cp
f
374 17.5 mo
374 17.7764 373.776 18 373.5 18 cv
373.224 18 373 17.7764 373 17.5 cv
373 17.2236 373.224 17 373.5 17 cv
373.776 17 374 17.2236 374 17.5 cv
cp
f
376 17.5 mo
376 17.7764 375.776 18 375.5 18 cv
375.224 18 375 17.7764 375 17.5 cv
375 17.2236 375.224 17 375.5 17 cv
375.776 17 376 17.2236 376 17.5 cv
cp
f
378 17.5 mo
378 17.7764 377.776 18 377.5 18 cv
377.224 18 377 17.7764 377 17.5 cv
377 17.2236 377.224 17 377.5 17 cv
377.776 17 378 17.2236 378 17.5 cv
cp
f
380 17.5 mo
380 17.7764 379.776 18 379.5 18 cv
379.224 18 379 17.7764 379 17.5 cv
379 17.2236 379.224 17 379.5 17 cv
379.776 17 380 17.2236 380 17.5 cv
cp
f
325.5 250.5 mo
325.824 250.5 326.14 250.539 326.442 250.611 cv
@
326.942 258.222 mo
328.436 257.642 329.5 256.199 329.5 254.5 cv
329.5 252.616 328.193 251.047 326.439 250.623 cv
326.007 247.172 323.068 244.5 319.5 244.5 cv
317.036 244.5 314.876 245.777 313.63 247.702 cv
@
322.5 255.5 mo
323.19 255.5 323.848 255.64 324.446 255.893 cv
@
306.5 253.5 mo
307.607 253.5 308.644 253.8 309.534 254.322 cv
@
324.47 255.906 mo
324.163 251.214 320.27 247.5 315.5 247.5 cv
311.573 247.5 308.243 250.02 307.014 253.526 cv
306.844 253.512 306.673 253.5 306.5 253.5 cv
303.187 253.5 300.5 256.187 300.5 259.5 cv
300.5 262.813 303.187 265.5 306.5 265.5 cv
308.033 265.5 321.396 265.5 322.5 265.5 cv
325.261 265.5 327.5 263.262 327.5 260.5 cv
327.5 258.438 326.251 256.671 324.47 255.906 cv
cp
@
201.5 437.5 mo
196.5 437.5 li
195.5 436.5 li
190.5 436.5 li
189.948 436.5 189.5 437.025 189.5 437.674 cv
189.5 445.326 li
189.5 445.975 189.948 446.5 190.5 446.5 cv
201.5 446.5 li
202.052 446.5 202.5 445.975 202.5 445.326 cv
202.5 438.674 li
202.5 438.025 202.052 437.5 201.5 437.5 cv
cp
@
187 429.5 mo
188.289 429.5 189.489 429.875 190.5 430.521 cv
@
204.5 432.5 mo
204.836 432.5 205.164 432.533 205.481 432.596 cv
@
202.5 442.5 mo
204.288 442.5 204.131 442.5 204.5 442.5 cv
207.261 442.5 209.5 440.262 209.5 437.5 cv
209.5 435.074 207.771 433.055 205.479 432.599 cv
205.268 427.54 201.111 423.5 196 423.5 cv
191.987 423.5 188.563 425.991 187.171 429.509 cv
187.114 429.507 187.058 429.5 187 429.5 cv
183.41 429.5 180.5 432.41 180.5 436 cv
180.5 439.59 183.41 442.5 187 442.5 cv
187.28 442.5 188.502 442.5 189.5 442.5 cv
@
247 310.5 mo
248.289 310.5 249.489 310.875 250.5 311.521 cv
@
264.5 313.5 mo
264.836 313.5 265.164 313.533 265.481 313.596 cv
@
261.5 323.5 mo
263.288 323.5 264.131 323.5 264.5 323.5 cv
267.261 323.5 269.5 321.262 269.5 318.5 cv
269.5 316.074 267.771 314.055 265.479 313.599 cv
265.268 308.54 261.111 304.5 256 304.5 cv
251.987 304.5 248.563 306.991 247.171 310.509 cv
247.114 310.507 247.058 310.5 247 310.5 cv
243.41 310.5 240.5 313.41 240.5 317 cv
240.5 320.59 243.41 323.5 247 323.5 cv
247.28 323.5 248.502 323.5 249.5 323.5 cv
@
249.5 321.5 mo
249.5 318.187 252.187 315.5 255.5 315.5 cv
258.813 315.5 261.5 318.187 261.5 321.5 cv
261.5 324.813 258.813 327.5 255.5 327.5 cv
252.187 327.5 249.5 324.813 249.5 321.5 cv
cp
@
252 322 mo
254 324 li
259 319 li
@
494.5 182.5 mo
494.5 187.5 li
497.5 187.5 li
497.5 182.5 li
494.5 182.5 li
cp
@
500.5 198.304 mo
500.5 191.5 li
483.5 191.5 li
483.5 202.5 li
@
503.5 197.5 mo
503.5 184 li
500 180.5 li
482 180.5 li
481.172 180.5 480.5 181.171 480.5 182 cv
480.5 201 li
480.5 201.829 481.172 202.5 482 202.5 cv
497.5 202.5 li
@
499.5 180.5 mo
499.5 188 li
499.5 188.829 498.828 189.5 498 189.5 cv
486 189.5 li
485.172 189.5 484.5 188.829 484.5 188 cv
484.5 180.5 li
@
503.5 200 mo
503.5 204 li
505.5 205.5 li
@
497.5 203.5 mo
497.5 200.187 500.187 197.5 503.5 197.5 cv
506.813 197.5 509.5 200.187 509.5 203.5 cv
509.5 206.813 506.813 209.5 503.5 209.5 cv
500.187 209.5 497.5 206.813 497.5 203.5 cv
cp
@
500.5 302.5 mo
507.5 309.5 li
502 315 li
495 308 li
500.5 302.5 li
cp
@
500.5 306.502 mo
501 307.001 li
499.5 308.5 li
499 308 li
499 308 500.5 306.439 500.5 306.502 cv
cp
@
503 309.001 mo
503.5 309.501 li
502 311 li
501.5 310.5 li
501.5 310.5 503 308.938 503 309.001 cv
cp
@
492 321.5 mo
492 319.567 490.433 318 488.5 318 cv
486.567 318 485 319.567 485 321.5 cv
485 323.433 486.567 325 488.5 325 cv
490.433 325 492 323.433 492 321.5 cv
cp
@
502.5 315.5 mo
494.5 307.5 li
484.157 317.843 li
483.096 318.904 482.5 320.343 482.5 321.843 cv
482.5 324.968 485.032 327.5 488.157 327.5 cv
489.657 327.5 491.096 326.904 492.157 325.843 cv
495.578 322.422 li
@
495.5 321.5 mo
495.5 318.187 498.187 315.5 501.5 315.5 cv
504.813 315.5 507.5 318.187 507.5 321.5 cv
507.5 324.813 504.813 327.5 501.5 327.5 cv
498.187 327.5 495.5 324.813 495.5 321.5 cv
cp
@
497.25 317.25 mo
505.75 325.75 li
@
555.5 255 mo
555.5 255.276 555.276 255.5 555 255.5 cv
554.724 255.5 554.5 255.276 554.5 255 cv
554.5 254.724 554.724 254.5 555 254.5 cv
555.276 254.5 555.5 254.724 555.5 255 cv
cp
@
560.5 255 mo
560.5 258.037 558.037 260.5 555 260.5 cv
551.963 260.5 549.5 258.037 549.5 255 cv
549.5 251.963 551.963 249.5 555 249.5 cv
558.037 249.5 560.5 251.963 560.5 255 cv
cp
@
547.5 247.651 mo
549.405 245.707 552.062 244.5 555 244.5 cv
@
566.99 263.152 mo
568.572 260.828 569.5 258.023 569.5 255 cv
569.5 246.992 563.008 240.5 555 240.5 cv
546.992 240.5 540.5 246.992 540.5 255 cv
540.5 263.008 546.992 269.5 555 269.5 cv
558.022 269.5 560.827 268.573 563.15 266.991 cv
@
565.899 265.9 mo
569.495 269.495 li
@
567 263.251 mo
567 265.322 565.321 267.001 563.249 267.001 cv
561.178 267.001 559.499 265.322 559.499 263.251 cv
559.499 261.179 561.178 259.5 563.249 259.5 cv
565.321 259.5 567 261.179 567 263.251 cv
cp
@
432.984 12.5 mo
442.5 12.5 li
@
427.252 19.5 mo
437.021 19.5 li
@
430.962 16 mo
435.843 7.5415 li
@
434.158 24.4585 mo
439.041 16 li
@
432.984 19.5 mo
428.096 11.041 li
@
441.904 20.9585 mo
437.021 12.5 li
@
443.5 16 mo
443.5 20.6943 439.694 24.5 435 24.5 cv
430.306 24.5 426.5 20.6943 426.5 16 cv
426.5 11.3057 430.306 7.5 435 7.5 cv
439.694 7.5 443.5 11.3057 443.5 16 cv
cp
@
446.5 11 mo
446.5 11.2764 446.276 11.5 446 11.5 cv
445.724 11.5 445.5 11.2764 445.5 11 cv
445.5 10.7236 445.724 10.5 446 10.5 cv
446.276 10.5 446.5 10.7236 446.5 11 cv
cp
@
440.947 6.39453 mo
440.053 4.60547 li
439.714 3.92822 439.021 3.5 438.264 3.5 cv
431.736 3.5 li
430.979 3.5 430.286 3.92822 429.947 4.60547 cv
429.053 6.39453 li
428.714 7.07178 428.021 7.5 427.264 7.5 cv
422 7.5 li
421.172 7.5 420.5 8.17139 420.5 9 cv
420.5 25 li
420.5 25.8286 421.172 26.5 422 26.5 cv
448 26.5 li
448.828 26.5 449.5 25.8286 449.5 25 cv
449.5 9 li
449.5 8.17139 448.828 7.5 448 7.5 cv
442.736 7.5 li
441.979 7.5 441.286 7.07178 440.947 6.39453 cv
cp
@
362.5 305.773 mo
362.5 316.227 li
362.5 318.034 368.097 319.5 375 319.5 cv
381.903 319.5 387.5 318.034 387.5 316.227 cv
387.5 305.773 li
@
364.94 303.929 mo
363.413 304.509 362.5 305.224 362.5 306 cv
362.5 307.933 368.097 309.5 375 309.5 cv
381.903 309.5 387.5 307.933 387.5 306 cv
387.5 305.224 386.587 304.509 385.06 303.929 cv
@
385.5 304.5 mo
385.5 305.604 380.799 306.5 375 306.5 cv
369.201 306.5 364.5 305.604 364.5 304.5 cv
364.5 303.396 369.201 302.5 375 302.5 cv
380.799 302.5 385.5 303.396 385.5 304.5 cv
cp
@
386.5 317.5 mo
385.657 318.314 385.5 319.854 385.5 322 cv
385.5 323.381 380.799 324.5 375 324.5 cv
369.201 324.5 364.5 323.381 364.5 322 cv
364.542 320.25 364.458 318.729 363.5 317.5 cv
@
384.5 323.065 mo
384.5 323.065 384.5 323.764 384.5 325.5 cv
384.5 326.604 380.247 327.5 375 327.5 cv
369.753 327.5 365.5 326.604 365.5 325.5 cv
365.5 323.764 365.5 323.065 365.5 323.065 cv
@
556.5 324.5 mo
556.5 315.5 li
559.262 315.5 561.5 313.262 561.5 310.5 cv
561.5 302.5 li
558.5 305.5 li
555 302.5 li
551.5 305.5 li
548.5 302.5 li
548.5 310.5 li
548.5 313.262 550.738 315.5 553.5 315.5 cv
553.5 327.5 li
559.5 327.5 li
563.918 327.5 567.5 323.918 567.5 319.5 cv
567.5 314.5 li
556.5 324.5 li
cp
@
542.5 314.5 mo
542.5 319.5 li
542.5 323.918 546.082 327.5 550.5 327.5 cv
551.5 327.5 li
551.5 322.5 li
542.5 314.5 li
cp
@
140.5 434 mo
140.5 437.037 138.038 439.5 135 439.5 cv
131.962 439.5 129.5 437.037 129.5 434 cv
129.5 430.963 131.962 428.5 135 428.5 cv
138.038 428.5 140.5 430.963 140.5 434 cv
cp
@
145.5 429 mo
145.5 429.276 145.276 429.5 145 429.5 cv
144.724 429.5 144.5 429.276 144.5 429 cv
144.5 428.724 144.724 428.5 145 428.5 cv
145.276 428.5 145.5 428.724 145.5 429 cv
cp
@
140.947 425.395 mo
140.053 423.605 li
139.714 422.928 139.021 422.5 138.264 422.5 cv
131.736 422.5 li
130.979 422.5 130.286 422.928 129.947 423.605 cv
129.053 425.395 li
128.714 426.072 128.021 426.5 127.264 426.5 cv
124 426.5 li
123.171 426.5 122.5 427.172 122.5 428 cv
122.5 442 li
122.5 442.828 123.171 443.5 124 443.5 cv
130.5 443.5 li
135 447.5 li
139.5 443.5 li
146 443.5 li
146.829 443.5 147.5 442.828 147.5 442 cv
147.5 428 li
147.5 427.172 146.829 426.5 146 426.5 cv
142.736 426.5 li
141.979 426.5 141.286 426.072 140.947 425.395 cv
cp
@
208.002 805.5 mo
181.998 805.5 li
181.17 805.5 180.5 804.829 180.5 804.002 cv
180.5 785.998 li
180.5 785.171 181.17 784.5 181.998 784.5 cv
208.002 784.5 li
208.83 784.5 209.5 785.171 209.5 785.998 cv
209.5 804.002 li
209.5 804.829 208.83 805.5 208.002 805.5 cv
cp
@
185.5 791 mo
185.5 789.067 187.067 787.5 189 787.5 cv
190.933 787.5 192.5 789.067 192.5 791 cv
192.5 792.933 190.933 794.5 189 794.5 cv
187.067 794.5 185.5 792.933 185.5 791 cv
cp
@
180.574 804.426 mo
187.5 797.5 li
191.5 801.5 li
@
190.5 800.5 mo
198.5 792.5 li
209.5 803.5 li
@
432.5 255 mo
432.5 255.828 431.828 256.5 431 256.5 cv
430.172 256.5 429.5 255.828 429.5 255 cv
429.5 254.172 430.172 253.5 431 253.5 cv
431.828 253.5 432.5 254.172 432.5 255 cv
cp
@
422.5 265.5 mo
422.657 265.423 429 259 429 259 cv
432.5 262.5 li
@
420.5 264 mo
420.5 246 li
420.5 245.172 421.172 244.5 422 244.5 cv
429.5 244.5 li
431.5 246.5 li
444 246.5 li
444.828 246.5 445.5 247.172 445.5 248 cv
445.5 250.5 li
@
447.999 250.5 mo
426.581 250.5 li
425.936 250.5 425.362 250.913 425.158 251.525 cv
420.578 263.525 li
420.254 264.497 420.978 265.5 422.001 265.5 cv
444.385 265.5 li
445.047 265.5 445.631 265.066 445.821 264.433 cv
449.422 252.475 li
449.746 251.503 449.022 250.5 447.999 250.5 cv
cp
@
432 262 mo
437.5 256.5 li
445.718 264.718 li
@
81.5 310.5 mo
81.5 308 li
81.5 307.172 80.8286 306.5 80 306.5 cv
63 306.5 li
61.6191 306.5 60.5 310.306 60.5 315 cv
60.5 319.694 61.6191 323.5 63 323.5 cv
80 323.5 li
80.8286 323.5 81.5 322.828 81.5 322 cv
81.5 319.5 li
89.5 323.5 li
89.5 306.5 li
81.5 310.5 li
cp
@
127.476 302.5 mo
135.214 308.452 li
142.952 302.5 li
@
146 308.5 mo
124 308.5 li
123.171 308.5 122.5 309.172 122.5 310 cv
122.5 325 li
122.5 325.828 123.171 326.5 124 326.5 cv
124.5 326.5 li
124.5 327.5 li
145.5 327.5 li
145.5 326.5 li
146 326.5 li
146.829 326.5 147.5 325.828 147.5 325 cv
147.5 310 li
147.5 309.172 146.829 308.5 146 308.5 cv
cp
@
145.214 323.356 mo
145.111 324.314 144.346 325.062 143.385 325.136 cv
141.468 325.284 138.135 325.5 135 325.5 cv
131.914 325.5 128.516 325.279 126.582 325.131 cv
125.629 325.059 124.86 324.324 124.754 323.375 cv
124.628 322.238 124.5 320.476 124.5 318 cv
124.5 315.547 124.631 313.771 124.759 312.622 cv
124.865 311.673 125.632 310.939 126.584 310.865 cv
128.481 310.717 131.804 310.5 135 310.5 cv
138.211 310.5 141.493 310.713 143.383 310.861 cv
144.344 310.937 145.109 311.685 145.212 312.643 cv
145.349 313.908 145.5 315.809 145.5 318 cv
145.5 320.213 145.35 322.101 145.214 323.356 cv
cp
@
29.5 315 mo
29.5 323.008 23.0083 329.5 15 329.5 cv
6.9917 329.5 .5 323.008 .5 315 cv
.5 306.992 6.9917 300.5 15 300.5 cv
23.0083 300.5 29.5 306.992 29.5 315 cv
cp
@
17.9395 308.099 mo
17.0366 307.714 16.0435 307.5 15 307.5 cv
13.9565 307.5 12.9634 307.714 12.0605 308.099 cv
@
15.5 315 mo
15.5 314.724 15.2764 314.5 15 314.5 cv
14.7236 314.5 14.5 314.724 14.5 315 cv
14.5 315.276 14.7236 315.5 15 315.5 cv
15.2764 315.5 15.5 315.276 15.5 315 cv
cp
@
20.8496 328.341 mo
23.4917 329.128 26.4233 329.498 29.4985 329.498 cv
@
8.56543 318.855 mo
9.27051 320.747 10.2617 322.232 11.9429 323.746 cv
@
18 307.5 mo
18 309.157 16.6567 310.5 15 310.5 cv
13.3433 310.5 12 309.157 12 307.5 cv
12 305.843 13.3433 304.5 15 304.5 cv
16.6567 304.5 18 305.843 18 307.5 cv
cp
@
9.34521 310.072 mo
8.7002 310.812 8.18945 311.689 7.86719 312.683 cv
7.54443 313.675 7.44141 314.686 7.52832 315.663 cv
@
8.79395 309.829 mo
10.3701 310.341 11.2324 312.033 10.7202 313.609 cv
10.208 315.186 8.51563 316.048 6.93994 315.535 cv
5.36426 315.023 4.50195 313.331 5.01367 311.755 cv
5.52588 310.18 7.21826 309.317 8.79395 309.829 cv
cp
@
8.56543 318.855 mo
9.06982 319.697 9.74756 320.454 10.5918 321.067 cv
11.436 321.681 12.3652 322.092 13.3218 322.311 cv
@
8.16455 319.305 mo
9.13867 317.964 11.0146 317.667 12.355 318.641 cv
13.6953 319.614 13.9927 321.49 13.0186 322.831 cv
12.0449 324.172 10.1685 324.469 8.82813 323.495 cv
7.48779 322.521 7.19092 320.645 8.16455 319.305 cv
cp
@
16.6782 322.311 mo
17.6348 322.092 18.564 321.681 19.4082 321.067 cv
20.2524 320.454 20.9302 319.697 21.4346 318.855 cv
@
16.9814 322.831 mo
16.0073 321.49 16.3047 319.614 17.645 318.641 cv
18.9854 317.667 20.8613 317.964 21.8354 319.305 cv
22.8091 320.645 22.5122 322.521 21.1719 323.495 cv
19.8315 324.469 17.9551 324.172 16.9814 322.831 cv
cp
@
22.4717 315.663 mo
22.5586 314.686 22.4556 313.675 22.1328 312.683 cv
21.8105 311.689 21.2998 310.812 20.6548 310.072 cv
@
23.0601 315.535 mo
21.4844 316.048 19.792 315.186 19.2798 313.609 cv
18.7676 312.033 19.6299 310.341 21.2061 309.829 cv
22.7817 309.317 24.4741 310.18 24.9863 311.755 cv
25.498 313.331 24.6357 315.023 23.0601 315.535 cv
cp
@
310.5 617 mo
310.5 615.619 311.619 614.5 313 614.5 cv
314.38 614.5 315.5 615.619 315.5 617 cv
315.5 618.381 314.38 619.5 313 619.5 cv
311.619 619.5 310.5 618.381 310.5 617 cv
cp
@
307.5 620.5 mo
309.5 622.5 li
@
325.5 602.5 mo
321.5 605 li
321.5 606 li
317.111 610.389 li
316.257 609.841 315.344 609.5 314.5 609.5 cv
314.5 609.499 li
309.95 609.499 312.025 614.299 308.5 614.299 cv
308.5 614.299 li
304.855 614.299 302.5 616.055 302.5 619.699 cv
302.5 623.345 306.655 627.5 310.3 627.5 cv
313.946 627.5 315.701 625.145 315.701 621.5 cv
315.701 617.975 320.5 620.05 320.5 615.499 cv
320.5 614.656 320.159 613.742 319.611 612.889 cv
324 608.5 li
325 608.5 li
327.5 604.5 li
325.5 602.5 li
cp
@
134 361.5 mo
134 360.947 134.448 360.5 135 360.5 cv
135.552 360.5 136 360.947 136 361.5 cv
@
136 388.5 mo
136 389.053 135.552 389.5 135 389.5 cv
134.448 389.5 134 389.053 134 388.5 cv
@
148.5 374 mo
149.052 374 149.5 374.447 149.5 375 cv
149.5 375.553 149.052 376 148.5 376 cv
@
121.5 376 mo
120.948 376 120.5 375.553 120.5 375 cv
120.5 374.447 120.948 374 121.5 374 cv
@
143.839 364.747 mo
144.229 364.356 144.862 364.356 145.253 364.747 cv
145.644 365.138 145.644 365.771 145.253 366.161 cv
@
126.161 385.253 mo
125.771 385.644 125.138 385.644 124.747 385.253 cv
124.356 384.862 124.356 384.229 124.747 383.839 cv
@
145.253 383.839 mo
145.644 384.229 145.644 384.862 145.253 385.253 cv
144.862 385.644 144.229 385.644 143.839 385.253 cv
@
124.747 366.161 mo
124.356 365.771 124.356 365.138 124.747 364.747 cv
125.138 364.356 125.771 364.356 126.161 364.747 cv
@
143.512 385.474 mo
146.554 382.998 148.5 379.228 148.5 375 cv
148.5 367.544 142.456 361.5 135 361.5 cv
127.544 361.5 121.5 367.544 121.5 375 cv
121.5 379.228 123.446 382.998 126.488 385.474 cv
@
128.473 386.814 mo
130.408 387.886 132.631 388.5 135 388.5 cv
137.369 388.5 139.592 387.886 141.527 386.814 cv
@
125.595 387.75 mo
125.812 387.214 129.845 376.772 131.549 373.448 cv
131.094 373.114 130.89 372.508 131.114 371.953 cv
131.375 371.309 132.234 370.275 132.86 370.544 cv
133.485 370.812 133.64 372.281 133.379 372.925 cv
133.17 373.44 132.67 373.723 132.158 373.684 cv
131.42 377.397 128.077 388.185 127.859 388.722 cv
127.599 389.366 126.88 389.671 126.255 389.402 cv
125.63 389.134 125.334 388.395 125.595 387.75 cv
cp
@
144.405 387.75 mo
144.188 387.213 140.155 376.772 138.451 373.448 cv
138.906 373.113 139.11 372.507 138.886 371.953 cv
138.625 371.309 137.766 370.274 137.14 370.543 cv
136.515 370.812 136.36 372.28 136.621 372.925 cv
136.83 373.44 137.33 373.722 137.842 373.684 cv
138.58 377.396 141.923 388.184 142.141 388.722 cv
142.401 389.366 143.12 389.671 143.745 389.402 cv
144.37 389.134 144.666 388.394 144.405 387.75 cv
cp
@
75 389.5 mo
79.2871 389.5 86.5 373.371 86.5 368.695 cv
86.5 366.121 84.5835 360.5 75 360.5 cv
65.4165 360.5 63.5 366.121 63.5 368.695 cv
63.5 373.371 70.7129 389.5 75 389.5 cv
cp
@
72.5 377 mo
72.5 377.276 71.9404 377.5 71.25 377.5 cv
70.5596 377.5 70 377.276 70 377 cv
70 376.724 70.5596 376.5 71.25 376.5 cv
71.9404 376.5 72.5 376.724 72.5 377 cv
cp
@
78.5 376 mo
78.5 376.276 77.9404 376.5 77.25 376.5 cv
76.5596 376.5 76 376.276 76 376 cv
76 375.724 76.5596 375.5 77.25 375.5 cv
77.9404 375.5 78.5 375.724 78.5 376 cv
cp
@
78.5 376 mo
78.5 368.5 li
72.4951 370 li
72.5 377 li
@
204.5 387.5 mo
204.5 389.5 li
@
205 384.5 mo
204 384.5 li
204 387.5 li
205 387.5 li
205 384.5 li
cp
@
203.5 368.5 mo
202.433 369.83 200.604 370.5 199.5 370.5 cv
197.843 370.5 196.5 368.262 196.5 365.5 cv
196.5 362.738 197.843 360.5 199.5 360.5 cv
204.304 360.5 206.5 366.639 206.5 371.214 cv
206.5 383 li
206.5 383.828 205.829 384.5 205 384.5 cv
204 384.5 li
203.171 384.5 202.5 383.828 202.5 383 cv
202.5 372 li
202.5 371.07 202.5 370.354 202.145 369.645 cv
@
185.5 387.5 mo
185.5 389.5 li
@
185 384.5 mo
186 384.5 li
186 387.5 li
185 387.5 li
185 384.5 li
cp
@
186.5 368.5 mo
187.567 369.83 189.396 370.5 190.5 370.5 cv
192.157 370.5 193.5 368.262 193.5 365.5 cv
193.5 362.738 192.157 360.5 190.5 360.5 cv
185.696 360.5 183.5 366.639 183.5 371.214 cv
183.5 383 li
183.5 383.828 184.171 384.5 185 384.5 cv
186 384.5 li
186.829 384.5 187.5 383.828 187.5 383 cv
187.5 372 li
187.5 371.07 187.5 370.354 187.855 369.645 cv
@
192 865.5 mo
182 865.5 li
181.171 865.5 180.5 864.828 180.5 864 cv
180.5 846 li
180.5 845.172 181.171 844.5 182 844.5 cv
192 844.5 li
192.829 844.5 193.5 845.172 193.5 846 cv
193.5 864 li
193.5 864.828 192.829 865.5 192 865.5 cv
cp
@
191.5 859 mo
191.5 861.485 189.485 863.5 187 863.5 cv
184.515 863.5 182.5 861.485 182.5 859 cv
182.5 856.515 184.515 854.5 187 854.5 cv
189.485 854.5 191.5 856.515 191.5 859 cv
cp
@
189.5 849 mo
189.5 850.381 188.381 851.5 187 851.5 cv
185.619 851.5 184.5 850.381 184.5 849 cv
184.5 847.619 185.619 846.5 187 846.5 cv
188.381 846.5 189.5 847.619 189.5 849 cv
cp
@
187.5 859 mo
187.5 859.276 187.276 859.5 187 859.5 cv
186.724 859.5 186.5 859.276 186.5 859 cv
186.5 858.724 186.724 858.5 187 858.5 cv
187.276 858.5 187.5 858.724 187.5 859 cv
cp
@
208 865.5 mo
198 865.5 li
197.171 865.5 196.5 864.828 196.5 864 cv
196.5 846 li
196.5 845.172 197.171 844.5 198 844.5 cv
208 844.5 li
208.829 844.5 209.5 845.172 209.5 846 cv
209.5 864 li
209.5 864.828 208.829 865.5 208 865.5 cv
cp
@
207.5 859 mo
207.5 861.485 205.485 863.5 203 863.5 cv
200.515 863.5 198.5 861.485 198.5 859 cv
198.5 856.515 200.515 854.5 203 854.5 cv
205.485 854.5 207.5 856.515 207.5 859 cv
cp
@
205.5 849 mo
205.5 850.381 204.381 851.5 203 851.5 cv
201.619 851.5 200.5 850.381 200.5 849 cv
200.5 847.619 201.619 846.5 203 846.5 cv
204.381 846.5 205.5 847.619 205.5 849 cv
cp
@
203.5 859 mo
203.5 859.276 203.276 859.5 203 859.5 cv
202.724 859.5 202.5 859.276 202.5 859 cv
202.5 858.724 202.724 858.5 203 858.5 cv
203.276 858.5 203.5 858.724 203.5 859 cv
cp
@
310.5 370.5 mo
327.5 367.5 li
@
310.5 379.5 mo
310.5 379.5 li
310.5 380.604 309.604 381.5 308.5 381.5 cv
306.5 381.5 li
304.291 381.5 302.5 382.843 302.5 384.5 cv
302.5 386.157 304.291 387.5 306.5 387.5 cv
308.709 387.5 310.5 386.157 310.5 384.5 cv
310.5 365.5 li
327.5 362.5 li
327.5 382.5 li
327.5 384.157 325.709 385.5 323.5 385.5 cv
321.291 385.5 319.5 384.157 319.5 382.5 cv
319.5 380.843 321.291 379.5 323.5 379.5 cv
325.5 379.5 li
326.604 379.5 327.5 378.604 327.5 377.5 cv
327.5 377.5 li
@
362.795 374.5 mo
387.205 374.5 li
388.473 374.5 389.5 375.519 389.5 376.774 cv
389.5 376.774 li
389.5 376.925 389.485 377.074 389.455 377.221 cv
387.282 387.993 li
387.105 388.869 386.329 389.5 385.428 389.5 cv
364.572 389.5 li
363.671 389.5 362.895 388.869 362.718 387.993 cv
360.545 377.221 li
360.515 377.074 360.5 376.925 360.5 376.774 cv
360.5 376.774 li
360.5 375.519 361.527 374.5 362.795 374.5 cv
cp
@
369.738 372.318 mo
369.738 372.676 370.048 373.603 370.675 374.5 cv
378.706 374.5 li
379.333 373.603 379.643 372.676 379.643 372.318 cv
380.475 372.318 380.881 369.515 380.881 369.095 cv
380.881 368.675 380.664 367.755 379.948 367.755 cv
380.344 367.413 380.881 366.499 380.881 365.335 cv
381.5 364.798 li
381.5 362.828 379.23 360.5 375.31 360.5 cv
372.523 360.5 371.595 361.574 371.595 361.574 cv
370.821 361.574 369.119 362.716 369.119 364.261 cv
369.119 365.424 369.037 367.413 369.433 367.755 cv
368.717 367.755 368.5 368.675 368.5 369.095 cv
368.5 369.515 368.906 372.318 369.738 372.318 cv
cp
@
362.795 374.5 mo
387.205 374.5 li
388.473 374.5 389.5 375.519 389.5 376.774 cv
389.5 376.774 li
389.5 376.925 389.485 377.074 389.455 377.221 cv
387.282 387.993 li
387.105 388.869 386.329 389.5 385.428 389.5 cv
364.572 389.5 li
363.671 389.5 362.895 388.869 362.718 387.993 cv
360.545 377.221 li
360.515 377.074 360.5 376.925 360.5 376.774 cv
360.5 376.774 li
360.5 375.519 361.527 374.5 362.795 374.5 cv
cp
@
377.188 382.617 mo
377.188 382.128 377.635 381.718 378.246 381.576 cv
377.819 381.093 377.194 380.833 376.81 380.833 cv
376.182 380.833 375.624 381.107 375.103 381.107 cv
374.581 381.107 374.024 380.833 373.396 380.833 cv
372.769 380.833 371.5 381.52 371.5 382.755 cv
371.5 383.99 372.744 385.5 373.586 385.5 cv
374.428 385.5 374.677 385.226 375.103 385.226 cv
375.529 385.226 375.778 385.5 376.62 385.5 cv
377.252 385.5 378.111 384.648 378.5 383.7 cv
377.761 383.627 377.188 383.173 377.188 382.617 cv
cp
@
376.944 378.5 mo
376.085 378.5 375.389 379.022 375.389 379.667 cv
376.248 379.667 376.944 379.145 376.944 378.5 cv
cp
@
498.497 255 mo
498.497 249.67 500.868 244.961 504.5 242.054 cv
502.542 241.068 500.339 240.5 497.997 240.5 cv
489.99 240.5 483.5 246.992 483.5 255 cv
483.5 263.008 489.99 269.5 497.997 269.5 cv
500.339 269.5 502.542 268.932 504.5 267.946 cv
500.868 265.039 498.497 260.33 498.497 255 cv
cp
@
490.5 252.999 mo
490.5 254.379 489.828 255.499 489 255.499 cv
488.172 255.499 487.5 254.379 487.5 252.999 cv
487.5 251.618 488.172 250.499 489 250.499 cv
489.828 250.499 490.5 251.618 490.5 252.999 cv
cp
@
491.356 260.499 mo
491.71 261.604 491.389 262.499 490.64 262.499 cv
489.891 262.499 488.997 261.604 488.644 260.499 cv
488.29 259.395 488.611 258.499 489.36 258.499 cv
490.109 258.499 491.003 259.395 491.356 260.499 cv
cp
@
541.048 387.244 mo
541.048 387.244 li
543 386 li
543 388.25 li
543 388.94 542.44 389.5 541.75 389.5 cv
541.06 389.5 540.5 388.94 540.5 388.25 cv
540.5 387.826 540.725 387.47 541.048 387.244 cv
cp
@
546.548 384.744 mo
546.548 384.744 li
548.5 383.5 li
548.5 385.75 li
548.5 386.44 547.94 387 547.25 387 cv
546.56 387 546 386.44 546 385.75 cv
546 385.326 546.225 384.97 546.548 384.744 cv
cp
@
556.548 387.244 mo
556.548 387.244 li
558.5 386 li
558.5 388.25 li
558.5 388.94 557.94 389.5 557.25 389.5 cv
556.56 389.5 556 388.94 556 388.25 cv
556 387.826 556.225 387.47 556.548 387.244 cv
cp
@
569.5 369 mo
567.5 369 li
@
561 362.5 mo
561 360.5 li
@
556.403 364.403 mo
554.989 362.989 li
@
565.597 364.403 mo
567.011 362.989 li
@
561.143 372.566 mo
560.716 372.633 560.306 372.749 559.917 372.908 cv
@
546.482 374.75 mo
546.019 374.588 545.52 374.5 545 374.5 cv
544.845 374.5 544.691 374.508 544.54 374.523 cv
@
565.456 373.724 mo
566.712 372.539 567.5 370.863 567.5 369 cv
567.5 365.41 564.59 362.5 561 362.5 cv
558.213 362.5 555.842 364.258 554.918 366.723 cv
@
556.588 383.5 mo
559.235 383.5 561.44 383.5 562 383.5 cv
565.037 383.5 567.5 381.037 567.5 378 cv
567.5 374.963 565.037 372.5 562 372.5 cv
561.708 372.5 561.424 372.529 561.144 372.573 cv
560.099 369.063 556.851 366.5 553 366.5 cv
548.458 366.5 544.759 370.065 544.522 374.548 cv
542.265 374.789 540.5 376.678 540.5 379 cv
540.5 381.485 542.515 383.5 545 383.5 cv
545.503 383.5 547.945 383.5 550.833 383.5 cv
@
555 375.5 mo
558.5 377 li
556 385.5 li
553.5 384 li
549.5 389.5 li
551.5 380.5 li
554 381.5 li
555 375.5 li
cp
@
75 805.5 mo
75 797 li
@
72.5 799.5 mo
75 797 li
77.5 799.5 li
@
75 782.5 mo
75 786.5 li
@
60.5 797 mo
64.5 797 li
@
89.5 797 mo
85.5 797 li
@
85.2529 786.747 mo
82.4248 789.575 li
@
64.7471 786.747 mo
67.5752 789.575 li
@
84.791 800.77 mo
85.2422 799.599 85.5 798.331 85.5 797 cv
85.5 791.201 80.7988 786.5 75 786.5 cv
69.2012 786.5 64.5 791.201 64.5 797 cv
64.5 798.331 64.7578 799.599 65.209 800.77 cv
@
77.5063 801.5 mo
84.4409 801.5 82.5654 800.5 89.5 800.5 cv
@
60.5 800.5 mo
67.4346 800.5 65.5547 801.5 72.4897 801.5 cv
@
83.5 429 mo
83.5 433.694 79.6943 437.5 75 437.5 cv
70.3057 437.5 66.5 433.694 66.5 429 cv
66.5 424.306 70.3057 420.5 75 420.5 cv
79.6943 420.5 83.5 424.306 83.5 429 cv
cp
@
81.5 434.5 mo
81.5 434.5 84.5 444.718 84.5 448.5 cv
82.811 446.818 80 445.5 80 445.5 cv
77.5 449.5 li
77.5 449.5 76.7417 439.233 75 437.5 cv
@
68.5 434.5 mo
68.5 434.5 65.5 444.718 65.5 448.5 cv
67.189 446.818 70 445.5 70 445.5 cv
72.5 449.5 li
72.5 449.5 73.2583 439.233 75 437.5 cv
@
72.7832 430.39 mo
69.5 427.506 li
73.7095 427.026 li
75.0005 423.5 li
76.2905 427.026 li
80.5 427.506 li
77.2168 430.39 li
78.5 434.5 li
75.0005 432.224 li
71.8911 434.5 li
72.7832 430.39 li
cp
@
22.5 424.5 mo
26 424.5 li
26.8286 424.5 27.5 425.172 27.5 426 cv
27.5 426 li
27.5 427.025 27.1904 428.025 26.5996 428.863 cv
25.4844 430.443 23.4463 433 21.1318 434.322 cv
@
7.5 424.5 mo
4 424.5 li
3.17139 424.5 2.5 425.172 2.5 426 cv
2.5 426 li
2.5 427.025 2.80957 428.025 3.40039 428.863 cv
4.51563 430.443 6.55371 433 8.86816 434.322 cv
@
13.5 440.263 mo
13.5 443.5 li
13.5 444.604 12.6045 445.5 11.5 445.5 cv
10.3955 445.5 9.5 446.396 9.5 447.5 cv
20.5 447.5 li
20.5 446.396 19.6045 445.5 18.5 445.5 cv
17.3955 445.5 16.5 444.604 16.5 443.5 cv
16.5 440.263 li
@
21 422.5 mo
21.8286 422.5 22.5 423.172 22.5 424 cv
22.5 425 li
22.5 428.571 21.5479 440.5 15 440.5 cv
8.45215 440.5 7.5 428.571 7.5 425 cv
7.5 424 li
7.5 423.172 8.17139 422.5 9 422.5 cv
21 422.5 li
cp
@
263.038 442.602 mo
263.856 446.089 264.5 449.5 264.5 449.5 cv
265.79 449.5 265.5 445.5 265.5 445.5 cv
265.5 445.5 266.781 445.738 267.5 446.5 cv
267.5 445.117 266.744 442.926 265.063 440.589 cv
@
265.494 438.471 mo
265.494 438.471 265.5 434.207 265.5 432.5 cv
265.5 427.299 261.622 420.521 255 420.521 cv
254.5 421 li
247.878 421 244.5 427.299 244.5 432.5 cv
244.5 434.628 244.512 438.326 244.512 438.326 cv
@
251 436.5 mo
251 436.776 250.776 437 250.5 437 cv
250.224 437 250 436.776 250 436.5 cv
250 436.224 250.224 436 250.5 436 cv
250.776 436 251 436.224 251 436.5 cv
cp
@
250.5 436 mo
249.5 436 li
@
259 436.5 mo
259 436.776 259.224 437 259.5 437 cv
259.776 437 260 436.776 260 436.5 cv
260 436.224 259.776 436 259.5 436 cv
259.224 436 259 436.224 259 436.5 cv
cp
@
259.5 436 mo
260.5 436 li
@
264.5 436.5 mo
264.5 432.35 258 428.5 258 428.5 cv
258 428.5 245.5 432.35 245.5 436.5 cv
244.559 436.902 244.499 437.765 244.5 439 cv
244.501 440.034 245.569 442.379 246.902 442.489 cv
248.796 446.07 252.252 448.5 255 448.5 cv
257.748 448.5 261.204 446.07 263.098 442.489 cv
264.431 442.379 265.499 440.034 265.5 439 cv
265.501 437.765 265.441 436.902 264.5 436.5 cv
cp
@
246.967 442.642 mo
246.148 446.128 245.5 449.5 245.5 449.5 cv
244.21 449.5 244.5 445.5 244.5 445.5 cv
244.5 445.5 243.219 445.738 242.5 446.5 cv
242.5 445.117 243.256 442.926 244.937 440.589 cv
@
137.5 731 mo
137.5 732.381 136.381 733.5 135 733.5 cv
133.619 733.5 132.5 732.381 132.5 731 cv
132.5 729.619 133.619 728.5 135 728.5 cv
136.381 728.5 137.5 729.619 137.5 731 cv
cp
@
139 733.5 mo
141.797 734.271 144.5 735.5 144.5 735.5 cv
143.99 727.646 li
143.905 726.34 143.195 725.166 142.087 724.519 cv
140.515 723.599 138.007 722.5 135 722.5 cv
131.993 722.5 129.485 723.599 127.913 724.519 cv
126.805 725.166 126.095 726.34 126.01 727.646 cv
125.5 735.5 li
125.5 735.5 128.203 734.271 131 733.5 cv
@
139.5 731 mo
139.5 733.485 137.485 735.5 135 735.5 cv
132.515 735.5 130.5 733.485 130.5 731 cv
130.5 728.515 132.515 726.5 135 726.5 cv
137.485 726.5 139.5 728.515 139.5 731 cv
cp
@
143 741.5 mo
143 741.5 138.706 739.5 135 739.5 cv
131.294 739.5 127 741.5 127 741.5 cv
@
131 736 mo
131 736.276 130.776 736.5 130.5 736.5 cv
130.224 736.5 130 736.276 130 736 cv
130 735.724 130.224 735.5 130.5 735.5 cv
130.776 735.5 131 735.724 131 736 cv
cp
@
140 736 mo
140 736.276 139.776 736.5 139.5 736.5 cv
139.224 736.5 139 736.276 139 736 cv
139 735.724 139.224 735.5 139.5 735.5 cv
139.776 735.5 140 735.724 140 736 cv
cp
@
125.5 735.5 mo
124.559 735.902 124.499 736.765 124.5 738 cv
124.501 739.034 125.569 741.379 126.902 741.489 cv
128.796 745.07 131 747.5 135 747.5 cv
139 747.5 141.204 745.07 143.098 741.489 cv
144.431 741.379 145.499 739.034 145.5 738 cv
145.501 736.765 145.441 735.902 144.5 735.5 cv
@
322.5 302.5 mo
322.5 303.604 319.366 304.5 315.5 304.5 cv
311.634 304.5 308.5 303.604 308.5 302.5 cv
308.5 301.396 311.634 300.5 315.5 300.5 cv
319.366 300.5 322.5 301.396 322.5 302.5 cv
cp
@
322.5 302.5 mo
323.5 308 li
323.5 309.381 319.918 310.5 315.5 310.5 cv
311.082 310.5 307.5 309.381 307.5 308 cv
308.5 302.5 li
@
312.5 307 mo
312.5 307 315.5 307.536 315.5 308.5 cv
@
318.5 307 mo
318.5 307 315.5 307.536 315.5 308.5 cv
@
311 318 mo
311 318.276 310.776 318.5 310.5 318.5 cv
310.224 318.5 310 318.276 310 318 cv
310 317.724 310.224 317.5 310.5 317.5 cv
310.776 317.5 311 317.724 311 318 cv
cp
@
310.5 317.5 mo
309.5 317.5 li
@
319 318 mo
319 318.276 319.224 318.5 319.5 318.5 cv
319.776 318.5 320 318.276 320 318 cv
320 317.724 319.776 317.5 319.5 317.5 cv
319.224 317.5 319 317.724 319 318 cv
cp
@
319.5 317.5 mo
320.5 317.5 li
@
319.5 328 mo
327.538 327.763 329.5 327 329.5 327 cv
327.372 323.057 325.5 320.911 325.5 316 cv
325.208 313.229 324.398 310.727 323.113 308.767 cv
@
307.52 307.89 mo
305.864 309.95 304.837 312.797 304.5 316 cv
304.5 320.911 302.628 323.057 300.5 327 cv
300.5 327 302.462 327.763 310.5 328 cv
@
317.748 310.398 mo
315.434 313.703 308.3 317.5 305.5 317.5 cv
304.559 317.902 304.499 318.765 304.5 320 cv
304.501 321.034 305.569 323.379 306.902 323.489 cv
308.797 327.07 312.252 329.5 315 329.5 cv
317.748 329.5 321.204 327.07 323.098 323.489 cv
324.431 323.379 325.499 321.034 325.5 320 cv
325.501 318.765 325.441 317.902 324.5 317.5 cv
322.066 317.5 319.484 313.617 318.727 310.286 cv
@
383 261.5 mo
384.235 260.31 384.5 255.5 384.5 255.5 cv
383.755 257.654 381.426 261.473 379.204 263.187 cv
378.895 262.213 377.965 261.5 376.853 261.5 cv
375 261.5 li
373.147 261.5 li
372.035 261.5 371.105 262.213 370.796 263.187 cv
368.574 261.473 366.245 257.654 365.5 255.5 cv
365.5 255.5 365.765 260.31 367 261.5 cv
@
376 263.5 mo
374 263.5 li
@
371 256 mo
371 256.276 370.776 256.5 370.5 256.5 cv
370.224 256.5 370 256.276 370 256 cv
370 255.724 370.224 255.5 370.5 255.5 cv
370.776 255.5 371 255.724 371 256 cv
cp
@
380 256 mo
380 256.276 379.776 256.5 379.5 256.5 cv
379.224 256.5 379 256.276 379 256 cv
379 255.724 379.224 255.5 379.5 255.5 cv
379.776 255.5 380 255.724 380 256 cv
cp
@
365.5 255.5 mo
365.5 253.625 367.795 250.5 371.5 250.5 cv
374.588 250.5 377 248.5 377 248.5 cv
379.471 248.5 383.883 250.5 384.5 255.5 cv
384.782 255.621 384.979 255.788 385.124 255.989 cv
385.298 255.27 385.5 254.204 385.5 253.125 cv
385.5 250.625 384.265 242.5 375 242.5 cv
374.5 243 li
365.235 243 364.5 250.625 364.5 253.125 cv
364.5 254.204 364.702 255.27 364.876 255.989 cv
365.021 255.788 365.218 255.621 365.5 255.5 cv
cp
@
365.5 255.5 mo
364.56 255.902 364.498 256.765 364.5 258 cv
364.501 259.034 365.667 261.39 367 261.5 cv
368.895 265.08 371 267.5 375 267.5 cv
379 267.5 381.105 265.08 383 261.5 cv
384.333 261.39 385.499 259.034 385.5 258 cv
385.502 256.765 385.44 255.902 384.5 255.5 cv
@
360.5 440.5 mo
389.5 440.5 li
@
375 429.5 mo
381.794 429.5 385.5 431 385.5 431 cv
383.647 425.315 li
383.029 424.711 379.323 423.5 375 423.5 cv
370.677 423.5 366.971 424.711 366.353 425.315 cv
364.5 431 li
364.5 431 368.206 429.5 375 429.5 cv
@
375 439.237 mo
375 439.905 375.304 440.5 376 440.5 cv
377 440.5 li
378.436 440.5 379.753 439.674 380.39 438.438 cv
381.681 435.933 383.776 431.5 385.5 431.5 cv
@
384.5 437.5 mo
384.5 438.328 385.172 439 386 439 cv
386.828 439 387.5 438.328 387.5 437.5 cv
387.5 436.672 386.828 436 386 436 cv
385.172 436 384.5 436.672 384.5 437.5 cv
cp
@
388.5 430 mo
388.5 430.276 388.724 430.5 389 430.5 cv
389.276 430.5 389.5 430.276 389.5 430 cv
389.5 429.724 389.276 429.5 389 429.5 cv
388.724 429.5 388.5 429.724 388.5 430 cv
cp
@
388.5 430 mo
385.5 431 li
385.5 433.5 li
@
385.5 441.783 mo
385.5 445 li
385.5 445.828 386.172 446.5 387 446.5 cv
387.828 446.5 388.5 445.828 388.5 445 cv
388.5 440.477 li
@
381.93 435.481 mo
382.885 434.173 383.479 433.5 386 433.5 cv
388.521 433.5 389.5 436.306 389.5 438.55 cv
389.5 443.039 377.521 442.478 375 442.478 cv
372.479 442.478 360.5 443.039 360.5 438.55 cv
360.5 436.306 361.479 433.5 364 433.5 cv
366.521 433.5 367.205 434.337 368.16 435.646 cv
@
375 439.237 mo
375 439.905 374.696 440.5 374 440.5 cv
373 440.5 li
371.564 440.5 370.247 439.674 369.61 438.438 cv
368.319 435.933 366.224 431.5 364.5 431.5 cv
@
365.5 437.5 mo
365.5 438.328 364.828 439 364 439 cv
363.172 439 362.5 438.328 362.5 437.5 cv
362.5 436.672 363.172 436 364 436 cv
364.828 436 365.5 436.672 365.5 437.5 cv
cp
@
361.5 430 mo
361.5 430.276 361.276 430.5 361 430.5 cv
360.724 430.5 360.5 430.276 360.5 430 cv
360.5 429.724 360.724 429.5 361 429.5 cv
361.276 429.5 361.5 429.724 361.5 430 cv
cp
@
361.5 430 mo
364.5 431 li
364.5 433.5 li
@
364.5 441.783 mo
364.5 445 li
364.5 445.828 363.828 446.5 363 446.5 cv
362.172 446.5 361.5 445.828 361.5 445 cv
361.5 440.477 li
@
375 439 mo
375 429.5 li
@
431.5 438 mo
431.5 441.037 429.037 443.5 426 443.5 cv
422.963 443.5 420.5 441.037 420.5 438 cv
420.5 434.963 422.963 432.5 426 432.5 cv
429.037 432.5 431.5 434.963 431.5 438 cv
cp
@
449.5 438 mo
449.5 441.037 447.037 443.5 444 443.5 cv
440.963 443.5 438.5 441.037 438.5 438 cv
438.5 434.963 440.963 432.5 444 432.5 cv
447.037 432.5 449.5 434.963 449.5 438 cv
cp
@
444.456 438.27 mo
440 429.5 li
432 429.5 li
425.5 438.5 li
434.5 439.5 li
440 429.5 li
@
434.5 439.5 mo
431 426.5 li
@
436 439.5 mo
436 440.328 435.328 441 434.5 441 cv
433.672 441 433 440.328 433 439.5 cv
433 438.672 433.672 438 434.5 438 cv
435.328 438 436 438.672 436 439.5 cv
cp
@
428.5 426.5 mo
433.5 426.5 li
@
440 429.5 mo
438.5 426.5 li
443 426.5 li
443.828 426.5 444.5 427.172 444.5 428 cv
444.5 428 li
444.5 428.828 443.828 429.5 443 429.5 cv
442.5 429.5 li
@
550.375 445.5 mo
569.5 445.5 li
@
556.63 433.539 mo
560.969 438 li
563.46 436.939 li
562.24 429.472 li
@
558.875 424.363 mo
558.061 424.851 557.135 425.547 555.911 426.5 cv
544.335 426.5 li
542.279 428.476 li
550.465 430.95 li
548.994 432.215 547.464 433.354 546.194 434.485 cv
541.567 433.425 li
540.5 434.485 li
542.822 437.736 li
542.824 437.734 li
542.785 437.77 542.735 437.814 542.698 437.849 cv
542.226 438.28 542.208 439.011 542.658 439.458 cv
542.971 439.769 543.438 439.866 543.854 439.704 cv
545.98 438.88 552.59 436.212 557.049 433.248 cv
562.426 429.674 565.118 427 566.016 426.108 cv
566.913 425.217 567.814 423.438 567.369 422.995 cv
566.925 422.554 563.354 421.681 558.875 424.363 cv
cp
@
.971825 lw
75.0835 480.544 mo
69.2842 480.544 64.5835 491.929 64.5835 498.196 cv
64.5835 502.779 67.102 507.391 70.7207 509.544 cv
79.4458 509.544 li
83.0644 507.391 85.5835 502.779 85.5835 498.196 cv
85.5835 491.929 80.8823 480.544 75.0835 480.544 cv
cp
@
64.5835 498.544 mo
85.5835 498.544 li
@
75.5835 501.044 mo
75.5835 501.32 75.3594 501.544 75.0835 501.544 cv
74.8071 501.544 74.5835 501.32 74.5835 501.044 cv
74.5835 500.768 74.8071 500.544 75.0835 500.544 cv
75.3594 500.544 75.5835 500.768 75.5835 501.044 cv
cp
@
75.0835 494.544 mo
75.0835 495.544 li
@
69.5835 494.544 mo
69.5835 495.544 li
@
80.5835 494.544 mo
80.5835 495.544 li
@
1 lw
13.5 494.019 mo
13.5 493.742 13.2764 493.519 13 493.519 cv
12.7236 493.519 12.5 493.742 12.5 494.019 cv
12.5 494.295 12.7236 494.519 13 494.519 cv
13.2764 494.519 13.5 494.295 13.5 494.019 cv
cp
@
13 487.519 mo
13 494.019 li
16.5 497.519 li
@
5.22754 501.078 mo
3.50146 505.519 li
7 502.681 li
@
9.01855 481.646 mo
8.12354 480.951 7.0166 480.519 5.79639 480.519 cv
2.87109 480.519 .5 482.89 .5 485.814 cv
.5 486.796 .780762 487.705 1.24609 488.493 cv
9.01855 481.646 li
cp
@
24.373 489.019 mo
25.0674 488.124 25.5 487.017 25.5 485.796 cv
25.5 482.871 23.1289 480.5 20.2036 480.5 cv
19.2227 480.5 18.3135 480.78 17.5259 481.246 cv
24.373 489.019 li
cp
@
22.8779 497.551 mo
23.2734 496.445 23.5 495.26 23.5 494.019 cv
23.5 488.22 18.7988 483.519 13 483.519 cv
7.20117 483.519 2.5 488.22 2.5 494.019 cv
2.5 499.817 7.20117 504.519 13 504.519 cv
14.6133 504.519 16.1357 504.144 17.501 503.494 cv
@
17.5 503.5 mo
17.5 500.187 20.1865 497.5 23.5 497.5 cv
26.8135 497.5 29.5 500.187 29.5 503.5 cv
29.5 506.813 26.8135 509.5 23.5 509.5 cv
20.1865 509.5 17.5 506.813 17.5 503.5 cv
cp
@
19.25 499.25 mo
27.75 507.75 li
@
251.5 507.5 mo
251.5 507.5 252.5 502.5 252.5 499.5 cv
@
248.5 506.5 mo
248.5 506.5 250 502.125 250 499.5 cv
@
247.5 499.5 mo
247.5 501.75 245.5 505.5 245.5 505.5 cv
@
265.5 493 mo
265.5 493.276 265.276 493.5 265 493.5 cv
264.724 493.5 264.5 493.276 264.5 493 cv
264.5 492.724 264.724 492.5 265 492.5 cv
265.276 492.5 265.5 492.724 265.5 493 cv
cp
@
266 499.5 mo
266.829 499.5 267.5 498.828 267.5 498 cv
267.5 492 li
267.5 491.172 266.829 490.5 266 490.5 cv
244 490.5 li
243.171 490.5 242.5 491.172 242.5 492 cv
242.5 498 li
242.5 498.828 243.171 499.5 244 499.5 cv
266 499.5 li
cp
@
262.5 490.5 mo
262.5 486.5 li
258.5 482.5 li
249 482.5 li
248.171 482.5 247.5 483.172 247.5 484 cv
247.5 490.5 li
@
258.5 482.5 mo
258.5 485 li
258.5 485.828 259.171 486.5 260 486.5 cv
262.5 486.5 li
@
255 507.5 mo
255 507.5 255 502.5 255 499.5 cv
@
258.5 507.5 mo
258.5 507.5 257.5 502.5 257.5 499.5 cv
@
261.5 506.5 mo
261.5 506.5 260 502.125 260 499.5 cv
@
262.5 499.5 mo
262.5 501.75 264.5 505.5 264.5 505.5 cv
@
142 493.5 mo
128 493.5 li
127.171 493.5 126.5 494.172 126.5 495 cv
126.5 508 li
126.5 508.828 127.171 509.5 128 509.5 cv
142 509.5 li
142.829 509.5 143.5 508.828 143.5 508 cv
143.5 495 li
143.5 494.172 142.829 493.5 142 493.5 cv
cp
@
141.5 493.5 mo
128.5 493.5 li
128.5 490.5 li
141.5 490.5 li
141.5 493.5 li
cp
@
138.5 490.5 mo
138.5 490.5 137.8 483 135.7 480.5 cv
134.3 480.5 li
132.2 483 131.5 490.5 131.5 490.5 cv
@
138.5 503.286 mo
138.5 505.061 136.933 506.5 135 506.5 cv
133.067 506.5 131.5 505.061 131.5 503.286 cv
131.5 500.714 135 497.5 135 497.5 cv
135 497.5 138.5 500.714 138.5 503.286 cv
cp
@
206.5 484.5 mo
206.5 486.709 201.351 488.5 195 488.5 cv
188.649 488.5 183.5 486.709 183.5 484.5 cv
183.5 482.291 188.649 480.5 195 480.5 cv
201.351 480.5 206.5 482.291 206.5 484.5 cv
cp
@
206.5 484.5 mo
204 507 li
204 508.381 199.971 509.5 195 509.5 cv
190.029 509.5 186 508.381 186 507 cv
183.5 484.5 li
@
190.5 499 mo
190.5 496.515 192.515 494.5 195 494.5 cv
196.553 494.5 197.923 495.287 198.731 496.484 cv
@
199.5 499 mo
199.5 501.485 197.485 503.5 195 503.5 cv
193.447 503.5 192.077 502.713 191.269 501.516 cv
@
190.5 499 mo
192.5 497.5 li
@
199.5 499 mo
197.5 500.5 li
@
367.5 742.5 mo
367.5 744.5 li
@
369.5 742.5 mo
369.5 744.5 li
@
371.5 742.5 mo
371.5 744.5 li
@
382.5 743.5 mo
382.5 743.776 382.276 744 382 744 cv
381.724 744 381.5 743.776 381.5 743.5 cv
381.5 743.224 381.724 743 382 743 cv
382.276 743 382.5 743.224 382.5 743.5 cv
cp
@
379.5 743.5 mo
379.5 743.776 379.276 744 379 744 cv
378.724 744 378.5 743.776 378.5 743.5 cv
378.5 743.224 378.724 743 379 743 cv
379.276 743 379.5 743.224 379.5 743.5 cv
cp
@
385.5 742.399 mo
387.782 741.936 389.5 739.919 389.5 737.5 cv
389.5 735.074 387.771 733.055 385.479 732.599 cv
385.268 727.54 381.111 723.5 376 723.5 cv
371.987 723.5 368.563 725.991 367.171 729.509 cv
367.113 729.507 367.058 729.5 367 729.5 cv
368.288 729.5 369.489 729.875 370.499 730.521 cv
@
367 729.5 mo
363.41 729.5 360.5 732.41 360.5 736 cv
360.5 738.704 362.151 741.021 364.5 742 cv
364.5 742 li
@
384 746.5 mo
366 746.5 li
365.172 746.5 364.5 745.828 364.5 745 cv
364.5 742 li
364.5 741.172 365.172 740.5 366 740.5 cv
384 740.5 li
384.828 740.5 385.5 741.172 385.5 742 cv
385.5 745 li
385.5 745.828 384.828 746.5 384 746.5 cv
cp
@
384.5 732.5 mo
384.836 732.5 385.164 732.533 385.48 732.596 cv
@
364.794 741.108 mo
369.901 735.193 li
370.281 734.753 370.834 734.5 371.415 734.5 cv
378.585 734.5 li
379.166 734.5 379.719 734.753 380.099 735.193 cv
385.206 741.108 li
@
310.5 497.5 mo
310.5 499.5 li
@
312.5 497.5 mo
312.5 499.5 li
@
314.5 497.5 mo
314.5 499.5 li
@
325.5 498.5 mo
325.5 498.776 325.276 499 325 499 cv
324.724 499 324.5 498.776 324.5 498.5 cv
324.5 498.224 324.724 498 325 498 cv
325.276 498 325.5 498.224 325.5 498.5 cv
cp
@
322.5 498.5 mo
322.5 498.776 322.276 499 322 499 cv
321.724 499 321.5 498.776 321.5 498.5 cv
321.5 498.224 321.724 498 322 498 cv
322.276 498 322.5 498.224 322.5 498.5 cv
cp
@
310.5 503.5 mo
310.5 505.5 li
@
312.5 503.5 mo
312.5 505.5 li
@
314.5 503.5 mo
314.5 505.5 li
@
325.5 504.5 mo
325.5 504.776 325.276 505 325 505 cv
324.724 505 324.5 504.776 324.5 504.5 cv
324.5 504.224 324.724 504 325 504 cv
325.276 504 325.5 504.224 325.5 504.5 cv
cp
@
322.5 504.5 mo
322.5 504.776 322.276 505 322 505 cv
321.724 505 321.5 504.776 321.5 504.5 cv
321.5 504.224 321.724 504 322 504 cv
322.276 504 322.5 504.224 322.5 504.5 cv
cp
@
319.288 495.5 mo
319.423 495.022 319.5 494.521 319.5 494 cv
319.5 490.963 317.038 488.5 314 488.5 cv
310.962 488.5 308.5 490.963 308.5 494 cv
308.5 494.709 308.639 495.385 308.883 496.007 cv
@
325.5 495.5 mo
325.5 491.7 li
322.654 490.988 li
322.536 490.65 322.407 490.323 322.252 490.005 cv
323.758 487.494 li
320.505 484.242 li
317.995 485.748 li
317.677 485.594 317.35 485.464 317.012 485.347 cv
316.3 482.5 li
311.7 482.5 li
310.988 485.347 li
310.65 485.464 310.323 485.594 310.005 485.748 cv
307.495 484.242 li
304.242 487.494 li
305.748 490.005 li
305.593 490.323 305.464 490.65 305.346 490.988 cv
302.5 491.7 li
302.5 496.3 li
302.506 496.353 li
305.352 497.064 li
305.47 497.402 305.599 497.729 305.754 498.049 cv
304.248 500.559 li
307.5 503.812 li
308.5 503.211 li
@
325.506 491.753 mo
325.5 495.5 li
325.506 495.5 li
325.506 491.753 li
cp
@
326 507.5 mo
310 507.5 li
309.171 507.5 308.5 506.828 308.5 506 cv
308.5 503 li
308.5 502.172 309.171 501.5 310 501.5 cv
326 501.5 li
326.829 501.5 327.5 502.172 327.5 503 cv
327.5 506 li
327.5 506.828 326.829 507.5 326 507.5 cv
cp
@
326 501.5 mo
310 501.5 li
309.171 501.5 308.5 500.828 308.5 500 cv
308.5 497 li
308.5 496.172 309.171 495.5 310 495.5 cv
326 495.5 li
326.829 495.5 327.5 496.172 327.5 497 cv
327.5 500 li
327.5 500.828 326.829 501.5 326 501.5 cv
cp
@
495 422.5 mo
482.5 433.5 li
484.5 433.5 li
485.922 446.167 li
486.007 446.926 486.648 447.5 487.412 447.5 cv
502.588 447.5 li
503.352 447.5 503.993 446.926 504.078 446.167 cv
505.5 433.5 li
507.5 433.5 li
495 422.5 li
cp
@
491 447.5 mo
490.183 440.958 li
489.82 438.06 492.079 435.5 495 435.5 cv
495 435.5 li
497.921 435.5 500.18 438.06 499.817 440.958 cv
499 447.5 li
@
495 429 mo
495.204 428.999 495.407 429.057 495.578 429.175 cv
495.844 429.358 495.982 429.631 495.995 429.908 cv
496.005 430.123 496.144 430.319 496.347 430.412 cv
496.792 430.615 497.08 431.077 496.98 431.602 cv
496.9 432.023 496.548 432.373 496.11 432.47 cv
495.792 432.541 495.503 432.481 495.268 432.343 cv
495.184 432.294 495.093 432.267 495 432.262 cv
494.907 432.267 494.816 432.294 494.732 432.343 cv
494.497 432.481 494.208 432.541 493.89 432.47 cv
493.452 432.373 493.1 432.023 493.02 431.602 cv
492.92 431.077 493.208 430.615 493.653 430.412 cv
493.856 430.319 493.995 430.123 494.005 429.908 cv
494.018 429.631 494.156 429.358 494.422 429.175 cv
494.593 429.057 494.796 428.999 495 429 cv
cp
@
0 lc
0 lj
498.108 429.622 mo
497.896 429.834 497.582 429.862 497.404 429.685 cv
497.228 429.508 497.256 429.192 497.468 428.98 cv
497.68 428.769 497.995 428.74 498.172 428.918 cv
498.349 429.095 498.32 429.41 498.108 429.622 cv
cp
@
496.726 427.796 mo
496.622 428.061 496.33 428.215 496.074 428.14 cv
495.818 428.064 495.695 427.788 495.8 427.522 cv
495.904 427.257 496.195 427.103 496.451 427.178 cv
496.707 427.254 496.83 427.53 496.726 427.796 cv
cp
@
491.903 429.622 mo
492.115 429.834 492.431 429.862 492.607 429.685 cv
492.784 429.508 492.756 429.192 492.544 428.98 cv
492.332 428.769 492.017 428.74 491.84 428.918 cv
491.663 429.095 491.691 429.41 491.903 429.622 cv
cp
@
493.208 427.796 mo
493.312 428.061 493.604 428.215 493.859 428.14 cv
494.115 428.064 494.237 427.788 494.134 427.522 cv
494.029 427.257 493.737 427.103 493.482 427.178 cv
493.227 427.254 493.104 427.53 493.208 427.796 cv
cp
@
1 lc
1 lj
375 540.5 mo
363.5 548.5 li
364.5 548.5 li
364.5 568 li
364.5 568.828 365.172 569.5 366 569.5 cv
384 569.5 li
384.828 569.5 385.5 568.828 385.5 568 cv
385.5 548.5 li
386.5 548.5 li
375 540.5 li
cp
@
379.5 569.5 mo
370.5 569.5 li
370.5 558.5 li
379.5 558.5 li
379.5 569.5 li
cp
@
378.5 554.5 mo
371.5 554.5 li
370.947 554.5 370.5 554.053 370.5 553.5 cv
370.5 548.5 li
370.5 547.947 370.947 547.5 371.5 547.5 cv
378.5 547.5 li
379.053 547.5 379.5 547.947 379.5 548.5 cv
379.5 553.5 li
379.5 554.053 379.053 554.5 378.5 554.5 cv
cp
@
370.5 548.5 mo
374.168 551.25 li
374.42 551.418 374.71 551.502 375 551.502 cv
375.29 551.502 375.58 551.418 375.832 551.25 cv
379.5 548.5 li
@
509.5 488.5 mo
486.5 488.5 li
486.5 486 li
486.5 485.172 487.172 484.5 488 484.5 cv
508 484.5 li
508.828 484.5 509.5 485.172 509.5 486 cv
509.5 488.5 li
cp
@
484.5 498.5 mo
480.5 498.5 li
480.5 491.5 li
484.5 491.5 li
484.5 498.5 li
cp
@
482.5 498.5 mo
482.5 505.5 li
@
503 491.5 mo
504.5 493 li
@
499.5 491.5 mo
504.5 496.5 li
@
508.5 488.5 mo
508.5 505.5 li
@
492.5 502.5 mo
503.5 502.5 li
@
487.5 505.5 mo
487.5 488.5 li
@
492.5 505.5 mo
492.5 501 li
492.5 500.172 493.172 499.5 494 499.5 cv
502 499.5 li
502.828 499.5 503.5 500.172 503.5 501 cv
503.5 505.5 li
@
559.5 489.5 mo
559.5 486.738 561.738 484.5 564.5 484.5 cv
567.262 484.5 569.5 486.738 569.5 489.5 cv
569.5 492.262 567.262 494.5 564.5 494.5 cv
561.738 494.5 559.5 492.262 559.5 489.5 cv
cp
@
549.5 499 mo
549.5 490.5 li
@
549.5 498.5 mo
543.145 498.5 li
@
544.55 500.55 mo
545.5 501.5 li
542.5 501.5 li
541.395 501.5 540.5 502.396 540.5 503.5 cv
540.5 503.5 li
540.5 504.604 541.395 505.5 542.5 505.5 cv
547.5 505.5 li
548.604 505.5 549.5 504.604 549.5 503.5 cv
549.5 498.5 li
557.5 498.5 li
560.403 504.306 li
560.768 505.038 561.517 505.5 562.335 505.5 cv
562.34 505.5 li
563.533 505.5 564.5 504.533 564.5 503.34 cv
564.5 502.972 li
564.5 502.661 564.433 502.354 564.304 502.071 cv
560.069 492.833 li
559.418 491.411 557.997 490.5 556.434 490.5 cv
547.5 490.5 li
544.738 490.5 542.5 492.738 542.5 495.5 cv
542.5 495.601 li
542.5 497.457 543.237 499.237 544.55 500.55 cv
cp
@
488.5 567.5 mo
488.5 568.604 487.604 569.5 486.5 569.5 cv
485.396 569.5 484.5 568.604 484.5 567.5 cv
484.5 566.396 485.396 565.5 486.5 565.5 cv
487.604 565.5 488.5 566.396 488.5 567.5 cv
cp
@
501.5 567.5 mo
501.5 568.604 500.604 569.5 499.5 569.5 cv
498.396 569.5 497.5 568.604 497.5 567.5 cv
497.5 566.396 498.396 565.5 499.5 565.5 cv
500.604 565.5 501.5 566.396 501.5 567.5 cv
cp
@
506.5 553.5 mo
506.5 551 li
506.5 550.172 507.172 549.5 508 549.5 cv
508 549.5 li
508.828 549.5 509.5 550.172 509.5 551 cv
509.5 551.5 li
@
484.5 544.5 mo
493.5 553.5 li
@
506.5 553.5 mo
506.5 560.68 500.68 566.5 493.5 566.5 cv
486.32 566.5 480.5 560.68 480.5 553.5 cv
480.5 546.32 486.32 540.5 493.5 540.5 cv
493.5 553.5 li
506.5 553.5 li
cp
@
480.5 553.5 mo
493.5 553.5 li
@
546.5 544.5 mo
559.324 540.557 li
559.462 540.52 559.605 540.5 559.754 540.5 cv
560.719 540.5 561.5 541.328 561.5 542.35 cv
561.5 544.199 li
@
564 569.5 mo
546 569.5 li
545.172 569.5 544.5 568.828 544.5 568 cv
544.5 546 li
544.5 545.172 545.172 544.5 546 544.5 cv
564 544.5 li
564.828 544.5 565.5 545.172 565.5 546 cv
565.5 568 li
565.5 568.828 564.828 569.5 564 569.5 cv
cp
@
558.18 557.429 mo
555.635 557.429 553.571 555.365 553.571 552.82 cv
553.571 552.358 553.66 551.921 553.787 551.5 cv
551.891 552.07 550.5 553.81 550.5 555.893 cv
550.5 558.438 552.563 560.5 555.107 560.5 cv
557.19 560.5 558.93 559.109 559.5 557.213 cv
559.079 557.34 558.642 557.429 558.18 557.429 cv
cp
@
444.161 548.569 mo
445.212 542.5 li
440.161 546.188 li
437.5 543.859 li
445.212 542.5 li
447.5 549.813 li
444.161 548.569 li
cp
@
440.161 546.188 mo
444.161 548.569 li
@
442.161 547.379 mo
439.885 550.5 li
@
436.5 550.5 mo
437.5 556.5 li
439.5 553.5 li
441 558 li
442.5 550.5 li
@
434 564.5 mo
434 564.776 433.776 565 433.5 565 cv
433.224 565 433 564.776 433 564.5 cv
433 564.224 433.224 564 433.5 564 cv
433.776 564 434 564.224 434 564.5 cv
cp
f
432 564.5 mo
432 564.776 431.776 565 431.5 565 cv
431.224 565 431 564.776 431 564.5 cv
431 564.224 431.224 564 431.5 564 cv
431.776 564 432 564.224 432 564.5 cv
cp
f
433 566 mo
433 566.276 432.776 566.5 432.5 566.5 cv
432.224 566.5 432 566.276 432 566 cv
432 565.724 432.224 565.5 432.5 565.5 cv
432.776 565.5 433 565.724 433 566 cv
cp
f
434.461 550.493 mo
435.508 547.87 li
434.086 546.56 li
436.208 546.31 li
434.322 544.789 li
435.908 544.286 li
@
432.023 550.5 mo
431 544 li
428.5 542.5 li
@
429.449 550.5 mo
429.474 550.335 429.5 550.171 429.5 550 cv
429.5 548.067 427.933 546.5 426 546.5 cv
424.067 546.5 422.5 548.067 422.5 550 cv
422.5 551.486 423.43 552.748 424.736 553.256 cv
@
425.79 550.5 mo
424.969 551.871 424.5 553.502 424.5 555.357 cv
424.5 561.393 429.425 567.5 435.5 567.5 cv
441.575 567.5 446.5 561.393 446.5 555.357 cv
446.5 553.502 446.031 551.871 445.21 550.5 cv
425.79 550.5 li
cp
@
442 505.5 mo
425 505.5 li
424.172 505.5 423.5 504.828 423.5 504 cv
423.5 486.5 li
443.5 486.5 li
443.5 504 li
443.5 504.828 442.828 505.5 442 505.5 cv
cp
@
443.5 486.5 mo
423.5 486.5 li
422.947 486.5 422.5 486.053 422.5 485.5 cv
422.5 485.5 li
422.5 484.947 422.947 484.5 423.5 484.5 cv
443.5 484.5 li
444.053 484.5 444.5 484.947 444.5 485.5 cv
444.5 485.5 li
444.5 486.053 444.053 486.5 443.5 486.5 cv
cp
@
425.5 490.5 mo
425.5 501.5 li
@
443.5 488.5 mo
446 488.5 li
446.828 488.5 447.5 489.172 447.5 490 cv
447.5 497.5 li
447.5 499.709 445.709 501.5 443.5 501.5 cv
443.5 501.5 li
@
316.98 548.166 mo
318.527 546.372 320.029 544.281 321.492 542.048 cv
319.537 541.066 317.337 540.5 315 540.5 cv
314 540.5 313.023 540.602 312.08 540.794 cv
313.11 542.88 314.117 545.133 315.08 547.546 cv
@
313.675 548.689 mo
310.319 548.045 306.389 547.857 302.43 547.793 cv
@
313.889 550.675 mo
309.225 556.729 306.527 562.339 305.611 565.896 cv
306.527 562.339 309.225 556.729 313.889 550.675 cv
@
316.385 551.285 mo
317.976 556.074 321.167 561.522 323.784 566.395 cv
321.167 561.522 317.976 556.074 316.385 551.285 cv
@
328.816 550.602 mo
325.475 550.634 321.649 550.396 317.471 549.79 cv
@
317.5 549.5 mo
317.5 550.604 316.604 551.5 315.5 551.5 cv
314.396 551.5 313.5 550.604 313.5 549.5 cv
313.5 548.396 314.396 547.5 315.5 547.5 cv
316.604 547.5 317.5 548.396 317.5 549.5 cv
cp
@
329.5 555 mo
329.5 563.008 323.008 569.5 315 569.5 cv
306.992 569.5 300.5 563.008 300.5 555 cv
300.5 546.992 306.992 540.5 315 540.5 cv
323.008 540.5 329.5 546.992 329.5 555 cv
cp
@
185.505 554.477 mo
184.5 555.32 li
184.5 567.5 li
190.5 567.5 li
190.5 556.5 li
199.5 556.5 li
199.5 567.5 li
205.5 567.5 li
205.5 555.32 li
@
205.5 551.189 mo
205.5 544.5 li
201.5 544.5 li
201.5 547.879 li
@
195 542.5 mo
180.5 554.5 li
182.5 557 li
195 546.5 li
207.5 557 li
209.5 554.5 li
195 542.5 li
cp
@
250.5 544.5 mo
250.5 545.604 249.604 546.5 248.5 546.5 cv
247.396 546.5 246.5 545.604 246.5 544.5 cv
246.5 543.396 247.396 542.5 248.5 542.5 cv
249.604 542.5 250.5 543.396 250.5 544.5 cv
cp
@
245.5 565.5 mo
245.5 567 li
248.5 569.5 li
251.5 567 li
251.5 557 li
253.5 557 li
252.922 555.523 li
255.078 554.055 256.5 551.546 256.5 548.695 cv
256.5 544.169 252.918 540.5 248.5 540.5 cv
244.082 540.5 240.5 544.169 240.5 548.695 cv
240.5 551.546 241.922 554.055 244.078 555.523 cv
243.5 557 li
245.5 557 li
245.5 558 li
246.5 559.413 li
245.5 560.674 li
246.5 561.935 li
245.5 563.195 li
246.5 564.456 li
245.5 565.5 li
cp
@
254.5 554.1 mo
254.5 560.5 li
258.5 560.5 li
258.5 553.5 li
263.5 553.5 li
263.5 560.5 li
267.5 560.5 li
267.5 552.5 li
269.5 552.5 li
261 545.5 li
256.467 549.233 li
@
139.5 561.214 mo
145.5 565.5 li
141.5 559 li
139.5 557.75 li
@
126 549.948 mo
120.5 554.5 li
124.5 554.5 li
124.5 567.5 li
130.5 567.5 li
130.5 555.5 li
132.429 555.5 li
131 553.5 li
126 549.948 li
cp
@
139.5 567.5 mo
145.5 567.5 li
145.5 565.5 li
139.5 561.214 li
139.5 567.5 li
cp
@
135 542.5 mo
129.5 547.052 li
134.5 551 li
136 554.5 li
136.75 555.5 li
139.5 555.5 li
139.5 557.75 li
141.5 559 li
145.5 565.5 li
145.5 554.5 li
149.5 554.5 li
135 542.5 li
cp
@
13.5854 545.5 mo
10.5 545.5 li
11 553 li
@
13.5 556.5 mo
13.5 546 li
13.5 545.172 14.1714 544.5 15 544.5 cv
15 544.5 li
15.8286 544.5 16.5 545.172 16.5 546 cv
16.5 556.5 li
@
16.4146 545.5 mo
19.5 545.5 li
19 553 li
@
2.5 558.378 mo
1.23145 558.836 .5 559.37 .5 559.941 cv
.5 561.646 6.9917 565.5 15 565.5 cv
23.0083 565.5 29.5 561.646 29.5 559.941 cv
29.5 559.37 28.7686 558.836 27.5 558.378 cv
@
10.4668 546.546 mo
5.80566 548.327 2.5 552.768 2.5 557.977 cv
2.5 559.915 li
2.5 559.915 6.44727 562.5 15 562.5 cv
23.5527 562.5 27.5 559.915 27.5 559.915 cv
27.5 557.977 li
27.5 552.769 24.1953 548.328 19.5352 546.547 cv
@
7.5 626.5 mo
.5 626.5 li
.5 609.5 li
7.5 609.5 li
7.5 626.5 li
cp
@
5.5 607.5 mo
1.5 607.5 li
.947754 607.5 .5 607.053 .5 606.5 cv
.5 606.5 li
.5 605.947 .947754 605.5 1.5 605.5 cv
5.5 605.5 li
6.05225 605.5 6.5 605.947 6.5 606.5 cv
6.5 606.5 li
6.5 607.053 6.05225 607.5 5.5 607.5 cv
cp
@
1.5 607.5 mo
1.5 609.5 li
@
4.5 607.5 mo
4.5 609.5 li
@
7.5 613.5 mo
7.04346 613.5 li
6.21484 613.5 5.54346 614.172 5.54346 615 cv
5.54346 620 li
5.54346 620.828 6.21484 621.5 7.04346 621.5 cv
7.5 621.5 li
@
24 622.5 mo
15 622.5 li
14.1714 622.5 13.5 621.828 13.5 621 cv
13.5 621 li
13.5 620.172 14.1714 619.5 15 619.5 cv
24 619.5 li
24.8286 619.5 25.5 620.172 25.5 621 cv
25.5 621 li
25.5 621.828 24.8286 622.5 24 622.5 cv
cp
@
11.5 615 mo
11.5 615.276 11.2764 615.5 11 615.5 cv
10.7236 615.5 10.5 615.276 10.5 615 cv
10.5 614.724 10.7236 614.5 11 614.5 cv
11.2764 614.5 11.5 614.724 11.5 615 cv
cp
@
14.1489 613.355 mo
14.4946 613.011 14.8872 612.619 15.3711 612.137 cv
19.0806 608.436 20.9355 609.052 23.4087 607.201 cv
25.4253 605.692 26.209 604.593 26.4292 604.239 cv
26.4766 604.162 26.5 604.076 26.5 603.986 cv
26.5 603.718 26.2817 603.5 26.0127 603.5 cv
24.8354 603.5 23.6929 603.886 22.752 604.591 cv
22.3838 604.867 21.9688 605.144 21.5537 605.351 cv
20.3174 605.968 15.6802 606.893 13.5161 609.052 cv
12.624 609.942 11.854 610.71 11.2388 611.324 cv
@
7.5 610.5 mo
8.48584 610.5 li
9.50928 610.5 10.5083 610.814 11.3477 611.4 cv
14.1265 613.34 li
16.1406 614.746 18.5381 615.5 20.9951 615.5 cv
25.5 615.5 li
27.709 615.5 29.5 617.291 29.5 619.5 cv
29.5 626.5 li
7.56689 626.5 li
@
89.5 555 mo
87.8545 558.174 li
89.1392 558.228 li
86.8281 560.955 li
88.0659 561.295 li
85.2051 563.437 li
86.3354 564.043 li
83.0703 565.495 li
84.04 566.338 li
80.5332 567.029 li
81.2925 568.067 li
77.7197 567.961 li
78.2271 569.14 li
74.769 568.238 li
75 569.5 li
71.8262 567.854 li
71.772 569.14 li
69.0444 566.828 li
68.7056 568.066 li
66.5635 565.205 li
65.9575 566.336 li
64.5049 563.07 li
63.6621 564.04 li
62.9707 560.533 li
61.9331 561.293 li
62.0396 557.72 li
60.8604 558.228 li
61.7617 554.769 li
60.5 555 li
62.1455 551.826 li
60.8608 551.772 li
63.1719 549.045 li
61.9341 548.705 li
64.7949 546.563 li
63.6646 545.957 li
66.9297 544.505 li
65.96 543.662 li
69.4668 542.971 li
68.7075 541.933 li
72.2803 542.039 li
71.7729 540.86 li
75.231 541.762 li
75 540.5 li
78.1738 542.146 li
78.228 540.86 li
80.9556 543.172 li
81.2944 541.934 li
83.4365 544.795 li
84.0425 543.664 li
85.4951 546.93 li
86.3379 545.96 li
87.0293 549.467 li
88.0669 548.707 li
87.9604 552.28 li
89.1396 551.772 li
88.2383 555.231 li
89.5 555 li
cp
@
80.5 555 mo
80.5 558.037 78.0376 560.5 75 560.5 cv
71.9624 560.5 69.5 558.037 69.5 555 cv
69.5 551.963 71.9624 549.5 75 549.5 cv
78.0376 549.5 80.5 551.963 80.5 555 cv
cp
@
75.5 555 mo
75.5 555.276 75.2764 555.5 75 555.5 cv
74.7236 555.5 74.5 555.276 74.5 555 cv
74.5 554.724 74.7236 554.5 75 554.5 cv
75.2764 554.5 75.5 554.724 75.5 555 cv
cp
@
78.5 554.5 mo
78.7764 554.5 79 554.724 79 555 cv
79 555.276 78.7764 555.5 78.5 555.5 cv
78.2236 555.5 78 555.276 78 555 cv
78 554.724 78.2236 554.5 78.5 554.5 cv
cp
f
71.5 554.5 mo
71.7764 554.5 72 554.724 72 555 cv
72 555.276 71.7764 555.5 71.5 555.5 cv
71.2236 555.5 71 555.276 71 555 cv
71 554.724 71.2236 554.5 71.5 554.5 cv
cp
f
74.5 551.5 mo
74.5 551.224 74.7236 551 75 551 cv
75.2764 551 75.5 551.224 75.5 551.5 cv
75.5 551.776 75.2764 552 75 552 cv
74.7236 552 74.5 551.776 74.5 551.5 cv
cp
f
74.5 558.5 mo
74.5 558.224 74.7236 558 75 558 cv
75.2764 558 75.5 558.224 75.5 558.5 cv
75.5 558.776 75.2764 559 75 559 cv
74.7236 559 74.5 558.776 74.5 558.5 cv
cp
f
77.8286 557.121 mo
78.0239 557.316 78.0239 557.633 77.8286 557.828 cv
77.6333 558.023 77.3164 558.023 77.1211 557.828 cv
76.9263 557.633 76.9263 557.316 77.1211 557.121 cv
77.3164 556.926 77.6333 556.926 77.8286 557.121 cv
cp
f
72.8789 552.172 mo
73.0737 552.367 73.0737 552.684 72.8789 552.879 cv
72.6836 553.074 72.3667 553.074 72.1714 552.879 cv
71.9761 552.684 71.9761 552.367 72.1714 552.172 cv
72.3667 551.977 72.6836 551.977 72.8789 552.172 cv
cp
f
77.1211 552.172 mo
77.3164 551.977 77.6333 551.977 77.8286 552.172 cv
78.0239 552.367 78.0239 552.684 77.8286 552.879 cv
77.6333 553.074 77.3164 553.074 77.1211 552.879 cv
76.9263 552.684 76.9263 552.367 77.1211 552.172 cv
cp
f
72.1714 557.121 mo
72.3667 556.926 72.6836 556.926 72.8789 557.121 cv
73.0737 557.316 73.0737 557.633 72.8789 557.828 cv
72.6836 558.023 72.3667 558.023 72.1714 557.828 cv
71.9761 557.633 71.9761 557.316 72.1714 557.121 cv
cp
f
77 618.5 mo
77 617.396 76.1045 616.5 75 616.5 cv
73.8955 616.5 73 617.396 73 618.5 cv
73 619.293 73.4648 619.972 74.1338 620.295 cv
73.6665 624.5 li
76.3335 624.5 li
75.8662 620.295 li
76.5352 619.972 77 619.293 77 618.5 cv
cp
@
84 629.5 mo
66 629.5 li
65.1714 629.5 64.5 628.828 64.5 628 cv
64.5 611.5 li
85.5 611.5 li
85.5 628 li
85.5 628.828 84.8286 629.5 84 629.5 cv
cp
@
68.5 609.5 mo
68.5 609 li
68.5 605.416 71.416 602.5 75 602.5 cv
78.584 602.5 81.5 605.416 81.5 609 cv
81.5 611.5 li
83.5 611.5 li
83.5 609 li
83.5 604.313 79.687 600.5 75 600.5 cv
70.313 600.5 66.5 604.313 66.5 609 cv
66.5 609.5 li
68.5 609.5 li
cp
@
146.718 603.282 mo
143.007 599.572 136.993 599.572 133.282 603.282 cv
130.82 605.745 130.002 609.222 130.809 612.367 cv
129.326 613.108 li
130.587 614.369 li
129.326 615.631 li
128.065 615.631 li
128.065 616.892 li
126.804 618.152 li
125.543 618.152 li
125.543 619.413 li
124.283 620.674 li
123.021 620.674 li
123.021 621.935 li
120.5 624.456 li
120.5 629.5 li
125.543 629.5 li
135.63 619.413 li
136.891 620.674 li
137.633 619.191 li
140.778 619.998 144.255 619.181 146.718 616.718 cv
150.428 613.008 150.428 606.992 146.718 603.282 cv
cp
@
145.5 607 mo
145.5 608.381 144.381 609.5 143 609.5 cv
141.619 609.5 140.5 608.381 140.5 607 cv
140.5 605.619 141.619 604.5 143 604.5 cv
144.381 604.5 145.5 605.619 145.5 607 cv
cp
@
124.5 625.5 mo
133.5 616.5 li
@
256.5 607.5 mo
254.609 605.6 250.5 605.5 250.5 605.5 cv
250.5 605.5 251.526 607.987 251.526 608.897 cv
@
264.5 613 mo
264.5 613.276 264.276 613.5 264 613.5 cv
263.724 613.5 263.5 613.276 263.5 613 cv
263.5 612.724 263.724 612.5 264 612.5 cv
264.276 612.5 264.5 612.724 264.5 613 cv
cp
@
258.5 611.5 mo
258.5 611.5 257.5 613.625 257.5 615.75 cv
257.5 617.875 258.5 620 258.5 620 cv
@
248.49 620.526 mo
248.186 620.94 248 621.446 248 622 cv
248 623.381 249.119 624.5 250.5 624.5 cv
251.652 624.5 252.613 623.716 252.902 622.655 cv
@
269.5 615.5 mo
266.978 610.833 262.565 607.5 256.891 607.5 cv
253.109 607.5 247.435 610.833 246.174 612.167 cv
244.913 610.833 240.5 608.5 240.5 608.5 cv
240.5 608.5 241.5 613.5 241.5 615.5 cv
241.5 617.5 240.5 622.5 240.5 622.5 cv
240.5 622.5 244.913 620.167 246.174 618.833 cv
247.435 620.167 253.109 623.5 256.891 623.5 cv
262.565 623.5 266.978 620.167 269.5 615.5 cv
cp
@
30 675 mo
30 676.242 28.5972 677.283 28.291 678.428 cv
27.9746 679.613 28.6592 681.214 28.0591 682.252 cv
27.4502 683.304 25.7153 683.508 24.8613 684.361 cv
24.0073 685.216 23.8037 686.95 22.7515 687.56 cv
21.7139 688.159 20.1133 687.475 18.9282 687.791 cv
17.7827 688.098 16.7417 689.5 15.5 689.5 cv
14.2583 689.5 13.2173 688.098 12.0718 687.791 cv
10.8867 687.475 9.28564 688.159 8.24805 687.559 cv
7.1958 686.95 6.99219 685.216 6.13818 684.361 cv
5.28418 683.507 3.5498 683.304 2.94092 682.251 cv
2.34033 681.214 3.02539 679.613 2.70898 678.428 cv
2.40283 677.283 1 676.242 1 675 cv
1 673.758 2.40283 672.717 2.70898 671.572 cv
3.02539 670.387 2.34082 668.786 2.94092 667.748 cv
3.5498 666.696 5.28467 666.492 6.13867 665.639 cv
6.99268 664.784 7.19629 663.05 8.24854 662.44 cv
9.28613 661.841 10.8867 662.525 12.0718 662.209 cv
13.2173 661.902 14.2583 660.5 15.5 660.5 cv
16.7417 660.5 17.7827 661.902 18.9282 662.209 cv
20.1133 662.525 21.7144 661.841 22.752 662.441 cv
23.8042 663.05 24.0078 664.784 24.8618 665.639 cv
25.7158 666.493 27.4502 666.696 28.0591 667.749 cv
28.6597 668.786 27.9746 670.387 28.291 671.572 cv
28.5972 672.717 30 673.758 30 675 cv
cp
@
9.05029 675 mo
9.01611 674.852 9 674.707 9 674.571 cv
8.99951 673.952 9.33301 673.5 9.84961 673.5 cv
10.4795 673.5 11.1426 674.172 11.3311 675 cv
11.3647 675.148 11.3809 675.293 11.3809 675.429 cv
11.3813 676.048 11.0479 676.5 10.5313 676.5 cv
9.90137 676.5 9.23828 675.828 9.05029 675 cv
cp
@
11.5493 670.5 mo
11.5205 670.348 11.5044 670.198 11.501 670.056 cv
11.478 669.165 11.9297 668.5 12.6201 668.5 cv
13.4214 668.5 14.2407 669.396 14.4507 670.5 cv
14.4795 670.652 14.4956 670.802 14.499 670.944 cv
14.522 671.835 14.0703 672.5 13.3799 672.5 cv
12.5786 672.5 11.7593 671.604 11.5493 670.5 cv
cp
@
15.5005 674.5 mo
13.5503 674.5 13.521 676.512 13.0771 677.046 cv
12.3081 677.971 11.019 678.597 11 679.909 cv
10.9849 680.986 11.6997 681.5 12.731 681.5 cv
14.0435 681.5 14.3374 680.5 15.5 680.5 cv
15.5 680.5 li
16.6626 680.5 16.9565 681.5 18.269 681.5 cv
19.3003 681.5 20.0151 680.986 19.9995 679.909 cv
19.981 678.597 18.6919 677.971 17.9229 677.046 cv
17.479 676.512 17.4497 674.5 15.5 674.5 cv
15.5005 674.5 li
cp
@
21.9497 675 mo
21.9839 674.852 22 674.707 22 674.571 cv
22.0005 673.952 21.667 673.5 21.1504 673.5 cv
20.5205 673.5 19.8574 674.172 19.6689 675 cv
19.6353 675.148 19.6191 675.293 19.6191 675.429 cv
19.6187 676.048 19.9521 676.5 20.4688 676.5 cv
21.0986 676.5 21.7617 675.828 21.9497 675 cv
cp
@
19.4507 670.5 mo
19.4795 670.348 19.4956 670.198 19.499 670.056 cv
19.522 669.165 19.0703 668.5 18.3799 668.5 cv
17.5786 668.5 16.7593 669.396 16.5493 670.5 cv
16.5205 670.652 16.5044 670.802 16.501 670.944 cv
16.478 671.835 16.9297 672.5 17.6201 672.5 cv
18.4214 672.5 19.2407 671.604 19.4507 670.5 cv
cp
@
182.6 621 mo
182.566 620.852 182.55 620.707 182.55 620.571 cv
182.55 619.952 182.883 619.5 183.4 619.5 cv
184.03 619.5 184.693 620.172 184.881 621 cv
184.915 621.148 184.931 621.293 184.931 621.429 cv
184.932 622.048 184.598 622.5 184.081 622.5 cv
183.452 622.5 182.789 621.828 182.6 621 cv
cp
@
185.1 616.5 mo
185.07 616.348 185.055 616.198 185.051 616.056 cv
185.028 615.165 185.479 614.5 186.17 614.5 cv
186.971 614.5 187.791 615.396 188.001 616.5 cv
188.03 616.652 188.046 616.801 188.049 616.944 cv
188.072 617.835 187.621 618.5 186.93 618.5 cv
186.129 618.5 185.309 617.604 185.1 616.5 cv
cp
@
189.05 620.5 mo
187.101 620.5 187.071 622.511 186.627 623.046 cv
185.858 623.971 184.569 624.597 184.55 625.909 cv
184.535 626.986 185.25 627.5 186.281 627.5 cv
187.593 627.5 187.888 626.5 189.05 626.5 cv
189.05 626.5 li
190.212 626.5 190.507 627.5 191.819 627.5 cv
192.851 627.5 193.565 626.986 193.55 625.909 cv
193.531 624.597 192.242 623.971 191.473 623.046 cv
191.029 622.511 191 620.5 189.05 620.5 cv
189.05 620.5 li
cp
@
195.5 621 mo
195.534 620.852 195.55 620.707 195.55 620.571 cv
195.551 619.952 195.217 619.5 194.7 619.5 cv
194.07 619.5 193.407 620.172 193.219 621 cv
193.186 621.148 193.169 621.293 193.169 621.429 cv
193.168 622.048 193.502 622.5 194.019 622.5 cv
194.649 622.5 195.312 621.828 195.5 621 cv
cp
@
193.001 616.5 mo
193.03 616.348 193.046 616.198 193.049 616.056 cv
193.072 615.165 192.621 614.5 191.93 614.5 cv
191.129 614.5 190.309 615.396 190.1 616.5 cv
190.07 616.652 190.055 616.801 190.051 616.944 cv
190.028 617.835 190.479 618.5 191.17 618.5 cv
191.971 618.5 192.791 617.604 193.001 616.5 cv
cp
@
194.6 609 mo
194.566 608.852 194.55 608.707 194.55 608.571 cv
194.55 607.952 194.883 607.5 195.4 607.5 cv
196.03 607.5 196.693 608.172 196.881 609 cv
196.915 609.148 196.931 609.293 196.931 609.429 cv
196.932 610.048 196.598 610.5 196.081 610.5 cv
195.452 610.5 194.789 609.828 194.6 609 cv
cp
@
197.1 604.5 mo
197.07 604.348 197.055 604.198 197.051 604.056 cv
197.028 603.165 197.479 602.5 198.17 602.5 cv
198.971 602.5 199.791 603.396 200.001 604.5 cv
200.03 604.652 200.046 604.801 200.049 604.944 cv
200.072 605.835 199.621 606.5 198.93 606.5 cv
198.129 606.5 197.309 605.604 197.1 604.5 cv
cp
@
201.05 608.5 mo
199.101 608.5 199.071 610.511 198.627 611.046 cv
197.858 611.971 196.569 612.597 196.55 613.909 cv
196.535 614.986 197.25 615.5 198.281 615.5 cv
199.593 615.5 199.888 614.5 201.05 614.5 cv
201.05 614.5 li
202.212 614.5 202.507 615.5 203.819 615.5 cv
204.851 615.5 205.565 614.986 205.55 613.909 cv
205.531 612.597 204.242 611.971 203.473 611.046 cv
203.029 610.511 203 608.5 201.05 608.5 cv
201.05 608.5 li
cp
@
207.5 609 mo
207.534 608.852 207.55 608.707 207.55 608.571 cv
207.551 607.952 207.217 607.5 206.7 607.5 cv
206.07 607.5 205.407 608.172 205.219 609 cv
205.186 609.148 205.169 609.293 205.169 609.429 cv
205.168 610.048 205.502 610.5 206.019 610.5 cv
206.649 610.5 207.312 609.828 207.5 609 cv
cp
@
205.001 604.5 mo
205.03 604.348 205.046 604.198 205.049 604.056 cv
205.072 603.165 204.621 602.5 203.93 602.5 cv
203.129 602.5 202.309 603.396 202.1 604.5 cv
202.07 604.652 202.055 604.801 202.051 604.944 cv
202.028 605.835 202.479 606.5 203.17 606.5 cv
203.971 606.5 204.791 605.604 205.001 604.5 cv
cp
@
501.5 615 mo
501.5 618.59 498.59 621.5 495 621.5 cv
491.41 621.5 488.5 618.59 488.5 615 cv
488.5 611.41 491.41 608.5 495 608.5 cv
498.59 608.5 501.5 611.41 501.5 615 cv
cp
@
497 612 mo
494.667 612 li
493.746 612 493 612.672 493 613.5 cv
493 613.5 li
493 614.328 493.746 615 494.667 615 cv
495.333 615 li
496.254 615 497 615.672 497 616.5 cv
497 616.5 li
497 617.328 496.254 618 495.333 618 cv
493 618 li
@
495 612 mo
495 610.5 li
@
495 618 mo
495 619.5 li
@
509.187 612.006 mo
506.776 613.397 li
506.059 613.812 505.142 613.565 504.728 612.848 cv
501.728 607.652 li
501.313 606.935 501.559 606.018 502.276 605.603 cv
504.673 604.22 li
@
504.673 625.78 mo
502.276 624.397 li
501.559 623.983 501.313 623.065 501.728 622.348 cv
504.728 617.152 li
505.142 616.435 506.059 616.188 506.776 616.603 cv
509.187 617.994 li
@
490.5 628.779 mo
490.5 626 li
490.5 625.172 491.172 624.5 492 624.5 cv
498 624.5 li
498.828 624.5 499.5 625.172 499.5 626 cv
499.5 628.779 li
@
480.813 617.994 mo
483.224 616.603 li
483.941 616.188 484.858 616.435 485.272 617.152 cv
488.272 622.348 li
488.687 623.065 488.441 623.983 487.724 624.397 cv
485.327 625.78 li
@
485.327 604.22 mo
487.724 605.603 li
488.441 606.018 488.687 606.935 488.272 607.652 cv
485.272 612.848 li
484.858 613.565 483.941 613.812 483.224 613.397 cv
480.813 612.006 li
@
499.5 601.221 mo
499.5 604 li
499.5 604.828 498.828 605.5 498 605.5 cv
492 605.5 li
491.172 605.5 490.5 604.828 490.5 604 cv
490.5 601.221 li
@
509.5 615 mo
509.5 623.008 503.008 629.5 495 629.5 cv
486.992 629.5 480.5 623.008 480.5 615 cv
480.5 606.992 486.992 600.5 495 600.5 cv
503.008 600.5 509.5 606.992 509.5 615 cv
cp
@
443.32 626.281 mo
443.32 626.281 li
442.468 625.16 441.131 624.5 439.711 624.5 cv
430.289 624.5 li
428.869 624.5 427.532 625.16 426.68 626.281 cv
426.68 626.281 li
426.319 626.756 426.059 627.297 425.912 627.872 cv
425.5 629.5 li
444.5 629.5 li
444.088 627.872 li
443.941 627.297 443.681 626.756 443.32 626.281 cv
cp
@
432.5 604 mo
434.5 608.5 li
@
432.353 617.224 mo
430.566 624.5 li
439.434 624.5 li
437.647 617.224 li
@
440.7 616.25 mo
440.7 616.25 438.148 617.5 435 617.5 cv
431.852 617.5 429.3 616.25 429.3 616.25 cv
429.3 616.25 431.852 615 435 615 cv
438.148 615 440.7 616.25 440.7 616.25 cv
cp
@
436.923 603.021 mo
436.968 602.854 437 602.682 437 602.5 cv
437 601.396 436.104 600.5 435 600.5 cv
433.896 600.5 433 601.396 433 602.5 cv
433 602.682 433.032 602.854 433.077 603.021 cv
431.556 604.906 430.5 608.545 430.5 610.387 cv
430.5 612.935 432.515 615 435 615 cv
437.485 615 439.5 612.935 439.5 610.387 cv
439.5 608.545 438.444 604.906 436.923 603.021 cv
cp
@
360.5 629.5 mo
360.5 629.5 li
361.419 627.661 363.299 626.5 365.354 626.5 cv
384.646 626.5 li
386.701 626.5 388.581 627.661 389.5 629.5 cv
389.5 629.5 li
360.5 629.5 li
cp
@
372.5 613.5 mo
372.5 626.5 li
377.5 624.137 li
@
372.5 622.954 mo
377.5 620.591 li
@
372.5 619.409 mo
377.5 617.046 li
@
372.5 615.863 mo
377.5 613.5 li
377.5 626.5 li
@
360.5 609.5 mo
361.026 611.606 li
361.305 612.72 362.305 613.5 363.452 613.5 cv
386.548 613.5 li
387.695 613.5 388.695 612.72 388.974 611.606 cv
389.5 609.5 li
360.5 609.5 li
cp
@
375.5 601 mo
375.5 601.276 375.276 601.5 375 601.5 cv
374.724 601.5 374.5 601.276 374.5 601 cv
374.5 600.724 374.724 600.5 375 600.5 cv
375.276 600.5 375.5 600.724 375.5 601 cv
cp
@
380.5 620.5 mo
381.311 623.742 li
381.422 624.188 381.822 624.5 382.281 624.5 cv
386.719 624.5 li
387.178 624.5 387.578 624.188 387.689 623.742 cv
388.5 620.5 li
380.5 620.5 li
cp
@
384.5 624.5 mo
384.5 626.5 li
@
384.5 613.5 mo
384.5 620.5 li
@
375 601.5 mo
370.587 606.833 360.5 609.5 360.5 609.5 cv
@
375 601.5 mo
379.413 606.833 389.5 609.5 389.5 609.5 cv
@
375 601.5 mo
373.782 606.833 371 609.5 371 609.5 cv
@
375 601.5 mo
376.218 606.833 379 609.5 379 609.5 cv
@
361.5 620.5 mo
362.311 623.742 li
362.422 624.188 362.822 624.5 363.281 624.5 cv
367.719 624.5 li
368.178 624.5 368.578 624.188 368.689 623.742 cv
369.5 620.5 li
361.5 620.5 li
cp
@
365.5 624.5 mo
365.5 626.5 li
@
365.5 613.5 mo
365.5 620.5 li
@
544.5 688 mo
544.5 662 li
544.5 661.172 545.172 660.5 546 660.5 cv
564 660.5 li
564.828 660.5 565.5 661.172 565.5 662 cv
565.5 684.5 li
565.5 687.262 563.262 689.5 560.5 689.5 cv
546 689.5 li
545.172 689.5 544.5 688.828 544.5 688 cv
cp
@
562.5 674.5 mo
546.5 674.5 li
546.5 662.5 li
563.5 662.5 li
563.5 673.5 li
563.5 674.053 563.053 674.5 562.5 674.5 cv
cp
@
550.5 683.5 mo
549.5 683.5 li
549.5 676.5 li
550.5 676.5 li
550.5 683.5 li
cp
@
546.5 680.5 mo
546.5 679.5 li
553.5 679.5 li
553.5 680.5 li
546.5 680.5 li
cp
@
562.5 679 mo
562.5 679.276 562.276 679.5 562 679.5 cv
561.724 679.5 561.5 679.276 561.5 679 cv
561.5 678.724 561.724 678.5 562 678.5 cv
562.276 678.5 562.5 678.724 562.5 679 cv
cp
@
559.5 681 mo
559.5 681.276 559.276 681.5 559 681.5 cv
558.724 681.5 558.5 681.276 558.5 681 cv
558.5 680.724 558.724 680.5 559 680.5 cv
559.276 680.5 559.5 680.724 559.5 681 cv
cp
@
553.5 685.5 mo
554.833 684.869 li
@
556.167 685.5 mo
557.5 684.869 li
@
133.5 685.5 mo
133.5 683.5 li
129.5 683.5 li
129.5 685.5 li
133.5 685.5 li
cp
@
124.5 664.5 mo
124.5 667.5 li
127.5 667.5 li
127.5 664.5 li
124.5 664.5 li
cp
@
127.5 671.5 mo
127.5 674.5 li
130.5 674.5 li
130.5 671.5 li
127.5 671.5 li
cp
@
139.5 671.5 mo
139.5 674.5 li
142.5 674.5 li
142.5 671.5 li
139.5 671.5 li
cp
@
147.5 675.5 mo
147.5 673.5 li
144.5 673.5 li
144.5 669.5 li
142.5 669.5 li
142.5 667.5 li
139.5 667.5 li
139.5 669.5 li
130.5 669.5 li
130.5 667.5 li
127.5 667.5 li
127.5 669.5 li
125.5 669.5 li
125.5 673.5 li
122.5 673.5 li
122.5 675.5 li
120.5 675.5 li
120.5 683.5 li
123.5 683.5 li
123.5 678.5 li
126.5 678.5 li
126.5 683.5 li
129.5 683.5 li
129.5 680.5 li
140.5 680.5 li
140.5 683.5 li
143.5 683.5 li
143.5 678.5 li
146.5 678.5 li
146.5 683.5 li
149.5 683.5 li
149.5 675.5 li
147.5 675.5 li
cp
@
136.5 685.5 mo
140.5 685.5 li
140.5 683.5 li
136.5 683.5 li
136.5 685.5 li
cp
@
145.5 664.5 mo
142.5 664.5 li
142.5 667.5 li
145.5 667.5 li
145.5 664.5 li
cp
@
551.5 624.5 mo
551.5 625.604 551.276 626.5 551 626.5 cv
550.724 626.5 550.5 625.604 550.5 624.5 cv
550.5 623.396 550.724 622.5 551 622.5 cv
551.276 622.5 551.5 623.396 551.5 624.5 cv
cp
@
559.5 624.5 mo
559.5 625.604 559.276 626.5 559 626.5 cv
558.724 626.5 558.5 625.604 558.5 624.5 cv
558.5 623.396 558.724 622.5 559 622.5 cv
559.276 622.5 559.5 623.396 559.5 624.5 cv
cp
@
561.5 609 mo
561.5 612.59 558.59 615.5 555 615.5 cv
551.41 615.5 548.5 612.59 548.5 609 cv
548.5 605.41 551.41 602.5 555 602.5 cv
558.59 602.5 561.5 605.41 561.5 609 cv
cp
@
555 618.5 mo
550.907 618.5 547.347 619.988 545.5 622.185 cv
545.938 628.147 547.268 629.5 555 629.5 cv
562.732 629.5 564.063 628.147 564.5 622.185 cv
562.653 619.988 559.093 618.5 555 618.5 cv
cp
@
540.85 617.835 mo
543.009 616.778 544.5 614.566 544.5 612 cv
544.5 610.228 543.788 608.622 542.638 607.45 cv
@
567.563 607.779 mo
566.591 608.916 566 610.388 566 612 cv
566 614.398 567.303 616.488 569.236 617.615 cv
@
564.301 624.073 mo
567.517 622.488 569.5 619.642 569.5 615 cv
569.5 606.992 563.008 600.5 555 600.5 cv
546.992 600.5 540.5 606.992 540.5 615 cv
540.5 619.271 542.541 622.021 545.647 623.67 cv
@
427.5 688 mo
427.5 687.172 426.828 686.5 426 686.5 cv
425.172 686.5 424.5 687.172 424.5 688 cv
424.5 688.828 425.172 689.5 426 689.5 cv
426.828 689.5 427.5 688.828 427.5 688 cv
cp
@
445.5 688 mo
445.5 687.172 444.828 686.5 444 686.5 cv
443.172 686.5 442.5 687.172 442.5 688 cv
442.5 688.828 443.172 689.5 444 689.5 cv
444.828 689.5 445.5 688.828 445.5 688 cv
cp
@
449.5 686.5 mo
420.5 686.5 li
420.5 684.5 li
449.5 684.5 li
449.5 686.5 li
cp
@
442 684.5 mo
428 684.5 li
427.172 684.5 426.5 683.828 426.5 683 cv
426.5 674 li
426.5 673.172 427.172 672.5 428 672.5 cv
442 672.5 li
442.828 672.5 443.5 673.172 443.5 674 cv
443.5 683 li
443.5 683.828 442.828 684.5 442 684.5 cv
cp
@
431.5 672.5 mo
431.5 671.5 li
431.5 670.947 431.947 670.5 432.5 670.5 cv
437.5 670.5 li
438.053 670.5 438.5 670.947 438.5 671.5 cv
438.5 672.5 li
@
422.5 684.5 mo
422.5 669.5 li
422.5 666.738 424.738 664.5 427.5 664.5 cv
442.5 664.5 li
445.262 664.5 447.5 666.738 447.5 669.5 cv
447.5 684.5 li
@
439.5 664.5 mo
430.5 664.5 li
430.5 663 li
430.5 662.172 431.172 661.5 432 661.5 cv
438 661.5 li
438.828 661.5 439.5 662.172 439.5 663 cv
439.5 664.5 li
cp
@
435.5 661 mo
435.5 661.276 435.276 661.5 435 661.5 cv
434.724 661.5 434.5 661.276 434.5 661 cv
434.5 660.724 434.724 660.5 435 660.5 cv
435.276 660.5 435.5 660.724 435.5 661 cv
cp
@
373.5 680.5 mo
373.5 679.396 372.604 678.5 371.5 678.5 cv
370.396 678.5 369.5 679.396 369.5 680.5 cv
369.5 681.27 369.939 681.931 370.577 682.265 cv
370.167 685.5 li
372.833 685.5 li
372.423 682.265 li
373.061 681.931 373.5 681.27 373.5 680.5 cv
cp
@
378.5 667.5 mo
378.5 662 li
378.5 661.172 377.828 660.5 377 660.5 cv
366 660.5 li
365.172 660.5 364.5 661.172 364.5 662 cv
364.5 688 li
364.5 688.828 365.172 689.5 366 689.5 cv
377 689.5 li
377.828 689.5 378.5 688.828 378.5 688 cv
378.5 672.5 li
@
385.5 667.5 mo
373.444 667.5 li
372.813 666.883 371.952 666.5 371 666.5 cv
369.067 666.5 367.5 668.067 367.5 670 cv
367.5 671.933 369.067 673.5 371 673.5 cv
371.952 673.5 372.813 673.117 373.444 672.5 cv
385.5 672.5 li
385.5 667.5 li
cp
@
329.5 675 mo
329.5 683.008 323.008 689.5 315 689.5 cv
306.992 689.5 300.5 683.008 300.5 675 cv
300.5 666.992 306.992 660.5 315 660.5 cv
323.008 660.5 329.5 666.992 329.5 675 cv
cp
@
315 675 mo
315.63 668.695 323.935 663.579 323.935 663.579 cv
@
317.557 669.29 mo
322.25 673.687 325.248 681.78 324.931 685.562 cv
@
321.023 665.741 mo
325.402 669.221 328.095 675.646 328.232 680.934 cv
@
315 675 mo
309.225 677.606 300.642 672.972 300.642 672.972 cv
@
308.776 675.641 mo
310.238 669.378 315.749 662.734 319.181 661.119 cv
@
303.97 674.413 mo
304.794 668.881 309.012 663.337 313.522 660.574 cv
@
315 675 mo
320.145 678.698 320.423 688.448 320.423 688.448 cv
@
318.667 680.069 mo
312.512 681.936 304.004 680.484 300.888 678.319 cv
@
320.006 684.846 mo
314.804 686.898 307.893 686.018 303.245 683.493 cv
@
257 680.7 mo
257 681.694 256.104 682.5 255 682.5 cv
253.896 682.5 253 681.694 253 680.7 cv
253 678.9 255 676.5 255 676.5 cv
255 676.5 257 678.9 257 680.7 cv
cp
@
258.5 665.5 mo
251.5 665.5 li
251.5 663.5 li
258.5 663.5 li
258.5 665.5 li
cp
@
255.5 663.5 mo
254.5 663.5 li
254.5 661.5 li
255.5 660.5 li
255.5 663.5 li
cp
@
259.5 673.5 mo
259.5 672.762 259.905 672.124 260.5 671.777 cv
260.5 666.5 li
259.5 665.5 li
255 665.543 li
250.5 665.5 li
249.5 666.5 li
249.5 671.777 li
250.095 672.124 250.5 672.762 250.5 673.5 cv
250.5 674.238 250.095 674.876 249.5 675.223 cv
249.5 687.793 li
249.5 688.246 249.68 688.68 250 689 cv
250 689 li
250.32 689.32 250.754 689.5 251.207 689.5 cv
258.793 689.5 li
259.246 689.5 259.68 689.32 260 689 cv
260 689 li
260.32 688.68 260.5 688.246 260.5 687.793 cv
260.5 675.223 li
259.905 674.876 259.5 674.238 259.5 673.5 cv
cp
@
82 676.5 mo
87.6299 676.495 li
88.6626 676.495 89.5 677.388 89.5 678.489 cv
89.5 678.5 li
89.5 679.602 88.6626 680.495 87.6299 680.495 cv
79 680.5 li
@
78 680.5 mo
86.6299 680.505 li
87.6626 680.505 88.5 681.286 88.5 682.25 cv
88.5 682.26 li
88.5 683.224 87.6626 684.005 86.6299 684.005 cv
76.5 684 li
@
76.5 683.996 mo
82.627 684.001 li
83.6597 684.001 84.4971 684.782 84.4971 685.746 cv
84.4971 685.755 li
84.4971 686.719 83.6597 687.5 82.627 687.5 cv
66.5 687.495 li
63.1865 687.495 60.5 684.81 60.5 681.497 cv
60.5 677.312 li
60.5 675.19 61.3428 673.156 62.8428 671.656 cv
70 664.5 li
70.5825 664.5 li
71.6416 664.501 72.5 665.359 72.5 666.418 cv
72.5 666.418 li
72.5 666.798 72.3916 667.171 72.1875 667.491 cv
70.4668 670.194 li
69.8315 671.192 70.5488 672.499 71.7324 672.499 cv
75.5415 672.5 li
76.5 675 li
78.5 673.5 li
80.5 677.5 li
82 673.5 li
84 674 li
84.5 672.5 li
86.6299 672.506 li
87.6626 672.506 88.5 673.398 88.5 674.5 cv
88.5 674.511 li
88.5 675.612 87.6626 676.505 86.6299 676.505 cv
81.5 676.5 li
@
83.5 667.5 mo
83.5 669.157 82.1567 670.5 80.5 670.5 cv
78.8433 670.5 77.5 669.157 77.5 667.5 cv
77.5 665.843 80.5 662.5 80.5 662.5 cv
80.5 662.5 83.5 665.843 83.5 667.5 cv
cp
@
78.0884 724.5 mo
73.9946 724.5 70.5 727.701 70.5 731.794 cv
70.5 733.843 69.9473 735.5 69.2646 735.5 cv
66.5356 735.5 64.5 737.83 64.5 740.559 cv
64.5 743.288 66.7124 745.5 69.4414 745.5 cv
78.3174 745.5 85.5 741.177 85.5 731.912 cv
85.5 727.818 82.1816 724.5 78.0884 724.5 cv
cp
@
78.0884 724.5 mo
73.9946 724.5 70.5 727.701 70.5 731.794 cv
70.5 733.843 69.9473 735.5 69.2646 735.5 cv
66.5356 735.5 64.5 737.83 64.5 740.559 cv
64.5 743.288 66.7124 745.5 69.4414 745.5 cv
78.3174 745.5 85.5 741.177 85.5 731.912 cv
85.5 727.818 82.1816 724.5 78.0884 724.5 cv
cp
@
81.5 732 mo
81.5 733.933 79.9331 735.5 78 735.5 cv
76.0669 735.5 74.5 733.933 74.5 732 cv
74.5 730.067 76.0669 728.5 78 728.5 cv
79.9331 728.5 81.5 730.067 81.5 732 cv
cp
@
76.5 740 mo
76.5 740.828 75.8286 741.5 75 741.5 cv
74.1714 741.5 73.5 740.828 73.5 740 cv
73.5 739.172 74.1714 738.5 75 738.5 cv
75.8286 738.5 76.5 739.172 76.5 740 cv
cp
@
70.5 741 mo
70.5 741.828 69.8286 742.5 69 742.5 cv
68.1714 742.5 67.5 741.828 67.5 741 cv
67.5 740.172 68.1714 739.5 69 739.5 cv
69.8286 739.5 70.5 740.172 70.5 741 cv
cp
@
69.1255 745.482 mo
69.0791 746.503 68.2095 746.526 68 747.5 cv
@
66.2485 744.322 mo
65.6104 745.103 65.0566 744.583 64.3188 745.229 cv
@
64.6318 741.671 mo
63.6401 741.92 63.4961 740.921 62.5 741 cv
@
64.896 738.55 mo
63.9556 738.185 64.2773 737.497 63.4321 736.998 cv
@
66.9004 736.169 mo
66.3608 735.323 67.0269 734.959 66.6543 734.054 cv
@
70.2993 733.819 mo
69.3633 733.47 69.4536 732.816 68.4541 732.695 cv
@
70.7334 730.036 mo
69.752 729.797 69.9648 729.067 69.0493 728.72 cv
@
72.2764 727.115 mo
71.5151 726.47 72.0313 725.912 71.3545 725.186 cv
@
74.9668 725.154 mo
74.5464 724.224 75.2622 723.969 74.957 723.019 cv
@
78.2427 724.509 mo
78.249 723.512 78.8774 723.478 79 722.5 cv
@
81.457 725.319 mo
81.9116 724.404 82.5615 724.798 83.1074 723.963 cv
@
83.9961 727.457 mo
84.7949 726.837 85.2324 727.457 86.0728 726.95 cv
@
85.3579 730.48 mo
86.3364 730.273 86.5039 731.089 87.5 731 cv
@
85.3584 733.943 mo
86.3511 734.063 86.2432 734.814 87.2266 734.995 cv
@
84.4819 737.356 mo
85.4312 737.737 85.1055 738.423 85.9941 738.86 cv
@
82.6904 740.344 mo
83.4683 740.973 82.9824 741.557 83.708 742.245 cv
@
80.1045 742.696 mo
80.6694 743.521 80.021 743.917 80.5283 744.778 cv
@
76.9292 744.279 mo
77.2793 745.216 76.5664 745.479 76.8638 746.434 cv
@
73.4414 745.181 mo
73.6094 746.178 72.8579 746.292 72.9795 747.271 cv
@
195.5 670 mo
195.5 670.276 195.276 670.5 195 670.5 cv
194.724 670.5 194.5 670.276 194.5 670 cv
194.5 669.724 194.724 669.5 195 669.5 cv
195.276 669.5 195.5 669.724 195.5 670 cv
cp
@
191.5 684.5 mo
189.5 684.5 li
189.5 679.5 li
191.5 679.5 li
191.5 684.5 li
cp
@
190.5 684.5 mo
190.5 689.5 li
191.5 688.5 li
189.5 688.5 li
190.5 689.5 li
@
195 664.282 mo
195 660.5 li
@
190.5 660.5 mo
199.5 660.5 li
@
199.5 689.5 mo
199.5 673.156 li
@
190.5 673.156 mo
190.5 679.5 li
@
200.5 670 mo
200.5 673.037 198.038 675.5 195 675.5 cv
191.962 675.5 189.5 673.037 189.5 670 cv
189.5 666.963 191.962 664.5 195 664.5 cv
198.038 664.5 200.5 666.963 200.5 670 cv
cp
@
29.5 735 mo
29.5 743.008 23.0083 749.5 15 749.5 cv
6.9917 749.5 .5 743.008 .5 735 cv
.5 726.992 6.9917 720.5 15 720.5 cv
23.0083 720.5 29.5 726.992 29.5 735 cv
cp
@
15 720.5 mo
15 735 li
@
15 735 mo
25.2529 745.253 li
@
15 735 mo
29.5 735 li
@
439.5 787 mo
439.5 789.485 437.485 791.5 435 791.5 cv
432.515 791.5 430.5 789.485 430.5 787 cv
430.5 784.515 432.515 782.5 435 782.5 cv
437.485 782.5 439.5 784.515 439.5 787 cv
cp
@
429.5 803 mo
429.5 805.485 427.485 807.5 425 807.5 cv
422.515 807.5 420.5 805.485 420.5 803 cv
420.5 800.515 422.515 798.5 425 798.5 cv
427.485 798.5 429.5 800.515 429.5 803 cv
cp
@
449.5 803 mo
449.5 805.485 447.485 807.5 445 807.5 cv
442.515 807.5 440.5 805.485 440.5 803 cv
440.5 800.515 442.515 798.5 445 798.5 cv
447.485 798.5 449.5 800.515 449.5 803 cv
cp
@
425 798.5 mo
425 796.5 li
425 795.672 425.672 795 426.5 795 cv
443.5 795 li
444.328 795 445 795.672 445 796.5 cv
445 798.5 li
@
435 791.5 mo
435 795 li
@
2.5 386 mo
8.5 380.5 li
12 383.5 li
18.5 379.5 li
23.5 379.5 li
28.5 374.5 li
@
2.5 379.5 mo
8.5 376.5 li
12 378.5 li
18.5 370.5 li
23.5 372.5 li
28.5 369.5 li
@
2.5 373.5 mo
8 373.5 li
11.9727 368.19 li
18.5 364.5 li
23.5 365.5 li
28.5 361.5 li
28.5 387.5 li
@
2.5 360.5 mo
2.5 389.5 li
@
.5 387.5 mo
29.5 387.5 li
@
325.717 435 mo
325.717 434.37 325.652 433.757 325.548 433.156 cv
329.007 430.262 li
326.107 425.238 li
321.877 426.784 li
320.936 425.995 319.853 425.374 318.678 424.944 cv
317.9 420.5 li
312.1 420.5 li
311.322 424.944 li
310.147 425.374 309.064 425.995 308.123 426.784 cv
303.893 425.238 li
300.993 430.262 li
304.452 433.156 li
304.348 433.757 304.283 434.37 304.283 435 cv
304.283 435.63 304.348 436.243 304.452 436.844 cv
300.993 439.738 li
303.893 444.762 li
308.123 443.216 li
309.064 444.005 310.147 444.626 311.322 445.056 cv
312.1 449.5 li
317.9 449.5 li
318.678 445.056 li
319.853 444.626 320.936 444.005 321.877 443.216 cv
326.107 444.762 li
329.007 439.738 li
325.548 436.844 li
325.652 436.243 325.717 435.63 325.717 435 cv
cp
@
320.5 435 mo
320.5 438.037 318.038 440.5 315 440.5 cv
311.962 440.5 309.5 438.037 309.5 435 cv
309.5 431.963 311.962 429.5 315 429.5 cv
318.038 429.5 320.5 431.963 320.5 435 cv
cp
@
206.5 733.5 mo
183.5 733.5 li
183.5 746 li
183.5 746.828 184.171 747.5 185 747.5 cv
205 747.5 li
205.829 747.5 206.5 746.828 206.5 746 cv
206.5 733.5 li
cp
@
207.5 729.5 mo
202.738 722.5 li
187.262 722.5 li
182.5 729.5 li
207.5 729.5 li
cp
@
207.5 733.5 mo
182.5 733.5 li
182.5 729.5 li
207.5 729.5 li
207.5 733.5 li
cp
@
200 739.5 mo
190 739.5 li
189.171 739.5 188.5 738.828 188.5 738 cv
188.5 738 li
188.5 737.172 189.171 736.5 190 736.5 cv
200 736.5 li
200.829 736.5 201.5 737.172 201.5 738 cv
201.5 738 li
201.5 738.828 200.829 739.5 200 739.5 cv
cp
@
382 489.5 mo
383.933 489.5 385.5 490.428 385.5 491.5 cv
385.5 485.425 380.799 480.5 375 480.5 cv
369.201 480.5 364.5 485.425 364.5 491.5 cv
364.5 490.428 366.067 489.5 368 489.5 cv
369.933 489.5 371.5 490.428 371.5 491.5 cv
371.5 490.428 373.067 489.5 375 489.5 cv
376.933 489.5 378.5 490.428 378.5 491.5 cv
378.5 490.428 380.067 489.5 382 489.5 cv
cp
@
380.5 509.5 mo
369.5 509.5 li
369.5 498.5 li
380.5 498.5 li
380.5 509.5 li
cp
@
369.5 507.5 mo
377.5 500.5 li
@
372.5 507.5 mo
380.5 500.5 li
@
369.5 500.5 mo
380.5 500.5 li
@
369.5 507.5 mo
380.5 507.5 li
@
364.5 491.5 mo
375 498.5 li
385.5 491.5 li
@
371.5 491.5 mo
375 498.5 li
378.5 491.5 li
@
371.5 491.218 mo
371.5 485.298 373.067 480.5 375 480.5 cv
376.933 480.5 378.5 485.298 378.5 491.218 cv
@
306.5 729.5 mo
302.5 729.5 li
302.5 726.5 li
306.5 726.5 li
306.5 729.5 li
cp
@
327.5 729.5 mo
323.5 729.5 li
323.5 726.5 li
327.5 726.5 li
327.5 729.5 li
cp
@
317 729.5 mo
313 729.5 li
313 726.5 li
317 726.5 li
317 729.5 li
cp
@
306.5 736.5 mo
302.5 736.5 li
302.5 733.5 li
306.5 733.5 li
306.5 736.5 li
cp
@
327.5 736.5 mo
323.5 736.5 li
323.5 733.5 li
327.5 733.5 li
327.5 736.5 li
cp
@
317 736.5 mo
313 736.5 li
313 733.5 li
317 733.5 li
317 736.5 li
cp
@
306.5 743.5 mo
302.5 743.5 li
302.5 740.5 li
306.5 740.5 li
306.5 743.5 li
cp
@
327.5 743.5 mo
323.5 743.5 li
323.5 740.5 li
327.5 740.5 li
327.5 743.5 li
cp
@
317 743.5 mo
313 743.5 li
313 740.5 li
317 740.5 li
317 743.5 li
cp
@
302.5 726.5 mo
302.5 722.5 li
327.5 722.5 li
327.5 726.5 li
302.5 726.5 li
cp
@
302.5 733.5 mo
302.5 729.5 li
327.5 729.5 li
327.5 733.5 li
302.5 733.5 li
cp
@
302.5 740.5 mo
302.5 736.5 li
327.5 736.5 li
327.5 740.5 li
302.5 740.5 li
cp
@
302.5 747.5 mo
302.5 743.5 li
327.5 743.5 li
327.5 747.5 li
302.5 747.5 li
cp
@
245.5 738.5 mo
245.5 738.5 251 737.858 251 735 cv
251 732.142 245.5 731.5 245.5 731.5 cv
@
257.5 739.5 mo
257.5 739.5 259 737.625 259 735 cv
259 732.375 257.5 730.5 257.5 730.5 cv
252.5 730.5 li
252.5 730.5 251 732.375 251 735 cv
251 737.625 252.5 739.5 252.5 739.5 cv
257.5 739.5 li
cp
@
263.5 738.5 mo
263.5 738.5 259 737.858 259 735 cv
259 732.142 263.5 731.5 263.5 731.5 cv
@
252.5 739.5 mo
251.883 740.134 244.202 744.5 242.351 744.5 cv
240.5 744.5 240.5 736.9 240.5 735 cv
240.5 733.1 240.5 725.5 242.351 725.5 cv
244.202 725.5 251.883 729.866 252.5 730.5 cv
@
257.5 739.5 mo
258.117 740.134 265.798 744.5 267.649 744.5 cv
269.5 744.5 269.5 736.9 269.5 735 cv
269.5 733.1 269.5 725.5 267.649 725.5 cv
265.798 725.5 258.117 729.866 257.5 730.5 cv
@
485.5 685.5 mo
485.5 683.372 486.5 680.258 486.5 677.5 cv
486.5 674.742 484.5 664.756 484.5 663.021 cv
484.5 660.5 li
496.5 660.5 li
496.5 660.5 496.5 662.392 496.5 663.021 cv
496.5 667.435 494.421 679.452 497.471 682.565 cv
499.441 684.576 502.218 685.305 503.936 685.568 cv
504.84 685.707 505.5 686.502 505.5 687.435 cv
505.5 688.239 li
505.5 688.936 504.947 689.5 504.265 689.5 cv
496.853 689.5 li
493.481 689.5 485.5 685.5 485.5 685.5 cv
cp
@
504 689.5 mo
505.5 689.5 li
@
485.5 685.5 mo
485.5 688.239 li
485.5 688.936 486.053 689.5 486.735 689.5 cv
490.5 689.5 li
490.5 687.739 li
@
484.5 725 mo
484.848 725.448 485.5 730.085 485.5 731.865 cv
485.5 738.963 li
485.5 739.394 485.734 739.798 486.129 740 cv
487.158 740.526 489.86 741.5 495 741.5 cv
500.14 741.5 502.842 740.526 503.871 740 cv
504.266 739.798 504.5 739.394 504.5 738.963 cv
504.5 731.865 li
504.5 730.085 505.152 725.448 505.5 725 cv
@
485.543 736.815 mo
485.543 736.815 487.435 738.5 495 738.5 cv
502.565 738.5 504.456 736.815 504.456 736.815 cv
@
485.543 734.794 mo
482.231 735.345 480.5 736.662 480.5 739.843 cv
480.5 743.186 486.805 746.5 495 746.5 cv
503.195 746.5 509.5 743.186 509.5 739.842 cv
509.5 736.662 507.769 735.345 504.456 734.794 cv
@
505.5 725 mo
505.5 725.828 500.799 726.5 495 726.5 cv
489.201 726.5 484.5 725.828 484.5 725 cv
484.5 724.172 489.201 723.5 495 723.5 cv
500.799 723.5 505.5 724.172 505.5 725 cv
cp
@
549.5 793 mo
549.5 793.276 549.276 793.5 549 793.5 cv
548.724 793.5 548.5 793.276 548.5 793 cv
548.5 792.724 548.724 792.5 549 792.5 cv
549.276 792.5 549.5 792.724 549.5 793 cv
cp
@
555.5 793 mo
555.5 793.276 555.276 793.5 555 793.5 cv
554.724 793.5 554.5 793.276 554.5 793 cv
554.5 792.724 554.724 792.5 555 792.5 cv
555.276 792.5 555.5 792.724 555.5 793 cv
cp
@
561.5 793 mo
561.5 793.276 561.276 793.5 561 793.5 cv
560.724 793.5 560.5 793.276 560.5 793 cv
560.5 792.724 560.724 792.5 561 792.5 cv
561.276 792.5 561.5 792.724 561.5 793 cv
cp
@
566 782.5 mo
544 782.5 li
543.172 782.5 542.5 783.172 542.5 784 cv
542.5 807.5 li
548.5 801.5 li
566 801.5 li
566.828 801.5 567.5 800.828 567.5 800 cv
567.5 784 li
567.5 783.172 566.828 782.5 566 782.5 cv
cp
@
555 723.5 mo
546.992 723.5 540.5 727.978 540.5 733.5 cv
540.5 736.476 542.396 739.141 545.387 740.972 cv
544.683 745.065 541.5 746.5 541.5 746.5 cv
541.5 746.5 547.149 746.264 552.216 743.312 cv
553.117 743.433 554.047 743.5 555 743.5 cv
563.008 743.5 569.5 739.022 569.5 733.5 cv
569.5 727.978 563.008 723.5 555 723.5 cv
cp
@
430.5 724.5 mo
422 724.5 li
421.172 724.5 420.5 725.172 420.5 726 cv
420.5 745 li
420.5 745.828 421.172 746.5 422 746.5 cv
428.818 746.5 li
@
431.194 725.638 mo
424.985 727.429 li
424.104 727.683 423.5 728.463 423.5 729.349 cv
423.5 729.544 423.529 729.738 423.588 729.925 cv
428.626 746.071 li
428.891 746.919 429.702 747.5 430.623 747.5 cv
430.825 747.5 431.027 747.472 431.222 747.415 cv
448.015 742.571 li
448.896 742.317 449.5 741.537 449.5 740.651 cv
449.5 740.456 449.471 740.262 449.412 740.075 cv
444.374 723.929 li
444.109 723.081 443.298 722.5 442.377 722.5 cv
442.175 722.5 441.973 722.528 441.778 722.585 cv
433.884 724.861 li
@
434 724.25 mo
434 725.217 433.217 726 432.25 726 cv
431.283 726 430.5 725.217 430.5 724.25 cv
430.5 723.283 431.283 722.5 432.25 722.5 cv
433.217 722.5 434 723.283 434 724.25 cv
cp
@
433.144 725.755 mo
434.5 727.5 li
@
487 785 mo
487 785.276 486.776 785.5 486.5 785.5 cv
486.224 785.5 486 785.276 486 785 cv
486 784.724 486.224 784.5 486.5 784.5 cv
486.776 784.5 487 784.724 487 785 cv
cp
@
486.5 785 mo
486.5 782.5 li
@
492 785 mo
492 785.276 491.776 785.5 491.5 785.5 cv
491.224 785.5 491 785.276 491 785 cv
491 784.724 491.224 784.5 491.5 784.5 cv
491.776 784.5 492 784.724 492 785 cv
cp
@
491.5 785 mo
491.5 782.5 li
@
497 785 mo
497 785.276 496.776 785.5 496.5 785.5 cv
496.224 785.5 496 785.276 496 785 cv
496 784.724 496.224 784.5 496.5 784.5 cv
496.776 784.5 497 784.724 497 785 cv
cp
@
496.5 785 mo
496.5 782.5 li
@
501.875 784.375 mo
505.625 788.125 li
@
490 796.25 mo
491.875 796.25 li
492.5 797.5 li
493.75 798.125 li
494.375 799.375 li
@
488 801.5 mo
488.5 802 li
@
503.691 786.309 mo
492.5 797.5 li
@
500.5 785.628 mo
500.5 784 li
500.5 783.172 499.828 782.5 499 782.5 cv
484 782.5 li
483.172 782.5 482.5 783.172 482.5 784 cv
482.5 806 li
482.5 806.828 483.172 807.5 484 807.5 cv
499 807.5 li
499.828 807.5 500.5 806.828 500.5 806 cv
500.5 793.327 li
@
493.75 800 mo
506.951 786.951 li
507.29 786.611 507.5 786.143 507.5 785.625 cv
507.5 785.107 507.29 784.639 506.951 784.299 cv
505.701 783.049 li
505.361 782.71 504.893 782.5 504.375 782.5 cv
503.857 782.5 503.389 782.71 503.049 783.049 cv
490 796.25 li
487.5 802.5 li
493.75 800 li
cp
@
493.75 800 mo
506.951 786.951 li
507.29 786.611 507.5 786.143 507.5 785.625 cv
507.5 785.107 507.29 784.639 506.951 784.299 cv
505.701 783.049 li
505.361 782.71 504.893 782.5 504.375 782.5 cv
503.857 782.5 503.389 782.71 503.049 783.049 cv
490 796.25 li
487.5 802.5 li
493.75 800 li
cp
@
378.782 808.984 mo
384.953 807.318 389.5 801.697 389.5 795 cv
389.5 786.992 383.008 780.5 375 780.5 cv
378.5 783.5 li
@
371.218 781.016 mo
365.047 782.682 360.5 788.303 360.5 795 cv
360.5 803.008 366.992 809.5 375 809.5 cv
371.5 806.5 li
@
381.5 801.5 mo
368.5 801.5 li
367.947 801.5 367.5 801.053 367.5 800.5 cv
367.5 789.5 li
367.5 788.947 367.947 788.5 368.5 788.5 cv
374 788.5 li
375.5 789.5 li
381.5 789.5 li
382.053 789.5 382.5 789.947 382.5 790.5 cv
382.5 800.5 li
382.5 801.053 382.053 801.5 381.5 801.5 cv
cp
@
130.238 793.5 mo
132.771 793.5 134.049 794.5 135.349 794.5 cv
136.65 794.5 137.038 794 139 794 cv
@
126.5 803.5 mo
143.5 803.5 li
@
126.5 795.861 mo
126.5 806 li
126.5 806.828 127.171 807.5 128 807.5 cv
142 807.5 li
142.829 807.5 143.5 806.828 143.5 806 cv
143.5 795 li
@
140.779 795.5 mo
143.846 795.5 147.5 792.94 147.5 789 cv
147.5 784.166 144.14 782.5 140.779 782.5 cv
138.776 782.5 136.47 783.249 134.214 784.513 cv
@
140.5 788.7 mo
137.86 785.653 132.885 783.5 129.423 783.5 cv
125.961 783.5 122.5 785.166 122.5 790 cv
122.5 793.94 126.265 796.5 129.423 796.5 cv
@
197 315.5 mo
195 315.5 li
193.896 315.5 193 316.283 193 317.25 cv
193 317.25 li
193 318.217 193.896 319 195 319 cv
195 319 li
196.104 319 197 319.783 197 320.75 cv
197 320.75 li
197 321.717 196.104 322.5 195 322.5 cv
193 322.5 li
@
201.5 310.5 mo
188.5 310.5 li
187.948 310.5 187.5 310.053 187.5 309.5 cv
187.5 309.5 li
187.5 308.947 187.948 308.5 188.5 308.5 cv
201.5 308.5 li
202.052 308.5 202.5 308.947 202.5 309.5 cv
202.5 309.5 li
202.5 310.053 202.052 310.5 201.5 310.5 cv
cp
@
195.5 303 mo
195.5 303.276 195.276 303.5 195 303.5 cv
194.724 303.5 194.5 303.276 194.5 303 cv
194.5 302.724 194.724 302.5 195 302.5 cv
195.276 302.5 195.5 302.724 195.5 303 cv
cp
f
194.5 304.5 mo
194.5 304.776 194.276 305 194 305 cv
193.724 305 193.5 304.776 193.5 304.5 cv
193.5 304.224 193.724 304 194 304 cv
194.276 304 194.5 304.224 194.5 304.5 cv
cp
f
196.5 304.5 mo
196.5 304.776 196.276 305 196 305 cv
195.724 305 195.5 304.776 195.5 304.5 cv
195.5 304.224 195.724 304 196 304 cv
196.276 304 196.5 304.224 196.5 304.5 cv
cp
f
201 310.5 mo
202.5 326 li
202.5 326 li
202.5 326.828 201.829 327.5 201 327.5 cv
189 327.5 li
188.171 327.5 187.5 326.828 187.5 326 cv
187.5 326 li
189 310.5 li
@
189.5 308.5 mo
189.5 308 li
189.5 304.963 191.962 302.5 195 302.5 cv
195 302.5 li
198.038 302.5 200.5 304.963 200.5 308 cv
200.5 308.5 li
@
312.5 793 mo
312.5 793.276 312.276 793.5 312 793.5 cv
311.724 793.5 311.5 793.276 311.5 793 cv
311.5 792.724 311.724 792.5 312 792.5 cv
312.276 792.5 312.5 792.724 312.5 793 cv
cp
f
312.5 791.5 mo
312.5 791.776 312.276 792 312 792 cv
311.724 792 311.5 791.776 311.5 791.5 cv
311.5 791.224 311.724 791 312 791 cv
312.276 791 312.5 791.224 312.5 791.5 cv
cp
f
312.5 794.5 mo
312.5 794.776 312.276 795 312 795 cv
311.724 795 311.5 794.776 311.5 794.5 cv
311.5 794.224 311.724 794 312 794 cv
312.276 794 312.5 794.224 312.5 794.5 cv
cp
f
313.5 793.5 mo
313.224 793.5 313 793.276 313 793 cv
313 792.724 313.224 792.5 313.5 792.5 cv
313.776 792.5 314 792.724 314 793 cv
314 793.276 313.776 793.5 313.5 793.5 cv
cp
f
310.5 793.5 mo
310.224 793.5 310 793.276 310 793 cv
310 792.724 310.224 792.5 310.5 792.5 cv
310.776 792.5 311 792.724 311 793 cv
311 793.276 310.776 793.5 310.5 793.5 cv
cp
f
312.5 803 mo
312.5 803.276 312.276 803.5 312 803.5 cv
311.724 803.5 311.5 803.276 311.5 803 cv
311.5 802.724 311.724 802.5 312 802.5 cv
312.276 802.5 312.5 802.724 312.5 803 cv
cp
f
312.5 801.5 mo
312.5 801.776 312.276 802 312 802 cv
311.724 802 311.5 801.776 311.5 801.5 cv
311.5 801.224 311.724 801 312 801 cv
312.276 801 312.5 801.224 312.5 801.5 cv
cp
f
312.5 804.5 mo
312.5 804.776 312.276 805 312 805 cv
311.724 805 311.5 804.776 311.5 804.5 cv
311.5 804.224 311.724 804 312 804 cv
312.276 804 312.5 804.224 312.5 804.5 cv
cp
f
313.5 803.5 mo
313.224 803.5 313 803.276 313 803 cv
313 802.724 313.224 802.5 313.5 802.5 cv
313.776 802.5 314 802.724 314 803 cv
314 803.276 313.776 803.5 313.5 803.5 cv
cp
f
310.5 803.5 mo
310.224 803.5 310 803.276 310 803 cv
310 802.724 310.224 802.5 310.5 802.5 cv
310.776 802.5 311 802.724 311 803 cv
311 803.276 310.776 803.5 310.5 803.5 cv
cp
f
327 802 mo
327 802.276 326.776 802.5 326.5 802.5 cv
326.224 802.5 326 802.276 326 802 cv
326 801.724 326.224 801.5 326.5 801.5 cv
326.776 801.5 327 801.724 327 802 cv
cp
@
320.365 796.535 mo
319.67 792.54 316.194 789.5 312 789.5 cv
307.801 789.5 304.321 792.548 303.632 796.551 cv
@
303.632 799.449 mo
304.321 803.452 307.801 806.5 312 806.5 cv
316.194 806.5 319.67 803.46 320.365 799.465 cv
@
320.048 799.5 mo
304 799.5 li
303.171 799.5 302.5 798.828 302.5 798 cv
302.5 798 li
302.5 797.172 303.171 796.5 304 796.5 cv
320.048 796.5 li
320.876 796.5 321.548 797.172 321.548 798 cv
321.548 798 li
321.548 798.828 320.876 799.5 320.048 799.5 cv
cp
@
312.107 789.5 mo
312.7 786.092 315.672 783.5 319.25 783.5 cv
319.25 783.5 li
323.254 783.5 326.5 786.746 326.5 790.75 cv
326.5 803.592 li
327.081 803.799 327.5 804.348 327.5 805 cv
327.5 805.828 326.829 806.5 326 806.5 cv
325.171 806.5 324.5 805.828 324.5 805 cv
@
249 784.498 mo
248.999 789.5 li
@
249.5 783.832 mo
249.5 784.568 249.276 784.498 249 784.498 cv
248.724 784.498 248.5 784.568 248.5 783.832 cv
248.5 783.097 248.723 782.5 248.999 782.5 cv
249.275 782.5 249.5 783.097 249.5 783.832 cv
cp
@
258 784.498 mo
257.999 789.5 li
@
258.5 783.832 mo
258.5 784.568 258.276 784.498 258 784.498 cv
257.724 784.498 257.5 784.568 257.5 783.832 cv
257.5 783.097 257.723 782.5 257.999 782.5 cv
258.275 782.5 258.5 783.097 258.5 783.832 cv
cp
@
261 784.498 mo
260.999 789.5 li
@
261.5 783.832 mo
261.5 784.568 261.276 784.498 261 784.498 cv
260.724 784.498 260.5 784.568 260.5 783.832 cv
260.5 783.097 260.723 782.5 260.999 782.5 cv
261.275 782.5 261.5 783.097 261.5 783.832 cv
cp
@
255 784.498 mo
254.999 789.5 li
@
255.5 783.832 mo
255.5 784.568 255.276 784.498 255 784.498 cv
254.724 784.498 254.5 784.568 254.5 783.832 cv
254.5 783.097 254.723 782.5 254.999 782.5 cv
255.275 782.5 255.5 783.097 255.5 783.832 cv
cp
@
252 784.498 mo
251.999 789.5 li
@
252.5 783.832 mo
252.5 784.568 252.276 784.498 252 784.498 cv
251.724 784.498 251.5 784.568 251.5 783.832 cv
251.5 783.097 251.723 782.5 251.999 782.5 cv
252.275 782.5 252.5 783.097 252.5 783.832 cv
cp
@
259.5 801.375 mo
259.5 803.651 257.483 805.5 255 805.5 cv
252.517 805.5 250.5 803.651 250.5 801.375 cv
250.5 801.297 250.5 801.22 250.505 801.142 cv
250.58 798.773 252 798.167 252 798.167 cv
252 798.167 251.945 800 253.5 800 cv
253.5 799.282 253.604 798.393 253.941 797.492 cv
254.375 796.333 255.346 795.257 256.5 794.5 cv
256.5 797.25 259.204 797.711 259.474 800.934 cv
259.484 801.079 259.5 801.22 259.5 801.375 cv
cp
@
263.5 789.592 mo
263.5 782 li
263.5 781.172 262.829 780.5 262 780.5 cv
248 780.5 li
247.171 780.5 246.5 781.172 246.5 782 cv
246.5 789.592 li
@
263 809.5 mo
247 809.5 li
246.171 809.5 245.5 808.828 245.5 808 cv
245.5 791 li
245.5 790.172 246.171 789.5 247 789.5 cv
263 789.5 li
263.829 789.5 264.5 790.172 264.5 791 cv
264.5 808 li
264.5 808.828 263.829 809.5 263 809.5 cv
cp
@
500 378 mo
502.352 381.402 502.707 384.01 503 387.5 cv
499.934 386.129 497.352 384.902 495 381.5 cv
495 381.5 li
492.648 384.902 490.066 386.129 487 387.5 cv
487.293 384.01 487.648 381.402 490 378 cv
490 378 li
486.195 376.7 484.688 374.643 482.5 372 cv
485.747 371.214 488.195 370.7 492 372 cv
492 372 li
492 367.794 493.286 365.504 495 362.5 cv
496.714 365.504 497.977 367.8 498 372 cv
498 372 li
501.781 370.706 504.253 371.214 507.5 372 cv
505.313 374.643 503.805 376.7 500 378 cv
500 378 li
cp
@
495.5 372.75 mo
495.5 373.44 495 374 495 374 cv
495 374 494.5 373.44 494.5 372.75 cv
494.5 372.06 495 371.5 495 371.5 cv
495 371.5 495.5 372.06 495.5 372.75 cv
cp
@
491.588 374.865 mo
492.244 375.079 492.622 375.728 492.622 375.728 cv
492.622 375.728 491.936 376.03 491.279 375.816 cv
490.622 375.604 490.245 374.955 490.245 374.955 cv
490.245 374.955 490.932 374.652 491.588 374.865 cv
cp
@
492.392 379.24 mo
492.797 378.682 493.53 378.522 493.53 378.522 cv
493.53 378.522 493.606 379.27 493.2 379.828 cv
492.795 380.386 492.062 380.545 492.062 380.545 cv
492.062 380.545 491.985 379.799 492.392 379.24 cv
cp
@
496.8 379.828 mo
496.394 379.27 496.47 378.522 496.47 378.522 cv
496.47 378.522 497.203 378.682 497.608 379.24 cv
498.015 379.799 497.938 380.545 497.938 380.545 cv
497.938 380.545 497.205 380.386 496.8 379.828 cv
cp
@
498.721 375.816 mo
498.064 376.03 497.378 375.728 497.378 375.728 cv
497.378 375.728 497.756 375.079 498.412 374.865 cv
499.068 374.652 499.755 374.955 499.755 374.955 cv
499.755 374.955 499.378 375.604 498.721 375.816 cv
cp
@
23.9424 803.977 mo
20.2041 807.716 15.4795 809.628 11.2231 809.538 cv
8.2998 809.476 5.59766 808.469 3.58789 806.459 cv
1.57861 804.45 .571289 801.748 .509277 798.824 cv
.418945 794.568 2.33154 789.844 6.07031 786.104 cv
9.62451 782.55 14.0713 780.646 18.1582 780.545 cv
21.3223 780.467 24.271 781.469 26.4243 783.623 cv
28.4341 785.633 29.4414 788.335 29.5029 791.259 cv
29.5933 795.515 27.6802 800.239 23.9424 803.977 cv
cp
@
2.87109 795.541 mo
3.5542 792.683 5.16846 789.835 7.48438 787.519 cv
@
23.8721 792.907 mo
24.2944 791.398 23.6753 789.417 22.1528 787.895 cv
20.6304 786.372 18.6484 785.753 17.1401 786.175 cv
@
25.145 792.18 mo
26.6069 790.719 26.1626 787.904 24.1528 785.895 cv
22.1431 783.885 19.3286 783.44 17.8672 784.902 cv
16.4053 786.363 16.8496 789.178 18.8594 791.188 cv
20.8696 793.197 23.6836 793.642 25.145 792.18 cv
cp
@
15 865.5 mo
15 865.776 14.7764 866 14.5 866 cv
14.2236 866 14 865.776 14 865.5 cv
14 865.224 14.2236 865 14.5 865 cv
14.7764 865 15 865.224 15 865.5 cv
cp
f
12 862.5 mo
12 862.776 11.7764 863 11.5 863 cv
11.2236 863 11 862.776 11 862.5 cv
11 862.224 11.2236 862 11.5 862 cv
11.7764 862 12 862.224 12 862.5 cv
cp
f
18 865.5 mo
18 865.776 17.7764 866 17.5 866 cv
17.2236 866 17 865.776 17 865.5 cv
17 865.224 17.2236 865 17.5 865 cv
17.7764 865 18 865.224 18 865.5 cv
cp
f
11 859.5 mo
11 859.776 10.7764 860 10.5 860 cv
10.2236 860 10 859.776 10 859.5 cv
10 859.224 10.2236 859 10.5 859 cv
10.7764 859 11 859.224 11 859.5 cv
cp
f
9 861.5 mo
9 861.776 8.77637 862 8.5 862 cv
8.22363 862 8 861.776 8 861.5 cv
8 861.224 8.22363 861 8.5 861 cv
8.77637 861 9 861.224 9 861.5 cv
cp
f
7 860.5 mo
7 860.776 6.77637 861 6.5 861 cv
6.22363 861 6 860.776 6 860.5 cv
6 860.224 6.22363 860 6.5 860 cv
6.77637 860 7 860.224 7 860.5 cv
cp
f
9 858.5 mo
9 858.776 8.77637 859 8.5 859 cv
8.22363 859 8 858.776 8 858.5 cv
8 858.224 8.22363 858 8.5 858 cv
8.77637 858 9 858.224 9 858.5 cv
cp
f
10 854.5 mo
10 854.776 9.77637 855 9.5 855 cv
9.22363 855 9 854.776 9 854.5 cv
9 854.224 9.22363 854 9.5 854 cv
9.77637 854 10 854.224 10 854.5 cv
cp
f
13 853.5 mo
13 853.776 12.7764 854 12.5 854 cv
12.2236 854 12 853.776 12 853.5 cv
12 853.224 12.2236 853 12.5 853 cv
12.7764 853 13 853.224 13 853.5 cv
cp
f
13 856.5 mo
13 856.776 12.7764 857 12.5 857 cv
12.2236 857 12 856.776 12 856.5 cv
12 856.224 12.2236 856 12.5 856 cv
12.7764 856 13 856.224 13 856.5 cv
cp
f
16 856.5 mo
16 856.776 15.7764 857 15.5 857 cv
15.2236 857 15 856.776 15 856.5 cv
15 856.224 15.2236 856 15.5 856 cv
15.7764 856 16 856.224 16 856.5 cv
cp
f
15 854.5 mo
15 854.776 14.7764 855 14.5 855 cv
14.2236 855 14 854.776 14 854.5 cv
14 854.224 14.2236 854 14.5 854 cv
14.7764 854 15 854.224 15 854.5 cv
cp
f
15 851.5 mo
15 851.776 14.7764 852 14.5 852 cv
14.2236 852 14 851.776 14 851.5 cv
14 851.224 14.2236 851 14.5 851 cv
14.7764 851 15 851.224 15 851.5 cv
cp
f
17 852.5 mo
17 852.776 16.7764 853 16.5 853 cv
16.2236 853 16 852.776 16 852.5 cv
16 852.224 16.2236 852 16.5 852 cv
16.7764 852 17 852.224 17 852.5 cv
cp
f
20 853.5 mo
20 853.776 19.7764 854 19.5 854 cv
19.2236 854 19 853.776 19 853.5 cv
19 853.224 19.2236 853 19.5 853 cv
19.7764 853 20 853.224 20 853.5 cv
cp
f
20 855.5 mo
20 855.776 19.7764 856 19.5 856 cv
19.2236 856 19 855.776 19 855.5 cv
19 855.224 19.2236 855 19.5 855 cv
19.7764 855 20 855.224 20 855.5 cv
cp
f
18 857.5 mo
18 857.776 17.7764 858 17.5 858 cv
17.2236 858 17 857.776 17 857.5 cv
17 857.224 17.2236 857 17.5 857 cv
17.7764 857 18 857.224 18 857.5 cv
cp
f
18 854.5 mo
18 854.776 17.7764 855 17.5 855 cv
17.2236 855 17 854.776 17 854.5 cv
17 854.224 17.2236 854 17.5 854 cv
17.7764 854 18 854.224 18 854.5 cv
cp
f
17 859.5 mo
17 859.776 16.7764 860 16.5 860 cv
16.2236 860 16 859.776 16 859.5 cv
16 859.224 16.2236 859 16.5 859 cv
16.7764 859 17 859.224 17 859.5 cv
cp
f
22 855.5 mo
22 855.776 21.7764 856 21.5 856 cv
21.2236 856 21 855.776 21 855.5 cv
21 855.224 21.2236 855 21.5 855 cv
21.7764 855 22 855.224 22 855.5 cv
cp
f
24.5 859.5 mo
24.5 859.776 24.2764 860 24 860 cv
23.7236 860 23.5 859.776 23.5 859.5 cv
23.5 859.224 23.7236 859 24 859 cv
24.2764 859 24.5 859.224 24.5 859.5 cv
cp
f
8.5 856 mo
8.5 856.276 8.27637 856.5 8 856.5 cv
7.72363 856.5 7.5 856.276 7.5 856 cv
7.5 855.724 7.72363 855.5 8 855.5 cv
8.27637 855.5 8.5 855.724 8.5 856 cv
cp
f
13 860.5 mo
13 860.776 12.7764 861 12.5 861 cv
12.2236 861 12 860.776 12 860.5 cv
12 860.224 12.2236 860 12.5 860 cv
12.7764 860 13 860.224 13 860.5 cv
cp
f
20 857.5 mo
20 857.776 19.7764 858 19.5 858 cv
19.2236 858 19 857.776 19 857.5 cv
19 857.224 19.2236 857 19.5 857 cv
19.7764 857 20 857.224 20 857.5 cv
cp
f
22 858.5 mo
22 858.776 21.7764 859 21.5 859 cv
21.2236 859 21 858.776 21 858.5 cv
21 858.224 21.2236 858 21.5 858 cv
21.7764 858 22 858.224 22 858.5 cv
cp
f
22 860.5 mo
22 860.776 21.7764 861 21.5 861 cv
21.2236 861 21 860.776 21 860.5 cv
21 860.224 21.2236 860 21.5 860 cv
21.7764 860 22 860.224 22 860.5 cv
cp
f
22 862.5 mo
22 862.776 21.7764 863 21.5 863 cv
21.2236 863 21 862.776 21 862.5 cv
21 862.224 21.2236 862 21.5 862 cv
21.7764 862 22 862.224 22 862.5 cv
cp
f
24 861.5 mo
24 861.776 23.7764 862 23.5 862 cv
23.2236 862 23 861.776 23 861.5 cv
23 861.224 23.2236 861 23.5 861 cv
23.7764 861 24 861.224 24 861.5 cv
cp
f
15 860.5 mo
15 860.776 14.7764 861 14.5 861 cv
14.2236 861 14 860.776 14 860.5 cv
14 860.224 14.2236 860 14.5 860 cv
14.7764 860 15 860.224 15 860.5 cv
cp
f
14 858.5 mo
14 858.776 13.7764 859 13.5 859 cv
13.2236 859 13 858.776 13 858.5 cv
13 858.224 13.2236 858 13.5 858 cv
13.7764 858 14 858.224 14 858.5 cv
cp
f
11 857.5 mo
11 857.776 10.7764 858 10.5 858 cv
10.2236 858 10 857.776 10 857.5 cv
10 857.224 10.2236 857 10.5 857 cv
10.7764 857 11 857.224 11 857.5 cv
cp
f
17 863.5 mo
17 863.776 16.7764 864 16.5 864 cv
16.2236 864 16 863.776 16 863.5 cv
16 863.224 16.2236 863 16.5 863 cv
16.7764 863 17 863.224 17 863.5 cv
cp
f
19 860.5 mo
19 860.776 18.7764 861 18.5 861 cv
18.2236 861 18 860.776 18 860.5 cv
18 860.224 18.2236 860 18.5 860 cv
18.7764 860 19 860.224 19 860.5 cv
cp
f
10 863.5 mo
10 863.776 9.77637 864 9.5 864 cv
9.22363 864 9 863.776 9 863.5 cv
9 863.224 9.22363 863 9.5 863 cv
9.77637 863 10 863.224 10 863.5 cv
cp
f
13 864.5 mo
13 864.776 12.7764 865 12.5 865 cv
12.2236 865 12 864.776 12 864.5 cv
12 864.224 12.2236 864 12.5 864 cv
12.7764 864 13 864.224 13 864.5 cv
cp
f
11 865.5 mo
11 865.776 10.7764 866 10.5 866 cv
10.2236 866 10 865.776 10 865.5 cv
10 865.224 10.2236 865 10.5 865 cv
10.7764 865 11 865.224 11 865.5 cv
cp
f
15 862.5 mo
15 862.776 14.7764 863 14.5 863 cv
14.2236 863 14 862.776 14 862.5 cv
14 862.224 14.2236 862 14.5 862 cv
14.7764 862 15 862.224 15 862.5 cv
cp
f
8 863.5 mo
8 863.776 7.77637 864 7.5 864 cv
7.22363 864 7 863.776 7 863.5 cv
7 863.224 7.22363 863 7.5 863 cv
7.77637 863 8 863.224 8 863.5 cv
cp
f
19 862.5 mo
19 862.776 18.7764 863 18.5 863 cv
18.2236 863 18 862.776 18 862.5 cv
18 862.224 18.2236 862 18.5 862 cv
18.7764 862 19 862.224 19 862.5 cv
cp
f
21 864.5 mo
21 864.776 20.7764 865 20.5 865 cv
20.2236 865 20 864.776 20 864.5 cv
20 864.224 20.2236 864 20.5 864 cv
20.7764 864 21 864.224 21 864.5 cv
cp
f
16.499 840.854 mo
16.5088 840.623 16.4487 840.499 16.3574 840.5 cv
15.1323 840.508 13.0205 841.277 13 842 cv
12.9214 844.803 11.6489 847.099 9.37305 848.531 cv
5.29736 851.098 2.5 856.113 2.5 860.541 cv
2.5 866.809 8.09619 869.5 15 869.5 cv
21.9038 869.5 27.5 866.809 27.5 860.541 cv
27.5 856.033 24.604 850.909 20.4092 848.387 cv
17.8442 846.844 16.3706 843.977 16.499 840.854 cv
cp
@
15 866.5 mo
12.144 866.5 5.5 865.987 5.5 861.232 cv
5.5 858.023 7.84521 854.192 10.9536 852.32 cv
12.52 851.378 14.0215 850.057 15 848.5 cv
16.0376 849.984 17.2266 851.259 18.8779 852.21 cv
22.083 854.054 24.5 857.933 24.5 861.232 cv
24.5 865.987 17.856 866.5 15 866.5 cv
cp
@
77.4849 844.5 mo
77.4849 846.867 li
@
61.1406 860.5 mo
82.8291 860.5 li
@
83.2046 859.399 mo
86.7876 858.834 89.4849 855.742 89.4849 852 cv
89.4849 847.857 86.127 844.5 81.9849 844.5 cv
60.4849 844.5 li
63.6816 845.778 li
64.5938 846.144 64.9146 847.272 64.3311 848.063 cv
63.604 849.047 li
63.6133 849.054 li
@
71.9849 845.5 mo
65.6338 845.5 60.4849 850.537 60.4849 856.75 cv
60.4849 860.025 61.9185 862.97 64.2017 865.025 cv
64.5547 865.343 65.0249 865.5 65.5 865.5 cv
78.4702 865.5 li
78.9448 865.5 79.415 865.343 79.7681 865.025 cv
82.0518 862.97 83.4849 860.025 83.4849 856.75 cv
83.4849 850.537 78.3364 845.5 71.9849 845.5 cv
cp
@
133 845.5 mo
132.704 852.085 129.5 852.127 129.5 858.152 cv
129.5 868 li
129.5 868.828 130.171 869.5 131 869.5 cv
139 869.5 li
139.829 869.5 140.5 868.828 140.5 868 cv
140.5 858.152 li
140.5 852.127 137.296 852.085 137 845.5 cv
@
135.5 854 mo
135.5 854.276 135.276 854.5 135 854.5 cv
134.724 854.5 134.5 854.276 134.5 854 cv
134.5 853.724 134.724 853.5 135 853.5 cv
135.276 853.5 135.5 853.724 135.5 854 cv
cp
@
140.5 865.5 mo
129.5 865.5 li
129.5 860.5 li
140.5 860.5 li
140.5 865.5 li
cp
@
136.367 845.5 mo
133.633 845.5 li
133.031 845.5 132.566 844.973 132.641 844.376 cv
133.016 841.376 li
133.078 840.876 133.503 840.5 134.008 840.5 cv
135.992 840.5 li
136.497 840.5 136.922 840.876 136.984 841.376 cv
137.359 844.376 li
137.434 844.973 136.969 845.5 136.367 845.5 cv
cp
@
130.622 853.032 mo
131.733 855.393 133.484 858.5 135 858.5 cv
136.516 858.5 138.267 855.393 139.378 853.032 cv
@
301.501 184.75 mo
303.25 184.75 303.25 185.75 305 185.75 cv
306.75 185.75 306.75 184.75 308.499 184.75 cv
310.246 184.75 310.246 185.75 311.993 185.75 cv
313.742 185.75 313.742 184.75 315.492 184.75 cv
317.241 184.75 317.241 185.75 318.991 185.75 cv
320.741 185.75 320.741 184.75 322.49 184.75 cv
324.243 184.75 324.243 185.75 325.996 185.75 cv
327.749 185.75 327.749 184.75 329.501 184.75 cv
329.501 186.75 328.501 186.75 328.501 188.75 cv
328.501 190.75 329.501 190.75 329.501 192.75 cv
327.749 192.75 327.749 193.75 325.996 193.75 cv
324.243 193.75 324.243 192.75 322.49 192.75 cv
320.741 192.75 320.741 193.75 318.991 193.75 cv
317.241 193.75 317.241 192.75 315.492 192.75 cv
313.742 192.75 313.742 193.75 311.993 193.75 cv
310.246 193.75 310.246 192.75 308.499 192.75 cv
306.75 192.75 306.75 193.75 305 193.75 cv
303.25 193.75 303.25 192.75 301.501 192.75 cv
301.501 190.75 300.501 190.75 300.501 188.75 cv
300.501 186.75 301.501 186.75 301.501 184.75 cv
cp
@
300.501 188.75 mo
302.25 188.75 302.25 189.75 304 189.75 cv
305.75 189.75 305.75 188.75 307.499 188.75 cv
309.246 188.75 309.246 189.75 310.993 189.75 cv
312.742 189.75 312.742 188.75 314.492 188.75 cv
316.241 188.75 316.241 189.75 317.991 189.75 cv
319.741 189.75 319.741 188.75 321.49 188.75 cv
323.243 188.75 323.243 189.75 324.996 189.75 cv
326.749 189.75 326.749 188.75 328.501 188.75 cv
@
328.501 205.75 mo
326.752 205.75 326.752 204.75 325.003 204.75 cv
323.253 204.75 323.253 205.75 321.504 205.75 cv
319.757 205.75 319.757 204.75 318.01 204.75 cv
316.26 204.75 316.26 205.75 314.511 205.75 cv
312.762 205.75 312.762 204.75 311.012 204.75 cv
309.262 204.75 309.262 205.75 307.512 205.75 cv
305.76 205.75 305.76 204.75 304.007 204.75 cv
302.254 204.75 302.254 205.75 300.501 205.75 cv
300.501 203.75 301.501 203.75 301.501 201.75 cv
301.501 199.75 300.501 199.75 300.501 197.75 cv
302.254 197.75 302.254 196.75 304.007 196.75 cv
305.76 196.75 305.76 197.75 307.512 197.75 cv
309.262 197.75 309.262 196.75 311.012 196.75 cv
312.762 196.75 312.762 197.75 314.511 197.75 cv
316.26 197.75 316.26 196.75 318.01 196.75 cv
319.757 196.75 319.757 197.75 321.504 197.75 cv
323.253 197.75 323.253 196.75 325.003 196.75 cv
326.752 196.75 326.752 197.75 328.501 197.75 cv
328.501 199.75 329.501 199.75 329.501 201.75 cv
329.501 203.75 328.501 203.75 328.501 205.75 cv
cp
@
329.501 201.75 mo
327.752 201.75 327.752 200.75 326.003 200.75 cv
324.253 200.75 324.253 201.75 322.504 201.75 cv
320.757 201.75 320.757 200.75 319.01 200.75 cv
317.26 200.75 317.26 201.75 315.511 201.75 cv
313.762 201.75 313.762 200.75 312.012 200.75 cv
310.262 200.75 310.262 201.75 308.512 201.75 cv
306.76 201.75 306.76 200.75 305.007 200.75 cv
303.254 200.75 303.254 201.75 301.501 201.75 cv
@
248 847.5 mo
248 847.776 247.776 848 247.5 848 cv
247.224 848 247 847.776 247 847.5 cv
247 847.224 247.224 847 247.5 847 cv
247.776 847 248 847.224 248 847.5 cv
cp
@
263 847.5 mo
263 847.776 262.776 848 262.5 848 cv
262.224 848 262 847.776 262 847.5 cv
262 847.224 262.224 847 262.5 847 cv
262.776 847 263 847.224 263 847.5 cv
cp
@
258 847.5 mo
258 847.776 257.776 848 257.5 848 cv
257.224 848 257 847.776 257 847.5 cv
257 847.224 257.224 847 257.5 847 cv
257.776 847 258 847.224 258 847.5 cv
cp
@
253 847.5 mo
253 847.776 252.776 848 252.5 848 cv
252.224 848 252 847.776 252 847.5 cv
252 847.224 252.224 847 252.5 847 cv
252.776 847 253 847.224 253 847.5 cv
cp
@
267.5 850 mo
267.5 848.793 266.717 847.778 265.635 847.408 cv
266.706 847.126 267.5 846.16 267.5 845 cv
267.5 843.619 266.381 842.5 265 842.5 cv
263.84 842.5 262.874 843.294 262.591 844.365 cv
262.222 843.283 261.208 842.5 260 842.5 cv
258.886 842.5 257.933 843.165 257.5 844.117 cv
257.067 843.165 256.114 842.5 255 842.5 cv
253.886 842.5 252.933 843.165 252.5 844.117 cv
252.067 843.165 251.114 842.5 250 842.5 cv
248.792 842.5 247.778 843.283 247.409 844.365 cv
247.126 843.294 246.16 842.5 245 842.5 cv
243.619 842.5 242.5 843.619 242.5 845 cv
242.5 846.16 243.294 847.126 244.365 847.408 cv
243.283 847.778 242.5 848.793 242.5 850 cv
242.5 851.113 243.165 852.067 244.117 852.5 cv
243.165 852.933 242.5 853.887 242.5 855 cv
242.5 856.113 243.165 857.067 244.117 857.5 cv
243.165 857.933 242.5 858.887 242.5 860 cv
242.5 861.207 243.283 862.222 244.365 862.592 cv
243.294 862.874 242.5 863.84 242.5 865 cv
242.5 866.381 243.619 867.5 245 867.5 cv
246.16 867.5 247.126 866.706 247.409 865.635 cv
247.778 866.717 248.792 867.5 250 867.5 cv
251.114 867.5 252.067 866.835 252.5 865.883 cv
252.933 866.835 253.886 867.5 255 867.5 cv
256.114 867.5 257.067 866.835 257.5 865.883 cv
257.933 866.835 258.886 867.5 260 867.5 cv
261.208 867.5 262.222 866.717 262.591 865.635 cv
262.874 866.706 263.84 867.5 265 867.5 cv
266.381 867.5 267.5 866.381 267.5 865 cv
267.5 863.84 266.706 862.874 265.635 862.592 cv
266.717 862.222 267.5 861.207 267.5 860 cv
267.5 858.887 266.835 857.933 265.883 857.5 cv
266.835 857.067 267.5 856.113 267.5 855 cv
267.5 853.887 266.835 852.933 265.883 852.5 cv
266.835 852.067 267.5 851.113 267.5 850 cv
cp
@
248 852.5 mo
248 852.776 247.776 853 247.5 853 cv
247.224 853 247 852.776 247 852.5 cv
247 852.224 247.224 852 247.5 852 cv
247.776 852 248 852.224 248 852.5 cv
cp
@
263 852.5 mo
263 852.776 262.776 853 262.5 853 cv
262.224 853 262 852.776 262 852.5 cv
262 852.224 262.224 852 262.5 852 cv
262.776 852 263 852.224 263 852.5 cv
cp
@
258 852.5 mo
258 852.776 257.776 853 257.5 853 cv
257.224 853 257 852.776 257 852.5 cv
257 852.224 257.224 852 257.5 852 cv
257.776 852 258 852.224 258 852.5 cv
cp
@
253 852.5 mo
253 852.776 252.776 853 252.5 853 cv
252.224 853 252 852.776 252 852.5 cv
252 852.224 252.224 852 252.5 852 cv
252.776 852 253 852.224 253 852.5 cv
cp
@
248 857.5 mo
248 857.776 247.776 858 247.5 858 cv
247.224 858 247 857.776 247 857.5 cv
247 857.224 247.224 857 247.5 857 cv
247.776 857 248 857.224 248 857.5 cv
cp
@
263 857.5 mo
263 857.776 262.776 858 262.5 858 cv
262.224 858 262 857.776 262 857.5 cv
262 857.224 262.224 857 262.5 857 cv
262.776 857 263 857.224 263 857.5 cv
cp
@
258 857.5 mo
258 857.776 257.776 858 257.5 858 cv
257.224 858 257 857.776 257 857.5 cv
257 857.224 257.224 857 257.5 857 cv
257.776 857 258 857.224 258 857.5 cv
cp
@
253 857.5 mo
253 857.776 252.776 858 252.5 858 cv
252.224 858 252 857.776 252 857.5 cv
252 857.224 252.224 857 252.5 857 cv
252.776 857 253 857.224 253 857.5 cv
cp
@
248 862.5 mo
248 862.776 247.776 863 247.5 863 cv
247.224 863 247 862.776 247 862.5 cv
247 862.224 247.224 862 247.5 862 cv
247.776 862 248 862.224 248 862.5 cv
cp
@
263 862.5 mo
263 862.776 262.776 863 262.5 863 cv
262.224 863 262 862.776 262 862.5 cv
262 862.224 262.224 862 262.5 862 cv
262.776 862 263 862.224 263 862.5 cv
cp
@
258 862.5 mo
258 862.776 257.776 863 257.5 863 cv
257.224 863 257 862.776 257 862.5 cv
257 862.224 257.224 862 257.5 862 cv
257.776 862 258 862.224 258 862.5 cv
cp
@
253 862.5 mo
253 862.776 252.776 863 252.5 863 cv
252.224 863 252 862.776 252 862.5 cv
252 862.224 252.224 862 252.5 862 cv
252.776 862 253 862.224 253 862.5 cv
cp
@
251.5 366.443 mo
245.5 366.443 li
245.5 360.443 li
251.5 360.443 li
251.5 366.443 li
cp
@
265.5 377.443 mo
262.412 377.443 255.5 384.443 255.5 384.443 cv
253.5 379.443 li
249.5 382.443 li
249.5 382.443 246.971 377.443 244.5 377.443 cv
@
257.5 366.443 mo
251.5 366.443 li
251.5 360.443 li
257.5 360.443 li
257.5 366.443 li
cp
@
251.5 372.443 mo
245.5 372.443 li
245.5 366.443 li
251.5 366.443 li
251.5 372.443 li
cp
@
257.5 372.443 mo
251.5 372.443 li
251.5 366.443 li
257.5 366.443 li
257.5 372.443 li
cp
@
263.5 372.443 mo
257.5 372.443 li
257.5 366.443 li
263.5 366.443 li
263.5 372.443 li
cp
@
263.5 374.978 mo
263.5 372.443 li
257.5 372.443 li
257.5 377 li
@
257.5 377 mo
257.5 372.443 li
251.5 372.443 li
251.5 377.777 li
@
252.564 378.443 mo
254.643 378.443 li
@
251.5 377.777 mo
251.5 372.443 li
245.5 372.443 li
245.5 374.87 li
@
244.5 374.443 mo
244.5 374.443 253.5 378.183 253.5 379.443 cv
255.353 376.922 265.5 374.443 265.5 374.443 cv
265.5 387.943 li
265.5 388.771 264.829 389.443 264 389.443 cv
246 389.443 li
245.171 389.443 244.5 388.771 244.5 387.943 cv
244.5 374.443 li
cp
@
375 863.5 mo
376.261 863.5 376.261 862.192 381.935 860.885 cv
387.608 859.577 389.5 853.692 389.5 846.5 cv
387.608 849.115 386.282 847.5 382.5 847.5 cv
378.718 847.5 376.892 851.5 375 851.5 cv
373.108 851.5 371.282 847.5 367.5 847.5 cv
363.718 847.5 362.392 849.115 360.5 846.5 cv
360.5 853.692 362.392 859.577 368.065 860.885 cv
373.739 862.192 373.739 863.5 375 863.5 cv
cp
@
364.5 852.5 mo
364.5 852.5 365.137 852.5 367.046 852.5 cv
368.954 852.5 371.5 854.723 371.5 855.833 cv
371.5 856.944 371.5 857.5 371.5 857.5 cv
367.682 857.5 365.137 854.723 364.5 852.5 cv
cp
@
385.5 852.5 mo
385.5 852.5 384.863 852.5 382.954 852.5 cv
381.046 852.5 378.5 854.723 378.5 855.833 cv
378.5 856.944 378.5 857.5 378.5 857.5 cv
382.318 857.5 384.863 854.723 385.5 852.5 cv
cp
@
442.5 865.5 mo
427.5 865.5 li
425.291 865.5 423.5 863.709 423.5 861.5 cv
423.5 849.5 li
423.5 847.291 425.291 845.5 427.5 845.5 cv
442.5 845.5 li
444.709 845.5 446.5 847.291 446.5 849.5 cv
446.5 861.5 li
446.5 863.709 444.709 865.5 442.5 865.5 cv
cp
@
441.5 865.5 mo
428.5 865.5 li
428.5 869.5 li
441.5 869.5 li
441.5 865.5 li
cp
@
440.5 845.5 mo
429.5 845.5 li
429.5 841.5 li
429.5 840.947 429.947 840.5 430.5 840.5 cv
439.5 840.5 li
440.053 840.5 440.5 840.947 440.5 841.5 cv
440.5 845.5 li
cp
@
430.5 858.5 mo
431.612 859.719 433.207 860.5 435 860.5 cv
436.793 860.5 438.388 859.719 439.5 858.5 cv
@
431.5 853 mo
431.5 853.276 431.276 853.5 431 853.5 cv
430.724 853.5 430.5 853.276 430.5 853 cv
430.5 852.724 430.724 852.5 431 852.5 cv
431.276 852.5 431.5 852.724 431.5 853 cv
cp
@
439.5 853 mo
439.5 853.276 439.276 853.5 439 853.5 cv
438.724 853.5 438.5 853.276 438.5 853 cv
438.5 852.724 438.724 852.5 439 852.5 cv
439.276 852.5 439.5 852.724 439.5 853 cv
cp
@
497.9 851.5 mo
499.89 851.5 501.5 849.896 501.5 848 cv
501.5 845.474 499.49 843.5 497.5 843.5 cv
497.5 845.396 495.821 847 493.5 847 cv
491.179 847 489.5 848.974 489.5 851.5 cv
@
491.5 851.5 mo
489.5 851.5 li
486.738 851.5 484.5 853.738 484.5 856.5 cv
484.5 856.823 484.536 857.138 484.595 857.444 cv
@
505.405 857.444 mo
505.464 857.138 505.5 856.823 505.5 856.5 cv
505.5 853.738 503.262 851.5 500.5 851.5 cv
495.5 851.5 li
@
498.5 856.5 mo
502.5 856.5 li
505.262 856.5 507.5 858.738 507.5 861.5 cv
507.5 861.5 li
507.5 864.262 505.262 866.5 502.5 866.5 cv
487.5 866.5 li
484.738 866.5 482.5 864.262 482.5 861.5 cv
482.5 861.5 li
482.5 858.738 484.738 856.5 487.5 856.5 cv
491.5 856.5 li
@
557 855 mo
560.5 849.5 li
555 853 li
549.5 849.5 li
553 855 li
549.5 860.5 li
555 857 li
560.5 860.5 li
557 855 li
cp
@
555.879 865.456 mo
560.976 865.032 565.032 860.976 565.456 855.879 cv
@
544.544 855.879 mo
544.968 860.976 549.024 865.032 554.121 865.456 cv
@
554.121 844.544 mo
549.024 844.968 544.968 849.024 544.544 854.121 cv
@
565.456 854.121 mo
565.032 849.024 560.976 844.968 555.879 844.544 cv
@
558.574 857.375 mo
569.5 855 li
558.574 852.625 li
@
557.375 851.426 mo
555 840.5 li
552.625 851.426 li
@
552.625 858.574 mo
555 869.5 li
557.375 858.574 li
@
551.426 852.625 mo
540.5 855 li
551.426 857.375 li
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 21.0.0
%%For: (Imola-PC) ()
%%Title: (Free Set Line 30.eps)
%%CreationDate: 2/20/2017 2:05 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KB7&XZdcgXWSnJ'*(^D`!.gL#9gXt.dK6+g0"NUk%"jH>WL\J:8%SC,\R%7BqbF,[mFK<!aX1GmRW]G!6-+#t9VK<^_mI,jd
%,<R-3-9N8BH9rVAfDi:f:6fV*2Z\^gJPoZod$?clK!&,8?8&:WRbisIP!>b&k<`p609YKa<`SP!-_X/_(+9jBZK7%>ar*ol977<e
%-;Z$p7YPc,TG0WkJ"qD*S8En[U>53iFo^<rhW2Yn\[,%m*ThX5j;IH>UBH_n^^l_G.7")$(ga"`hW$9-02),a["k>W:U1O^R"DOf
%,OuNT9Ca8U+r!-?o"Ycu+;krZI(GU_9!>EkI7<J7TT\grLYH'u]+Y)C=rHjli/\t-oVCQZ1f4(:(lo+0IeEjb>^=$kF*ac!k93Z1
%ck>@L:6C-n@K$RqnGbE!k?m^;je4gGY,>)e_)`tQ!.'f:_.Un=5^o^5k4hdu@Fpb)G#st*1(j\X@Df/o`"EdZa-eW460BFW7L7J5
%-R8t,Qkhe(6\[T*1n/#A%iMU[r5db0q0U&$.SDX%2oHuEpP[0i+:anI>!rq'OafMjAc8L$oE!i/PUGI^\Bnur$L"k?B2f0DNIsps
%[fK?hoS2-+K!)'TfF\^V5a^F]#OS&R6\b/*ZD:>l^+4D"g+@&TL_Eq<CFk],NsGlJ,:Tt*Gel`kB&i;)XVr>a=PQ<hs0hsdNrFJ%
%%$UoLqXV5G:c]1Flj70(T'/ek*gNO"El3Lh5LKDTi#q6GIUDN1]gPc[jFq)c'B+inX>\n6-+,XqN?1b?_!pZ?&[,pYj/\_9hZ/O"
%fAJC+-sp_^JC9")s8(V!r[*j;l2Z2odBu8!gSnt<rQcRhBbf<b;`_2hJ+TD;!KS>a8UCEKVRJfG>E^@;F+kp:)jl2`fTQ-^jsXCX
%pR`SBQ)f=-#@jOka]I=b!b-_,dSnSj.\IWS/JpDP6*KK!rLb]6RfBrJ%s/h*]SupSVE<[G<U2[W@lQCa$`_^=FGjjF07<q0,g`SM
%8dHj>mp4lT6`pgLK!5Z-b"MfU-Wa;>r?dp'jA)gi@E1sOjcCCNk=V+jZn%TFo\('EB2/J`P>YEBif@DQG/`C8UoI$SQb#nfl:L2l
%?IMj$1tBH,k.B/ak;W#>Q?:67^8uPL*R(/%[2K%?'`qBqb:IXM<iL'rJWHj29<j@61Tlbs:KBVJp(GqcG&k0k!/3C@i(o%UI[>T)
%c7,"r!u8,PY&o0tj!bJ&^2/iVXke].[&;Q@\hY2,-=kLnad0cUk+&nITp[\T8`5ZKgCl8poV(ZZDuKAt5jJ=mG7!U[oK/mKTp[.i
%5A#;#HMi9%eIM?k!h@Z'b+LBi7CEF$j16k&_Gm"^>1;RCJtP7'=eMFiO79@P%nJVRkh"1/j_uaPT)Bk3U!ji2nP)md7Zf_U"rVe%
%J3-XJ_h'cU616C]b':?7=1_2+9[4t\WO\Z/!\K9H@V[k6PIf.5_r&X3_@IG.r)apF^]AIA6rR,)c+XQX9Yfa:kIXXX2dK6i_!S[J
%nZqDtN`PKs@"t)oNuin*0")^!3!?pnNp[GM$?4WZ<I$KJ\C=3`/E@0`BJq<Ng`*20#,2F60\%!ef\,=bUn4+(jc9H+82lEH"Fa4d
%;6q_;%,1Ml?i&o"6ofg(.[s!=-`8hL[S8$6ArS<2];MubM+<]VRFHjV`Y!l-P__W?A/6%d=4S\U=Lb$C#$hp/7;\]!jV.":]BLM@
%4ga_KJpadDo#b2GQTrt,jI=A2^j\nYH_P:WDQ-l$B'maC?+I?npT*AV>rccP?+IO!!TR7pe<JhDR2\fCigi(G!QPrJj]p$ECL:t9
%#LV7l>PiGV?Z&G`3T0!EjDV>-Ce?SPqj1En$;k0GgMoa%ZMQ`-fCF,jOn7K"GOP`f![PO)H<F8^Ze)CWjDPCZam7)fF+Q'&Y)59-
%1fO??05$DJ^kjo3ob=BhQqZ=VgW_@hXla5EW\&1AE^PJKl)D,,q8qI^=F0A2ea#B/5@l[Qn6"!]g/`6YPD"isV(5UPWhcQmmV3cQ
%j/-<M(Km+gjIX)]f'2k(\`gAX/;cV+R[\7XAegjoqVIb/GRbSu5?'T3:BPK3`4=Otd2V:lW@A^bOun8M^t1XG+-?Ro6%1M%]_i-E
%IG(tVE/;@1B(P&\$Wd11TO6$VU12fN';W7cE$(]SUlA6uPYOI+/dS`VkF,7)-GH!)mB!,21M9s#]eZh!'?b]Z>a.F@Dj=hc1k:Ku
%Tf"9Di9UjX[)AP1bDke%/PpN!Tn.AS"2-Z4grRnh3eqAk=$TK^^hbF`9#'&FqejuL=)(e6KBqV,$=3;OEV]:gplCfWCieo)Oks*k
%dr?Ps%2j2,-*83^"79mt`uf0;HC)tS`5[1OR?F#9-?NDikors=r#;'VXjrIH]%SsHhT,8lP!cDH0q#\Q.I_r$0Bp`/Q-EGaBNU[D
%)K,C]fr$,Om,E-#0%H2;)p?&#>dW%^l.m]!=jY,e["N><QW.I%6$[mT6Y:5]qQ,t6>'\BI-_W2uQh2dV.i2tjX.ueGo3%qZ%e(4i
%"m`0-Q@3/B:\V'Dl2HR08UaYR)<&SG=jaSS/p8E<PI(3\.t"BQnZ;Kh"kPBdkK0UNl,[U:<men^DSkY1MC_BLi\!R`o@*HEaJ.mf
%Zp2YmiOV1CYi'!tDNr$/DZKVHem-1J=KRO)i.dV!R;GhoYH(8q)*\(@+a$k,b-Bi%npL:*%fMpRDs4)<Zc<2RC*?i*[Et3>3Ysk&
%<l5#[&Q;mS*VZ&,i*<(<_[i&-'=HrQDm&qGfn[/.PKPJ%hhMShH?D]j$Y"SZW*d!\k!Do1]%2&26P"`"W\93#<fAhf,r]'X%KgTG
%Ui`u(M_M,0XUa';.?!alMO_J?,"n8bl0X).>"sROiOPZ*!aQL?Wm["U(RsNeP$3RCLq4_O#$hp?XGanoF)s2OL0>E3/kg-,NM3I+
%NeY-g]uG1`<S_Me<Yn8b$^8W1#L(=D&HT5'_(be]Lm6EXdLR,r#Zs<>8U"kr@E=.K(/dY:]:*U1r_s9>^r:+5@D*=c.3,_[=5&Mj
%L6tsI?```l'Na+pliUb2'4nT2Ygoqb'BKTd)<g4o`g,;:i^WiHAa3Fe72aQ-lb+_H(4@f?K,*'ti^tXNs'CpC@F%rgdU!VH`2q*t
%o-O.*OT0mF.'A5Bg"!s+g5Al-8paFj&@3iIDUnKU\E\u`+6m3U01tmfm6u"^bc6Wuhml@cML0)Cp#R/sA!)2Mg6_!5g>TI-M:K4Q
%@s'ilO1&M[/bi6<(WNfC'Y<8#]RU:*Z8(B4hY$Kj/mri9f)+11bcLKk4F2ukla=-,>62G"6;H-YD6;Eqjg5M<f&k]dr%_g$>,s6_
%<a/dDCTTLM<a-MYCTY#H>&A,WXgOTJXl`k#.PG1XHeDN\Jd)0r8TppG!8#,%raEaKLQMr[XG>2L(_+Rq96aPT]+HdFf<."W3a`b8
%M>_)Dh^U%(bA'>.IZtXfk&K'b=m=Gs]$d#E<oq\'W3.]E;m("TE54*+X4R*V9VZ9LT?Ek$Wn2q`]$)L9V=&CJh2J3G\Bm[2gY,%U
%>.)OMAm#u:Ro%+!9_M1/M]#)-1.i-"Op-=K*q3MNr!*0j_$A;Y3TID)%qM7N?^AqnqH>NdrX4bS@eSurH>%\;2Y"C(kJ+NdIl3Nr
%QMs;C6q+M`.q1,$bd-QtWn-TQ4lD+Y#F"f05La>(<!5dV\s:bH/qSMR8aA+Vc@A.f1HSmhi'r""(9"k#cnK1'bRb6Uib39U99\QZ
%U4HPh%<G^m90Xdr]$bN*jh@35I\l2Hq'MAlRNqjZjbmJTP$Gt[LcP?UIF<%^dVlhu]3bN.Qcc#phZ[7I\88I`?N4<7s"983YIXZ0
%-/\;rYQ%@de(3j"lh0/GX[fl&9G(-gQK3A:G=a#`9-,`hYPG?QI+N/Jo6/.b=]MluZTCQT)U1GG#Z]guPqG+1[(sOp3O`LrkjknG
%+m:5LWi";3K:\U_3kts`\5<^-8hA2$E1tDZH6%6/DED\PI*$NgZHon4S:%#%aYcNQ#h_7*[Z6HO,@piM#h^#>o(G^FaB[E^lS.!)
%L<6Y9(2`9@gkc(_;3$6b=D;HrDi1F7rMV@#U7*]W-E_-fj(F9HJqAo"VY!f$&,MK]LE%4=-KLnsOE3^JXFc\[pmD5-_-rdsJiqa,
%<0.LDS!(XK7aBB1X"!a[h".[R"kKK@rjrPS<EIS'cUAU]gpe1+Ao$Q8YC%t.33-\T)uCp*Id?LN;MU=WENmfr+3UN\f7B92i+3pR
%=U/9aJJW/DGkj1^eq'/P2snI9$P'fd;&C!s=U/9!f`PLb?KMO+/5@L?SUE[p'0n#ccI5BUOM9G2g+RZp`*=qk3oI55c*Y3$!`m"U
%b9l#kYj@]N\=m?a0:Qp%@E,T[2W9*0g@ERI?hU4NYP'N(Wq6[^13!b=4ZP.";I9(=EIAMLE_ML#i?kE^]or$k\bm,`b05k2)jn@j
%%8:j8lh^=Op$GD1'%?m)4[m>e<7ARb+0#'NVt+-K3jh/:^GI:Rarb8?nPEb5Oq&Md)tWg`7*?#K/m_aN5g);QQ<noPom0F%_pP.#
%24#e<e])tXdJ.)@!Igkh^SWfkCd%@p,ODJ[.;KH2m@c,(L\@4@O^/5M+d1ZM9njTKEIh_r4!NGsM@6d)8XaTa6rS9<n'1u>(cdNo
%EkX%]=8Pl)\9/d$#s86+*QM8*T4[3F(r@)FA%84@*QM8c:Nt@/r&TkCNajVEc`H.DlSumFNj3,7N5"@fa446uB<M6rXY1'nOJ1<.
%qUJ0ooT48$iC]!mlA4j>oV./BlVb,DWL'(5k!T2%2j6!)rF1H*7JLh5D@Ir0/oDT-83Ju.b9$hs;g%-fN5.*(2E,hfFU%4q&C>?u
%7[+R2RAKAQX8T5Ld?'jf=P'sh)f#V./T+`rh_VXRB5!G%%"47RL5<'lB7]oJ)nS[GjLG"PQR00sLt6brNO<r3]93pGr0ca%TKa1d
%.1Ppl5R$/Rb!El:m3`Q\=o@eI=)Pm4KPK[3jL#J^cBaLj9VBm9ZfOcVRoa=QQ^aO+9>9N2%114liJ[J7)noR>oAA3ioqc0grE2&A
%W^Ynj6!l)W:OLu+]Si=[s!/Ap8GdMrbC-[Yf"TqSY3+<lgtJ7pms&n+-H`_T[i?Zp]t*5LBC3rXX7"5\_4=S5cC]/t%E=::F"SkF
%]5qb3DXGaJWg6l$F)-!fMn=%SRT=4fP+)KdoY+RdquY`F4!L!HT4>X%5Ndoos+Wc4eK-;]@77:PA6?JdkOJWOMED!Mo(PbXn&J\j
%/$X^#8h?(6YG8aZcNP2EM:\cCh8-9F7k1N<D+-TI9C#2MV>he".U:Wls%qMSEXfNIadpUFUfV.J\YNk<L/A-^hF`g&?b7[t*TUJV
%!OK3E(9#c0kW75Sf@"N:rEe@TVQ3Y_Wpt1SB\GFeG0FWN7>[Q#2lMU6ad&PU"MM`Q)6]b][17M:h2Q>3>%1@Y\_(]J)sDFD._G)T
%@IUZ,qiAg;rSHtbbY.A2&H:Z*SWL4:Yp]KLg&kF(Ig^9o*Qu"'O[iG<b%8*;!P9bCd)<MG4*ggiq34e(Cm/qL4LXu3)hO;>c7iL(
%d[G5u"-r[+D#3V'era6@#+pf)Z/K1NFq2^YF-/o=pXROY[;!,"VVPL\7K9@1Y*Vn_Y)T0@0T+F>d;NqodEi+KD%s*2-nfl4I]cgd
%4bp1mh7qZ$/ge<`Uc!.)B0`+YM3f/"go.I.!]?>a)CAa^1dhGZe=L>h'$LmrjPjil+89%>=]*V4I^:W<HDY)HB#h*`$!C:)"\G+!
%QW[+E9<=AEI<'G)Pa?f=F@3sO:QB='C"XlS3PCUK"M+FDb'Ir1rOHn_,KT2k#+*m(q(oTlFo(-Z[ULO/ibL]n]tTVB[;I7YGo+[S
%DQir[f?F6Y2r>B2Q)sc"7&5Slrf$_cjim-Wo[?OlR=M?24dLQ^C.ePtMn<Y'6Ed#3d_.(kRTA.K;`4M_>%]FrReU%jhcIMNj3O?R
%>N?W)q)^>u?f@0,O:*jel#4]=F&AfgOH]^2cGM8ToWRa1'>MsY/$N(FjgNgd@=KoC8q9P@:uY)sm.TQpYu%_-IC&R?7_3jcI3n8p
%B1KKl9t4r5B]T]gYGSPmla!*ZoEE6!QE>okO,MA)?`L'qXkWX2&G2]C)`?XLL[>kV9eq>rom.q78=9,_T!arfNgQB=VO3K]A[Y3/
%Q<<A5&EMidHNZsPeEPN>]VMcb1-bNIr,pM!\IHlMYbSJQ/_6(kLH``N%bgIh=4O^6o;hGnhI?:n[TNO&(<lR[dT/J'''455Aj(m%
%nlV8Z^=51IJ-B4U'/K+lE^T(N^\mc>b:`W<i,8dA!<19=kDMTXi\dh^HP61JfCW<=*N:4JT"JA3D4L:HK>/`Z<E0r^68q/&R\oM"
%=AQCJp1..%^HVoZi!D[hc2o;/:i26/[ib*m%13*c_sRI+]U1qq,hXLnJ@8(Ti"+TQ-)1DYJ#9^K(MfV\Rt.bTMdedo6(n89+3I;V
%IYDbcrYF,_7<j$%%qq!pNqU/=;G_f:iuP8^+[qt-6@K4D)J^.^428lQcp!o*#+_4]^6_(;Pa%15K4Kp<!f>Pg@.qSV/,#fSCIYR^
%e5NA7ATY%#:G5,0KUUL%i4Y7%!"c($YN;bgL-lDu`IJ/P!87$Ps!,BCc]UEN+i53FOIQ<"YcLA%,5B"D,0f`;#:Toe#@T$L(0Lo1
%Z+Rj[*e,>^=it*K4Uf;UP(`niMKaO[n60&emXIK]F9^1^i4n_G!'D'hV\d3Kq[7eaL*+7H2;!/P:cq!3q&KpPZjiZ:WZ0956.5X?
%R?l>`[=Qbu`38EZ+Y.2IdT#?1cib0l*rer1:4JHhq3pi2(dr2HgrU94E.s[t(#h#N/527Q17cF<.X,Y-KZJRpi>8G4:gp,d8d6]-
%r`cN8?t8[ro?k76dJO.<-"'K]3(J$eBm3R(1_ZHCjs](:$NJmS0F*X=7cZ!2NW<B275P^'!p"nS,!dt8Dc.GpQ0YD+UKV%9U6?um
%1a"XZ<1?6Hc.7%A8X91$)&#oHbgUV4dl"qflg&5,lGXU;59]cU5Q(2h6M1j<KbgV(j9)QeOKb^nBUhl?k5YfUU@=Si(uuLr'O]jl
%O2W4.MP`^>s3GESN9!a6_.[p_Wt*j(Vk9.K5R+^?qdp%s<1"X\j$AF;`ZOetZGd6&/XuRn6M$[]R:P#hQ)D2?>@mhXVcWjEl+Q:S
%^B=PS%l7^]<bm$!ad$KR0S<taDZEP_W\&MY'l0`o-Ks;a&6MdjnEJET7f`T@OI;iu^I6S]+Og_s4,)[d1M*T\[oIUl$3eGi?&]7O
%4hYf#QsV:1^:@;Q&9^&:*n"13o_Ma<$.RiS("#QJJefDt6bta(0<+uk\1,_[o_EF7kA(Og?N'a6aS-$Tnt)j\^Q'5qJ>[]F9Brl*
%GLtSBU9?p.4e&78#89o9IOkds!^E.uGAh)g7Q=`!?9E)+$eeiKTT.Z55G>c8b"+=523G&!ed#5E:9O?_]$ctZU4XBU\^8bA&4eV:
%7B?WNf.Mg^!@G7OBLc:p9/U*\rJ&=Js0setRLpW]-$'Q0>l<hQXso"3k?@:flG/4*=bu'?P4ViW(gnd%\nLc406^s_;paWth"Ne`
%4Hd*o5WgQC0'$?fF"R(]ZEF*n0f2B`7M2(+.ZtnG]7^*a6A31`EUCq@S]3p0aI\"7*H^ZM\;l4lb;D9ADB2EH/9IVa%sR2Y,op<r
%i+_CIc-oU?as41o!@>Edd3QEfYof;tojCc#+hCPfE2fbB#HHiur$MZf(g$e_'+`?U%IQirg*gu5<I1EcD5l,*c0KL0Z_Mf0``cFM
%g[Yp%HK'RkB(=V2-<QRG-PG_g!G>q9LfoV/KZV#o8%4'k1\"N4??,HIoWfpUSlS@^[PT*O%:-=:G:$Y.#r>dI(MU51WrUh<qD*Sc
%;7pI^;F/ZC.-]W":J(Ptmn),q^/Rs/V/I8),Y&6LeIGO;P>^S5e198/2D!u:Xm;5BiK)U;FDu\@c-Ic;<ftmI\N<W7;kt1"Ntn]!
%TD%5"3BGkS)".L5co[SDN$4JUe1LXH22Tnuaa+amK2&?-mCjPiTd)9$I?U^[^jXR%$/PG3[?dhmF?t+:J,!q)"q<gbDbLc";]Kmf
%MgCsVp`,8@D`5`<AfP8fkWl'kY6GX+-VmM:-EAqk!i/js3jPZ=(@ZX63'/n=(M38=l2t@Fl=E,JlClPa/HQ;<Vc>#XC??[Q-U\8a
%'s-,Z$:lL;KUj&c>OcNATW2TWho\!E#Olkp^iKu@V+tCf!3SkbPgfhboRYA=d]aus/cu!*03Z_;QC&#F*#Ckm\h[HW4opPP%+T\#
%n%Lrs%82'Mfipff58b7U*^e"4Fd(A!QQaeV;+]/V!m-(IrW[J2-f=I4otDfQbKafE$ELTO%nA,E[(&(N;j*@MkjBGO*lKXQC05V+
%ROX)iA>!YbKqd`uQYHlW9s>J+Uo-u27PP^ebrmeNdo$[7m'r`oZ`,Zo!&jr);u=%+!@3C6^p*fld!8!m9"',l2L#dCV]%RUH4Y$.
%C7(fj@BLtl(t$g[Cea(i3_1\;49*<Z-TF!$JJ<kABkZA-"pfn(O6TJ\+rcD,C?ICC4$&=8a5S)9!9+tgJfCHuQCZS5ZNc=:M#4Uk
%[K!C0_A/p)QCsZg)'re.]8^ta>_/>2X4P7ASdaZt.2%hJb=;A.W\*J;*\<"n]MWf.\X"C`CW4kG-Wg"[Q("fA?YI5-OIb`Y+p1l&
%.O2Ye=>c*ReTTT8IC4N&eji3i#Ukcefq&Jin]HEdgAYM!UAgX$0ao!3U^CeQRci@2]ZV+_".jG\,RPY<XfeUp>p(M^?IO70*6Xu2
%WjY'3OQ4uS&=G=PY;a'kWRK8k;`K[I%Q[U6_X8uOG;n<FhJENYE9Vnce>@=*5h%TK)>(;-et%C+!,LEE?j[#LdG\9LMK2_#KqX)s
%V/Ee':&"]nYM*!W5Gk`uf2oj\ZcRN+8Gdj&#U*u.W#,\C!dAG/R]5T2Wn%1Roq<Tf>rEg+/<;^;YtCjnS$c&P3.Mp1D@U@9EQSC!
%3?r*EQl`Gq!1_IAF)P.a2U[hITo,qn4f-PGROYs0Z1ak&U_o]Y9O*!QqrEkMYoF@O))m1UapBQA1"3DmN]-A.'c)JenAAEF-s86f
%eNB*=Ss0`O5CLE<K]S!0k6(j@GVXtJ8&n=i2T1T[EXKWZfOB_1J/sQf7`C2H9bd[3.J<1@klu=>`eL-BZl:!(%XgJH`3Q'dW`3i[
%cnffPdkir\k=iRc2eM>+9nu3EF'u3c+H]ecA/.nCeQa.CM2>X(8A*KcR=O1,d*YqEch?F4<7OaI5?$_GD$R[HSN/ADF2PJd=OCr;
%Q(LFB-I,7ICTleuKL#J38q/`[A;SP4Wp7#2$WHC[ZOSC0BI&WIo^OoQ5VX^Y\i'pkGO.kjfhU`m=!YI<X_3@td,Fe/(A&#X4q-f-
%dOn5V3Pc^FG6-NlC(f&YrGYKul?-sbXdT5K6Y/QVhOr;dAj1Ec^bLDSN9PbOLJ]'HVQl]K$[:Zd"G7Q?TqLQTXhu#3"9F'kn'&SE
%Oq=6r&kJ)8:B7WNP\RMloK^HK6$(giN)-Ae9St'Fr&Ag-bhM)9+_ojn0`A=ZaA)_PHifi=B\8AU!aOadEFa#L:)I<$`WlZ:Ob1\n
%QK@"n;4H.=RQ;m4"fl&3,Ar*Y*'lu*`!40eg]hSLJdS?ZnN\=d0cKMJ'aY_t)r&A0<AUF8b9kZRi7!%YL5o&(#OSp`/hg$]VK"BE
%,(`u?=Dj+4SH.WA@k[Lf>?E4,:7SX-0Xc2OZq;+X7aA^gN[1>/EtLsM,"KV4e@fXL)>uo!#23DOaUK(,r"NSFi8EYXA(F:BnGpPW
%*#!gr#Wr#f;#Zd2JumR8M\qmn(oO=dYW2L;ENH2,-PTLjil,Fd/$LHF@5W.m@a"*1V?^Sh/5c+)*$*G+rVWW3bt)(8@A6l=nE&lt
%V:Vd*&`.BeoK!c0a82Nn\Tn*&j<"TNbk=W2qt&uHY;bs:np5M(2S<Arf`j\lYdnlTVu8hVNL,Oe='616f[O?8'^&gA.ep8k"od3e
%:(f;W"Li'V#m&]2mE8!"r7K[gan/dpHNo[2PYBFjoGAqH(qB3?NPK'>-0)iWh$$%@)\Dg2>U[8:_6:Wt9U7q$-Tg;^*_>WaW/^,,
%Xk"d-IdLFXip!8e/+(5"C+>\[?\`sc7u0Q?1J(aLJB8at%&MjA55ao*"TB%e"P'U;.#Fo86/+B-D$+=3op<Rgg`tEfVCNs%,BJqb
%`5?]bGaD1lLC3S"7rKoA:@(l/hu8saAM`nAWpcHqV9T></)hK,-OnFt*XKc6hBnN1dMGkto-m#=h3-ASIr9Hhobb`?.1NEoH?c76
%hG@[rfffb3I0,;DIo&YQ0"e/&?+AX8`0lXhRl]JfDZfPk=@S^_364;dV!abfK)CpD!cLJ7(Ziiu9D7(W0TUl6EE,+:ki^,CH'3Ds
%]T-@NNjf\dI34)Fj:=15?A#5PemWl/]AGbC4EGFt<i!/?qfkpM%Z.L=k+TFRbRPE<[TajD[al:+%Pl^"a.6:MPKMiu,ac<eOg0u-
%.N_@I17&uo3N2rT\_fG0pBH]T3cAu:Eu'TKpL9\hd\t!7-%,Uc.%HHIa*d`gSk6jEQg_'To6QMWgJ?nT8:)t`g"pF,>p8nGnacum
%*VANA0G+r$Sl46FFpF[5W%jQ4W9dQ=kP'=G3j)PjA?[Ao^k&e2FU%-VC%:2ugC,FW<;e(;lChT:\Pn=mU$tOO*dX\^M2R:ed>g)1
%oHt:6T3blT%!d9ue[B[sG5CY"VX>9D]R&#l4[/2LQ>RN[(>+&gn-1N65J4T?E>JpCmTfg%N*cMl9_gGm9d"n*G9Jg\lNJ1.r"O`L
%mbRSSCqiBN^:i$mGEWA7]N[K8`S6/n(64!;#]\ks+0/2o5e<n>GL*$mDt%KdiSD+o^%I,Oe*l.4,o#k:2j?Z_d4S[LaW<*^BjZA=
%9+Po"0=uXOk2l;aY?meOlWt`X6$pQZF6\b?G[J/3.QUMn4l!d3]gkS*H11:j@Da&MO?me/ZCCD3T6t3gH<];!AdTV7n**mIfpg61
%IGXSB+R[KG>@m9bEA6<&Ci`bJ<@+emMqJKXHUHTGG]*iU)r>pY0C=0=+#[ObchBB2p[q.,p:cgE4`BHU]'-9PG;m5.g/6/Me>0gf
%[8!0;gQ@7%YEf]kGX&3P+5Zu<Fh6PV8qRR[2fZ+-Sa^K7pm_":)o:SiYn?8<]kn;s;KRO<0A<(f%JDr*[NSoDpc"q0cL]''Nc_K;
%diUb3P0N=P7csB6fuUm<eW&AUBmq:6]3mP"eZ7!8:&hZ/nN[(BcZ+);UKmGW2_&Z@FZl1i2O#/2T^D'ZCig%O(08oA\`%oT7=EXo
%boAZj!Msi"$Pg3N+%\[&5'ED*qLl<,o,YJ4lb;$EqkGfeH'\2q(5[u'GLnnJ'qVTG?g7MCjEpA"G'krPGJbdC,i'h,MJ_64FoDlN
%nTD!u9j_g#hUpW)+4iGqp6(E[i9NsUPDGgFDmJ5hp87Uirn'=oms6pV.<9(mP`CMW07nE7k4N'LE:Y\%3SAf:^Fa7o&`;&LrSkK#
%fm;rn2S8pOn<Q!o3!@cJD;S^_[Xs.&k:Q7&l>1J=G]<!,Er0N#6.Cfs-dA^Sf#@Gn@&qA(@p9H_rVN]u[Ipe)HWR_Zp[VNsX';d9
%\%OYUg"pGnY-u7&mHumMDa_&Z"nH@hVSrG+RdCdVp3cbs^=CmhD=8K_5@0m[[O"7K[Mq"![,"=0Ksq;\^tm:Zmk1s\P5"EhR+mts
%:@p%4]TY>,R%8'-=PG8e+!'h*.K8b\l_&O.;s,3R47-:]][Lf<NhJAd3BHg/_fbM+c\YoFJ+tYgrTR#JhL>QJUqbD.DYp&uV5h:R
%f$4$@"Msp2M=Z_B:-u)fp63<ZJC!>;!lqLXE8]e%eI*).X]jZ^/9r%Ve%FiEjer<_$%/ZQ]=X@)#k!GVT7"9+9Bp$]ploL[T$j,!
%ma\`mm654SlRoCKT6FM^bL:?9.mF1>J]:?E'!u[5HFcr[VV[,Tn8^1Y#4F24oq8\>gBtZ%#iT0@j-g5'm.ni=`#b2c?LAhe[&:TZ
%0;ImqX$,@s_b5R;X1m!G]lp5p(Y\);>+s<o;)#pY6LdnMo&D?EY1C#-/c/4shOa0g6ETa"1Gic-'&d6Xkp">g=4D2jfnIt0cYrc+
%iS3/(Alq+/3=W$%*HcklN'>l)?!g\,Kpn(Y:C^-,p[aM2^&N=up::dQOkp$c]N,<Q5CPlE2ng&IbXrc4XC(H/[uJlX;7WE(U&ukl
%\$GuQW.lQN"8h.f1!h2P&og4oBKS^aaJ;:K:(+P\eqXm9W5G/KFekj6l9+n=5i(m`:T0^ejJe31DheguMB/-q!cN1DICl0\I,^*6
%&N=4lH`eMG)g?Q/<5\(sP<n@#JDXta*eG?TrU+9iOWQK.9TS&sZ,,"/T,$hi%JD'8ggY3qo)Z9<C(TaPhCd.AmO!rSJUBQ@15YrR
%=1U#M\VfZR\I\4=S)8X+3*m$C12qt0Gs/q*Di^h4?dlDg^/orNbshV,3&j(g$KoM6,<R#90*UH"p+H440hS8&o7E@^^?peZl/mQl
%-?"Ku0-'=IG*Ri`80kP#"mYFK,k<':]+Ll]Qibf+2pYJUas9b<d8XkY(G2IiEm`UsfhSn-&U+J5ho?eVP4-OZTioV]8A]H+i1p;H
%Fr38h80/i>ecLVn;R:[O^>1n9m%1KSdGE!UIWUsW]Gt4Kmq.X'Nu(UqNk.i,q`#9^[Z6D$op=]d2chu)14-!1]dnrErVXcd/C)^+
%Z(c`k)lpANh734PV%oo)-RG@e4Z)/BNOsN7I7J$!Fq.^E$1VcW:7QM74n4t#nKkbm2$g3RL+dc8A=Ud_-&_a$=gD?o\P6qt%r*OW
%J([Jcjhp',b?ZoqlFpO<e,.li8ie-^#1>HVhKW5WD*MQSmbW;Yk^HIS>fs1<9I8TbSTlB1_\4pR]UiX9Q`upBQ`]Pla[\%XT+^./
%nha@n>Gq5?o[.B"=)DLB9'8^tGTcLI]m6V)ZgZn1IMNbsQY/go06gMK2.+Xt\+7qW5QB4p5C@jl4U5;T#aD78chRbC+a7%ci$mJe
%E@8JiCYh7g?N`pgmDY3N87%Nu'^F[@&bTH7q*ss2cD@-cmo\K/Ac(CGPn.54UA<:h604^s#(-0,FDId>2'lTQHi,uSPl%Z_/+6,Z
%E$]&%NN9_UhZD>5eUq,bg:pu;Y)hgkrq][J5JD#BhOG>TjmAPsao6FZpmM_89AYZk?qDae+-[*EJ%jFrf./eleQ^p*iorRGo2prW
%h<:\Kl]ur^,]>?)7i/Z-mI^9]+AlZ720\R[rT<NFf\3jalUU2dme#W>4s0Demi/Bel9k&XPCH-:gf,>$Sg`RF.k1/382GJf=PA[H
%O6q$3pI*SZ]2.U3j7TDF=ugm=**0c!aXuWEq74p:HL\_&[m;l)dE>)BjlWS1HdPG8s2mm&mksQ^XM67_mS,]hF-A4hr?PaQhD^(*
%!@BmQ96SD-gZqeQ.W&cJcdHh"p.fpm'oLE^>I^\$Y7$',D=+c.d<@+m<T165$`^0AHfS+*43pMVDQiS:];cKiXaU'\OI7nVPm`A.
%$!BtlYNtiF8%"r']-#O,obcMX.6?5)(UqSI<_r<Fl)RRd=kIZM2V"+r/'N&WWa+@JSs7N3%N;55>bRU700TWqn(gJ,YU+1f[FT1E
%cF8,g>tI1M?O?#8J<\e-p[+`!m%E!K^J^K+cAl8el(iOEk>$/l37RZsE*k[gV=1d'jli@1&U@`m:b9A([@m7&<:_9G*O-]1=_U7t
%dU?:>KjS`jnh,F?$Z+A4s#[Obq(\IX$>j'l'g(qMAQ<l'_TeP;EEjgJHLnt_huaBD'N1@)\`qL=#Mf+\&1=;,hZ'Oq;hKF<C_%L-
%p+r1YTlm_W;qK`D9)IJ]Vru'R1<(K1+9K2o)=Gl;oF48W/eg-BWW$j6hC+TT;unX;Q#6rShHDmij;E=6.$g@>.^U?0^4GL(OGo1/
%Rg&:s#oUP6\DI7gl)fV[q/r-V_!@YWG,X-IC,nH$m!]WD[$o%W_n"3p3C@6(3V85M<:!8KR\Wa8B49A$m:DoMQ[uC'hPKIgJXTE`
%V/CJmUePO>?=0/@dF%?gdpOn=8nZl;XpLQuSU;edDADuZ\Y*;E!kmTUF<K(-fjjBWn,O>ZWhnnShNU*nScj\$*i\1Ng*_EnR<f?W
%8Z;qZid74]4k>)MYihm=&;.`E\D.YT+54NZ"cC>&6r(bU$oJ,3D885rPR]>/E@AOa&#e,IciNccqAMb$Ps#K./LYmD$((MiGJAbo
%!ZD,uFq<F]"WEouUsRs-)]>g3W"6ts!45q1gC7&,SjB7XYD`c`d-@K-!6eGKl-<J_*pUUX`tI79r\heVcjqaTr*!uC^i_ckbt-(6
%KJs$?R^tCj9jU^bc;%`M2*jmHdWW'Dh!1Jp'qeK\2uh3#OlKHkeG67,W'HoTFo']dKNosT=Oi5aT;G)n0L8><-0K/uW?W;,8L;CX
%*&e9[[T]#dK6F(9.B6m%VV?sH_6sXZS@-%YMN*8^UVZ@O%@no;a>]noP@uuGP9DX;4R8@QVN5TSQD5N3]5=E#!/aKkBBtPC(nt\i
%4a80+2jXtjVjXdP@W]9=3VQr:;l=FkhqQ$s$[7HH/(up@<p[nD5ADL'[ntkMN14>?kf=;:hsl_@8*A)Ql,Jd>l'BW!p2Om3\3-<<
%QY9oF?uB$1MR>?(hb\;W;[me_fHd;l#u8V[Apogs`g&PFTpK#/=n/Mp<MY(=qB>0'GHakRP!(Np-ZileI%o+ba+!TTlr@d#KV^bE
%3Ljt&C74,[p/CJ=mVjO'h=$o^g\FYiVOt5bO[dB<QLXD=GERgtmVQu'VeOEmM;=[A>qj<]h"/f[9HR709U`O([Rc/C&O\;FSndU(
%S$D0mGW0fMfBpP'kL;\o-5OjOFVF&AT4ja$j^JIR>YHW&8(CQu][QXT=0D5s.caNrXU+rOdSIQk,acX!?G*E%HLYgVh[CQG^-O*b
%Cu-JpeX\cu9r^sY<Q8M&jMa00HhI"N0."NFPA><X7:'F.XisEhdL3O:WP,E"`d^meK5(t412iga;Y?A<*j3-28*YqC5M>*>aWZ\W
%D5XCEmNZmo]Q8i?JO]BsYDlTmr7_.#CNnW'89j$N(IPnHDT'4f)h;\AGCQicY-M..A<SH4&)pgcFtdpHpBDH$DDFe/Y^:J=k%dGe
%<N-.O.D^*hf>L[Q`4j1Ub2unrGs/2Se?.c%O</cj`,iob%nJr.(-QHM`Ek0Cq\"g2W]TV+iC.j\Da,<n6OS\^dR%)2Sb6k$kP-'c
%^S?Wh6qQf>TTdKU6[rcF:8iQ6NG3XYD8h[k"5dC1:LrFq?Rkrkq2Y6Gp)6''XZ]+OMXL`-4mHhaP)d%X+7,:@mZ+pE5ZSmO=og6d
%#j?+W8!#C<Mq#I_Yat:g+*CZp#=#jF/-lAX6W>tL$q^Y`1'bh&K=gb9L/766h_6tRJ]\$#^*eM&8*N/dFker5&D\?J6u27XYGaC^
%('As["D_$?TFtm<'41#POT*.5#UM8TO7ahtA]/JrcHC0fgj:nb9"bI.p&4KCZm>$T-Fh4Ce\Pt"Hk\4kX8R9OZ[*3:;)Au<3</R-
%",1KNl2.sMJ]/od]L1-Dg9RsiC03\X47,=,eViZ1@O])C"bK7YkT0(;L`'0U/sF-+"ET'YM<T?XL5B0j*MZpR=@MC<&+8ih':S\W
%b0=ACSZFbQKf^*FJmnN6iP;'WWFUT?@jBp8'10NkNjsr^MjF2Yn^:Qin<oaj^$/q<g&(NT(ZrOs(sGKPM3"rWE%T3Ms)p>_Ci\-g
%kmDF7S!%oBO,sa);6)"1,8N@]-h6aFM.H#soTk%qp,nkf^@RM]"`UXP`K0_<4TCk[a<^(a!^WDZC7/V7rI?`hR!q"dW8-@&NL]=t
%%Nc@^-/[ZP,N,RcF"c]T-`ns<e9,na(AWf5jA,U-hGLd4ppJ^<l#'Hg0c4IS7sGZkp9]-Dkp[TMSY;q_(%>d1D7ZH^A@i;joQ:-@
%fgYE"m.&<$[IFZI)@aDuj`XGrj]X`PHok!g/'LI$,H1($Eq.S3eqi.JZ;N#$>ht$I+r<PfJHPTJCJHb=R7oX!D&UBM2^/_*3[(VN
%YkN*a''EW8]f:!gi,,uGAcHI#?J%>g_G,\u)K&r6RbA&Z;D/ORI*-lM<8-2MbXNjT)5MI;KdWp>g;3FKrM_fnlu&`dEE[NZ"P-X&
%!X:p$R6&f@h`_k6Hf=D0kBs:9d^dk1i4aHAF`PJ5RHGCr^M8!L8\Fn!#:$qU!C62d5_b:>?Qh:hq"4j6anS:WO:L[.R8i0TgM\OB
%?t<V?HhluoRL!Fa('B%4e*o"Ma>.c,(D"8-O'l:1-nb[(C5*((:oe+^BpD*$$E0%dgk*^OIjHo?YA<o7aopZl>YQP.<#:.,+@=VS
%53&l:DjNFWRE`Qb8g5fU2$o2h,HFs91Cmtg>1F>,E%*uMecWi2K4tm.np%*X$j%Ec]L*W.g]EL=N4^'<!bU\nKdH/[`n=SFqU^..
%N:_d#NSPI"(;H#5hN>dW@?+a,lt!sW3&AtgUDg1#8#UFT/Z:6"Po6aTOi5e/(Q[7TOW1%<QBtC1MlW8e0?j%+&4[^>(FS`qG^(Pk
%%Y=UIWEBN,Z>baZ-Slt#8&M_YHnhC7ClW$iG:dE6dV<?^(dDOblX@%cCM[D3bW%ujj)rUaQU6>7IUlDVYR4OHmjM-l9E'Ms,12E4
%73H<pT!s.`/OE;*0<oqGh!>L>7+fgso.dqnFWE+F[Pim'%h4p%4[8\n:;abLcoO5BDe`JrEL-Sp6I!97W[<pH@$)g??nPJ^L\F)l
%_#$)eE'(jc$X>\CQ.">.kaVaGE&Z,`PU(Fb)s+H$%Nc^TT&h#efa'SDcs,9-oD%@^&4qO.G.ZdiasL+eF"`pqqac]G_abeiR5c/?
%^Ib!m421Lc6a8H><I3g"X4(PE+N/2oc@S6'a=.6%.($TUN*G4$3dHpf1fEm^3]BI-_ZC,GJ#2cL04Y12W=!TD`ur/]1:!cC27RMM
%j'mA+lNFXWqq^aAnG$&\0[3igqBol-Z8rFf(LelrRj=WmV]T\Y%I3?=3/&plBPnp)*Fr'_BXsmQ/E>P!<(*6bl]S0l.B.B/#7]Nj
%-;=PSZ,hb96#,-Wht5$@/KD68R8'H:#=8To0sKcL7-5Wj*4G4%n8noZXnMur_2UPSc&6t@WaGFVqb#fr@142J3)+6P:%p)B3L"aV
%d$$@5j(>?'KI_d?LgW1<QLWSQ_f=\/oLK-D?Ooh'd)i:e,8<,W;K>3UB^t]+qb8c'Jk1XEO;^VR9_UOe/HNRO-D$C&EIMcs#\*&S
%@E9Jp@S8m\,%Ygm$YJ8<7q*s1HYACQ.Wf/=:ROI6NM9it7fsrJ<6.:Uf60)h?c-iXp5Osi`)F5o<*tKgQ?5a47<]./.hSbg<<B*o
%ndHtPC#c84a.h`-)o1WNH7]_Z(Xp/*83U?BWP&C*44L7^NE=%#AT)Yil-MYfADhuTfC9)=k)h#cmeN(+Y\,r\-qB-SkSpP!F.4H?
%@PV^e)$UUUnU*98RU?=+K&"!&=bHGp%$]u)CKugiLTD"4ds4*&j8%-+9UqYk6ik3C_.Y.CjAFG]Si3J>hd&+.eo:#2A<$k)W5k2W
%fmNK_Jk%3MndtB]H(oEng^G5=lLn&5^eT,K[&??qr;fl-"\GYWm(Ku(W,dJ`.c.'DTO8F7.:TV$:KLaBgSdW\G?rF'?L-jH9`-@J
%o_llHp4EX.Mf0QGqYi#H]VLFpIrYE,LR@>"khp*aM3B:M4$<e;b@,c*+)S5o`>Kn'<&7_6bqO=L`,P6T2-)Pa4@u-FUF6MJlE,-G
%m3e-/o-ju84Ep>h)/m8t&*)Tq_oo492["9qd0?VDiJ$G6A@!q5#'$?bD1p$[gH?qn-0WW=V!;AAMck@NVY>o5e&d.u@AP2];C.:P
%kn/,2J@\@he&,gQ)@d<WVp@Hp;DMTQKs,9c=QHcafMe.hI5hMEI<p;P?0A-XSouiEMu2eBNQMMG65SOOn!$X&jY?B3-EbK#5[L;R
%q:ksEBL#1IoNUVY>`0rd=pYDc(gK7iXTkso?AUN*"/Gk/A>>P!!OL%c+V^^-a)kmbBL%cVZN$jk/fRY6>q'W?%%B0qNi\MS2iF*0
%Du2Ro0#[W@aB]\@r5MbFoV&bq,Gq@=?^a]fr"\#'l*,L'r59WN@sUZc`34>_ogC2PG=QD-OFm3^'6kqtJPekeX:Ml"iV@%:<GRM>
%G1D+05MVM6-B@IT0UrZ@Tl3$;rMKMhB&\mm?U5d*GermN]uE5KA/&](g6W:p_qZY[(*""h!.#?Ya3W'Z6:$\apTYg:5(TZOX\?8/
%#%ccXloA?7hI]^L=`7.gCqXIj]sHM+)7_Vhc"C0O.N=kI0chQRd"k)6DcAu\-'%q9m'_A,JDK"'RZ.M$]XsI?m)Rf.QgCsPC@o65
%,c('JL:W4K7IRZ)#-uX=U-EeO/&7]+>khjqjLH9!SD6Z'K+l[OUGD2C-U[UE[@#ToNiQPIV_6u\V:^RP/2u:k&+&$*DOc3:-=`1M
%%u%cnBfTLWCS(`j@Tso\2S_Tt3o2mQrQ#shW]c-Y*$'(,JJZ1mVC+u"%uJGKG.a&Y^(&Ep\Iml/9c+mE>]"1[W3]R2bcF/m?Fi:;
%`=@p>QgpRDo7M-rLRe]k$g*..%o/.)9/AkOT)(4ape(_e'e7+G>,lO-IE'[hMeSm5.2Y1pk32<%8?9.ki5G2NHA9riUtJDVm\?Z8
%nN]I6Q]b(O?V'S!Fa"MfrO1]RIWrk`$0/U`%dn@[Vr\Ef$?aOKf@]J&^Mc%>MSS3H)a%p3pu7qaWapFVg?*3p>G:g3;SVa2s%,f4
%[ng"TeY@>%3@?;k(7J`d#"ff(dBZ%9lu$I!$#pd8E0nAuMsG*AmE+h`eS8o^CA=ABi&S\i]#k0dil'5IHXmCMjVt4g3kMo4#E&12
%"@W+nT$nZ#8J)ZN`MQ`0rj!#;IaSI%kP\WMm#\*mYPH=6Wa=tDD7jg6jVU"N?s\YZ)=(qNOg)6il/)JWDdki4<P.6:><W/Fd^]QO
%BY"o@`TtP5TR=f2&bsn`ln4+0f8A&Uh,O<`F-0'rlK,pgeGq#;0BU++6<p@fG;3NJYS"R^8+,nn<s%O/cMb6ZKA4IPCr9"=VTuhs
%@T#)MiugQ(a3b?[NjHe!>fM8B,!&u0.7;[JI]JoO"2KfK5KZRZn5qp`-I,&`OLJd%mfKhi(J88FcmmaFW%%Q#'qXuU(Tnf4J[(HL
%E))$p]F?EH]1p2l0GZMfj2FX"Nn9Mo6TO+ueIeii%j/?W8=m6fr(iL<R*#I#]gfY6g:D@t1n$StLRWMORI1QX6ODg"p7BHlqnBXY
%5Rf;9g@GcR#"\(O)^p0h"_.Lopger?MClUnAeSjOk>p_F]+i_Z:jfQK^`@Q5:iuifZG*;m7e+uPI3\e;YdQ\0Xouci#m1R+'4>C+
%mA`kmY\P'HGP"$4k_s)GO'm=?#N.#4E.UYfVT$$Sf$*ReO*Zk]V:2(m"f>?\E9P%D4=%':Z-.R7(HJ^*G6F'XX8<kjjZ#-;h`&u'
%iM>(\X6H=:s"&8],]DC"HP+G(2)&dMM`Yb,)OAX(ELSa8gahV'oWL_PlN:9K(=FerXR2nY*@7dq@8Oj]+/E!AmW:1IM)A`lOL.p1
%i!l$f[08#mWZUH5k!a_WiWNTG3o]QUd+8L=k"4Rgc;6B;7;XDX*Ggu1WSTF\J/daBK+kX;-^[r:`nfLag^<t!ne?u#L7o-!Vl)eQ
%?UC1U[9#j;",9n0ks1".c!mJ.qk-N%'dr3Nd%8)(of_NGRm!j6*%Q=8"H=41TIV%^eZ'o(9)%SjK>!&LgOpIh9.(83mb=rm1R4?(
%^T=s\X"5K#K=g.H3JBPm7,ko1fn@nGVp=^gZ(Yi?iK5e,V>UXGK4fm"qUge)X&jkiTo^T&3Si#W#'%/Sq0iJUhORImOZU.^h5J26
%n1^HkGtEcN*mD77mKV)S_Y#$s!Ic&-![FdVQn?3(_-"9q8Y)KeHlrl4CISE*nsY4a1Q6@EoKR)U:B5_.C5@<$M7BdV4\R`sjJhNK
%,;oWZ;mg`:nnK,RU@FZedRF)F#Le/BmB^N2g]l2S0n,mG(V'h":N0mq4+mE2#FTp&Xu=_Y#Pfeuh.c>WrUftf-7rK_2OP^g(^$_V
%oB3"aE\YD?\Y4PYEZh/mK@k$GMq9ro%1'K%j)3*Z,.8e^2ET\"EYCE<"4]Ytr]O1DMEepBe&f,8\"WUr]j5`p!Y5,h7GnN?IM\EC
%PH>6I:Z865OQps+7bYgiC+MccE2=:>VXbluTuYg%EFP"9kh-V>UFcUVi#MlIUi(s=J:nt-/UcBR5`*R;^:)"4Lst%kHM2n%PRs@6
%dojAH8Z,ZS_<k)s]BX'84_Xm\/GT9GkP<q,`5iu6hSH:\HlAF##\q`\V9Tb=c1Ge0CrZ*5Ag`l.Pj_O(N>KHHh%%;BO;&ej^sD`O
%0f;5B+l@A@^9is+6.H!_ofXU6B`IRZ_a?7*D-tqBV8chL+aXTPX>d[_!\=5VQe;i70gP-_6Z4Q"YZL.dqqKdk39@n/4\!'0V#$.A
%nS8RnSLslbgEo(2K'Z13Gk,P2J'WCbbdrpJo^6O?6]65)M\jSb/j>tLlm)8Zk:H,R5'UG(L>bU?B6L!dZhYI+XrY&t\gqp)CU8KO
%hI*2/;LA@]<?#&<=3Sj.ZCR9d5&KSt-c^359i:a6?OYGudT,E(kBhrbgQ1!dGL]+%[+"P=m`:<c>O]m;8G?JOG?`It:]0E/BtVhd
%H8lGSZKOMZ";rc7buOc>T0M*+-MRB3R?1YYYmn'hgk/Zefb@iS:]\cYU'sZL=>tNCk*Fu\]]bL9qsT%5DdYd`]]^`OBn?`!n:oI)
%c\-S$B0C+!ab0uIX:W^0p4+3Y#qF/N,Tim$9!j`_8CEGE#tpp2!>%RrS0qt40O`<h"r%ZdKF#X)#s?;,8_3Z:"eZPI(($Ec^JXo*
%8L%rBL6^^;Zhg2_KA%]',&CAW!36M0BTPT:)-UEB1/Xg)YTOs`8.Hg'6rl_*K06q_KME(m>SngpJe>+1LYIh%S/CB*JHp9'@F/jF
%LGHt>^E=prL'\bT`qT`umjO$V#$*Ml('QD?@$2`?%QB4J5@=uIPF)^t%E]X^&8[^mGQZiQ7\(u]8\bq".>A.h#P<P$0J#M`*7W%`
%Bm_iX.YN(E'[6"['dcN/M1B'PN_49@1C"9^PtdN8R]"?X7g_t"lG6jn"H[4^KaB)"nu0S7e99U`J?u>u3Kh$@M'K.VBe%=\";!.(
%)3+M#r*)$oUi?]!/5QCXJDc10E0PBDP(@7$Wcl!O>'6]2>apG)2.ZmgE\s$"<6i<T&hn;@4%G^\M=Xe9Lp!adSUJNV68d8OC2VfO
%j+LQu-@5RjcTSLTF,lU,d<m\Ho_6ueKJBA8plBJ'8ITo;7g:cVr4V96&i#9.E=qroa8e+JhHclOKL;bj'>c<Bcq"j1_O6UoEe&`h
%#Qg&B.gHLpRNoYYUk"%0fJ"PeTa"IC6',[_)DZnpP'Eo3![u20)71NTk\/\<,Y5a".mc':BGPE%c>GT9S)cS"NW98161VONN.Ha/
%=J-*_)Z3u&ZVh9/GfGQ2..hriOq%ER0^]R1GSM&Nf@nR\bO\@hc-I<)QGaG-ChTI[%IHE4aVAt8:HNX[)nr[=;n)@CecYM$al<+&
%kJ2h6Uk&6a$WtN6TZ9o5que0(Z-:tDR2U,`I=#cD"EM#7!qckOqBq85B/FW/CZ%_;.<%X3!gCZliQOu!0F'!TE-;l<lm+1@Z/Nb9
%0bQ94?iVYqV^Wmi<\mT1>2bPcO>^`8Ws!?[M\Khd#mNC]i[K+37s3r"Zj7UgiA<Rrf4lRI66(D1(]T3H2\FF]j*"Of`j!CM"pbc+
%i<be0S2iS[#EBkBcrdg-k8[!khAiX5-B=;#FdT.F"D7hkG,H6=oCW\_bT=j8683Wjela*?R(#-)?$4G1_tBEXo2[io(c$Hn&Fm32
%d%/mS*)T'mWF<bVMN\,Wa,Li;(<&hu(k\,tiPZo,@O)uJ"m6:)auP1hYR:B*9h.HqNW^uqW(hK1WAP4#m_b;U#N<iCIeA9oUe"U_
%'"Ed8Qih1GBRlf03X9_V>=0V##;h?,l3;>VAV:9SU(hQ<LPo'GGo]hJ'X>;2CDDi'S5ke-MXo&e"8E%Ep]SPYIuD8\K,bAgDD2=7
%/RT'3aFK7?gI^VFRL)"`lp:p.ANG`#nB_b(`DSgi[D;^uJ[FtfcQN>PH'![JOMEB$9a9Gq7roL\n4s4>6(%j#^m9K\j$^fEoKY`W
%(.Lej15WVn@pi!KZqu><)WlU#D\`?hY6\6Bj+KE4-/(4D1dM)&'Oj7&fcn=D9O*qi#t,*=E0LUi(k+38cqK$TkBI?o0jIkf]Ru1l
%$(pFgpl'5]a;EbV#7kj%Q4qrU8:\"u>Xk:'4*(t^KJ5'PL_7k)#g9*#)TPHZSr8?&DYK]8l<W1hU="1:eTZVmGJ(9NGhdMUZgW.6
%ms(o%32>pRF\oelhsjb)ECSjUB&>n#"d(]`?kSE%,8qka4Np)+:lK(BVF]'Ye=C2]g,KUe3cB.%%AgqCMhKB4?$-mC>Y"Bb4E<ab
%)+S1k#t3$ZZD!.i!rV%PIYemT5JgHgA+<j3P"*JkE=puEW[!)l'\+@GV@tg2,ZRN%+jpk8Ns$1r,]+8.LAXRmM$jtd><!,5G0Cq!
%l3Us&#hH4&iN#^M9qegj*RcP(>W*>79QZBoFI6T0<i#bG?O0>^Kg\7bEi8'AG.qYt]Sk(c`!M?dXWjf)G6/OFTq[YNJr5O4mIZqB
%+$IdP0e5W=6Ut]94`=p0bf[^d&ReXn-@':.$`H[`#It8$F4%1:/"Yke;QR]$_4VDHR#qGM!L7B/UH"0@"I%dm-L=:`T^ZoTC1iV2
%%LY?PP,&?77O"2IqQ6LLL@L1q%*k%r2Jf3=,<.fUTakY,n?<QJloq0s3]tpU?g?<IhPZ""2LG7,W+]6(a$Gnh&]sr;7C/KaMP7->
%5ZJ\9*07=&L,$NkAr!.8,`6$ST9/`9og)"qZ^WX"`t.49d^UiH[mRQ><E9+2LD1l#9k0HB7Kn^GQj2C[2M"u;NWhom1c7jnLDgp<
%1*[11?lD7lO>5+ejmB6b+\rqA!"B-#TM\Q!b9G7=Ph@1sQ=haK7KL-Ha[\`0C8$?@!g^@sk563:#,i<B%8<T"QqE@(#rp+E2u6[r
%KEA/ea&arC!&>2g0\.D""N1\SVW8#4@Egc"CGe-Hg%7[p#a7+?mPiD>Qo'G!6UZlt&aKMlJ>Hh=e]71A:XmXrR6i)aRj*Gmbsn,2
%bd8N;bYV5Y$]5r\oH1IQGiVnps#H'lUstSkUeC:Z!gh%)%"i+p+2J=*k%YlXTa25l+^jpeGm/K/O2[$`$jdnWkTdm:J3qUF>cX\m
%Ha/ll,DW2acN5)G<`pQQ2!:e;N#A#'$rr/97o5tX8`,mHiQShO%l^jH(rDaMbhlidk=C[004$["*D<,?Tq3%E0?d6A,A"Y.NYI/T
%9/.bW`aY00'E0adMRE!!'-Wo,&"tj1*d9M4)8C`[5RUhm\`:M.rA%sr1Be_-Y+;7Apc"7,=r:(L"QDm8WjkgL=F(^`!$08p6mi0`
%Ku.lM$5l`ik&4MQ_LPg)d5.%bT@B1&6mC6'[4cY@n/4hkGJX3InkC_pV61epS4]?@.dN:i3_-,$28(T@,<.70O[rC!40f@bRuBaK
%CPu0rh9Ir_[A2A3Hl<cJ^]fRWgIatdZQ0356[(DLi+$9Z<i*?q7f@)Nb_!V82=@Xe!P`]g\2cKkP@JPm*KM6TE@o_*6-hj:4LC;!
%$06b#:<,OB49?5;Z8>X(M-ju"=if=g2[ZU#e^er@2fE2T=ZXYb.l-(YT*AOdd\V,*_ImoqIStO2jAk'I%29e66.uXF8C:&kX:u!V
%)8?VB*DBIfnq6'QMRFE=0J=?Z<VY<JIPA[<ahV;[:h7YpL8c\69;g@HSSs[ke@q#F,:BID`FuZI$m)=tR,=aj-G`C&Blc0*O"7Uu
%AWrXBk23;gW/2+L5It'ST!b6hB;2\FS%83Z].:@+\B*r(A^QYa>]`?^%.oL;'O1j8bifS_+t45dJ891M'u<M;"TTd$2YY"`*JPZ*
%2HEAMP_"`IUIRdZG.SN%;9u'trah:>Y-tlBgCm9G8LeUknsL.O4dTXT8+nbgHqA\=*TpJSRV'NqHT(&YHq5.Z1+7`EC<fH1a9PE!
%&.!uaqe4e"s+H8h2FAkS=(\88R5Ua9MSk.<V)]JRBB$@82SP39Af\DELqmuJX8iqEs-]Z$CiO.g3MKe!0l)US8%V;a`(HXYV]3oV
%k8\3m9T.r[j:%+1(ZY\M//V#C^]^pk3BM)cK]^:O:&#d"i=$F?7LkR^N9/tu9U&!*4ZY"CM27kGVTm@-^Q7H$c3o`:[qYi!4Z;iO
%fnJ">Is>jrSpPem'e,V@<](_S%SDT?&fBCu84'r1aFYAr)0cK[,_WBmJ.KXS!>-tgg#"569SdWmY`43#>OiATauj/YOC:G*H_HD%
%0TZT:6.t@>kgRIgICJLN1#Ni$m@R0kOdnL-!\6)Ge97Y/0S;8G_sO<&Ascsb7ki$G%5@B(-Oc>"dhpe4)(6N%d>FI19%(XpeVq83
%/Mg&Sm@KY!S1B#*S5K>%i_?U->Z=3b'dqCl3m'/%(Pj=YVU=?81X2>p37=fOc%\7B'f`HA4r@9;Kc,!h%OP2G7%4Yp=JM";=gO6f
%c'fYeeWH`QRVcl*a0(:<C,Rs<&M%bMP_o:+2"hU_@O8?[WI\/j<$KUnafPFFo5'Ou(UL@`D370MI%CdF7KJj5s0jm'cW1?@<TfgO
%Duo\heT)[G@gTYd_6e2!Zr=isK?+>\;B3tkE'0OHG9P[S3,ZtTa5O<nb1IWj^kK3#i0lW8L;C"MN,8bAASs:h=Y/G$C>lJH*%ib1
%X\bQ;N5C,RdGU[A^!aArl!(@`r>/N2IdpAR9Ahs8]WpMI8fRY!=9=j`,#Tg;MoFj/TZ,"d,&*sK6'Hs_OgELs8(rK+JC4K`-kd\T
%cWT61.Snab602s.&]%t)E0iM"QBe=eH*]X^STCS9GUGWuU;oQLEZT:g,)BA`HqAt0GadP""reulmMH%iL1pJbD+"dE=n=#2E'uH4
%EYN#3`D2G!g.Z!i1M%8@PX\<M(cNh2\?22[bR.gX[%lGuq#Q"#ZQ(7bVB%o[bGk8,VB$*tV/b)e."+lh;r"tV!5+9,=)WA<2,<gQ
%n`7pC3'b-mnE,ZO+XC5Bh"W<8o#!4f=G2FDnVn]H9&_+7J=<P2W.8.d`<6`QcB*:_7f:Nb<Id_GD4O`RB/p5Ka#^b]'(ASO#V3mo
%iaXI*#HZ#L0h`Hd)aG/mc=.4BjFDLa)hM;5YjI502pFas1AhG;`%8q,dT/:lrN*D!@kqH:qf"5*=R.krq4'NCiN2FF/B\K(A_n=M
%nD_*S?#alrhPq#`1/+&hIhZ%UH*Z5$6jtjQl_Np7C3(2*!Wn&7)Wo=EQDL[CbLoH3@DH>2"LO.#.<HmGa<<`S%1di;/2Kj87k]VF
%WgtKqE=ss2fVj`pD7=5J\GASa=t[$+ar[V$e597:k8]T'q&L6AGG-u@LLou^ErfpB8_uH"0pG`+1^D`m#j.\jZeG%uM)@f#h4od<
%lfO8=7;CCql=?T`WqfFUM)0(dQm9Hm]"`sX=3LZm%./PU:_(57loqfFJ6tH,J0V0h.F<N-'#uQJS"O.-7l4'Q7p6_0_+ZqILVQ_i
%[F51@VWC&iHE<Q'>ggt=+tdLtE"SbB>Zk=0WEC[F:.JK1VF=afM$c\]c$BL;/oJ$m+Qo&4DW\'7*'(r>f(1E$Ks<GS!5^:KNbS^^
%(TNll%A%]%_RQ3?<G!TI;DCi`)toubi!Ap<3j^K12n/VCDu=QG,ADa=Tg8i%,m=[W?t-NY1qjEc'Psjl/89V83/cl4jkt`Y0PCJY
%-Pn2R_$,]9iW;OYQR!SV0G5]aG"KNeC3%.ndJ,V)P57U"\?d8;GdSZPY"CD!W)4$c/-g2TNh\`WAR8dj:]bP]%71rMU&_V8"QeRL
%@luM<+>KV\$\>$^T!\GJ9[bg&A`-uVN\^&Q@2P,rHHi-J"Sg.R]Z@XSPRZ\mE'\O!3!VABAjVCB(8<O>=t`]alV5N\Ds#kd.+:l\
%%\<qg7V4FjjIcisVPCI<dg;T>Qo[aAR"+fq(moqN)d3[nfV'(L8N\KU+j/`F*jBDh\rl/dnq8-i8=89?/2/tL$,XgVl%FWpKqrBJ
%FA(ft2ZVO?Qq[)o:X5(VchNG=!2=;dK=T`-jA<^=rl10@'9/Eujc!\S\=@j9%R)ITU#GL6(5uV)*!t7CR\+VA.=0ut?B[h%oMmFE
%%ItF/q4s,O-Gq#Rnp&$W10J!2dpN`^F5SUX,9Wn8l&>^g;eW,6-m3rY)aZ?<JJbB-&2bt:TGV)SN/,"VE"4pu7ts$K4]2n/j@FAd
%!SB-"F("1+Y(F&Gi:aB!\grG!m9qP-r>'i>K)dGsOSGka>l)I(W#;[b'F]sA)@@;$KLM?GoJ?8K)0c_te8b]);\krQk,9uSYQA^=
%Q-"_o?o<0OB1Z,X!\"1"U)ZW6YdO_QR)TmQo]8Vk[gYod(i4jYT6bCh\V-@7JBT<]ZWmo3kiTbY7sti_YfDOMAL0e<Uh!L$-L5]s
%6b-Kn"i\VbYqi_E?3a<U811.bAY'_P3Qj6(.7ak0>m[n>LMs#@>9+%2:@NdE*o.#$G;.GjNN[$X)&d@+'H%Z:)MS6U&)99;$645<
%JBG[^aVga8#^!6g0LE;6>9NhH4=(M[Y5A0H9UN[ukSW(U.KU#FAFp.HQ\i!E:;eb"bbTKnn.0QT9T55\c#GkgTd^,^KfPU>f0V2W
%A\ae-J9mnWK#Yk[pm],7Z1)cY5U.ilQpqEhn,p-%E\+kl$Ygi\ECb2u?bj-nOmnsCSB66-\B]n^HgqDu!M9^2BU1tF*&$l]>pRH/
%a>b;U/7[$if:3&@@[<u#:CId;e@IPBiN6ZlcCCTRR9)Ao[FjI7$J=7IM)!i^-EC<Op([C%[H1TjR)R4HfR2ss\[I<]>?i';O9rWe
%!iL*_RPsU;1Z1dP-N#>6#5Q5jLue,u"^.Rp+MW"(O^"YLLr>oG$*m/n&1N4"kXka4^'p/;YX1)<=-GIZVrsSDW0s\WAnC+m#NI'1
%1Nt5]<&Vq4LM-*EG`=O(#)6FG2>jD@pQberc&9s<"1AK&5n'"gr"Tju44"&%?p#ckF'3`6FU4NIA9e[>2k6!tM<KVN(`))L9JD7^
%C"qe/TX.&7n1%;X@J'&&DLfP=@,)s4#Mo4ZV[J*N8Ajkh)4Y8%BgT[-%Y7dh%8.JoL,g&_AiVIG/4hr)NU@tP^h]?GL^LHh1M<kj
%B*O>=BAe[mLbgTCI=;FGJ.jb6;KGq;q];:.aBThP[7hG$[tjHM;1)Wi9L6^N12gC;=X4L>=U.Oc1d7If;`'3O)CZo`jM44EPHNK_
%Wn@a54;H&,&L.CD&Vk@oBaU1AbuUdgP^2QE_M)^.l!<a1?1dP_=-h-0mk+cmjEc%7ddJe/V^d2R!sA..B[X;D4;ZROOmkT@])Y:u
%gg6S-@XW<(T!o]b22W/JS9`*gXrZJcMXQ'RmVh#'QU&H8'qMg!;k3FtBZc^Ab`jh:3cHhK5&JI?=Z'Dlg<Z"+AccT_GE,n;X>IZR
%d7E6^N9ldSS[jH4_mc1@oWDiJ7F.(]o,$^1E^;K,3RR;eH\THt*e_m/]]QgG<]Xlk)8Su[A()e&3^1*7:Ti`As./p13AE#XX78dZ
%4r\sWTT.hTZ-r6HTZrGY)3qJhbpW:V'2HkXfrPb<>].G$IA<#^%jm:G%Ii%kcn<iN>lqKZ^_p_+\BJ3=PV/(K@D(6O"4V0LD*2$>
%V@4[j5(7=$Y#$g3L0GtocQmhtg.]>gett&%(=/@+/i/JoYr5LeLs)59isA[((KqBg2)3)_8+Ze:kZBC+7sp_-mdE9tbII7l+b_+f
%,7&8orBd\dMd[ZE'1*j]J\X>ii):U0Ku2q.I!(>o4YTOe6o4Op*jK<kc:V1."5>AdA+o&M)C-%E=cp*b_)OO$)2R6Wl0p\?i3Sh'
%&Faig-jKn/mY"ceOE51Dk'*D)A6ba7F?U%j_upI5nLCl-7N54_45L,>@<0CK1_:>1YQ,c)YeH#?j[C+QJiD]''JAMrNu#K)r/>nG
%O'P!LDR@_>mqi#okLGsWGB*g/F1n'd\ml&[%`4u@*/4q*j^l(Vcbhne,gPN1UKAoPmLR0;,g2o54=3<'a5WXVOI><-J!<Sm70MMY
%LX/R:N]Ga-4uc?#@?Gb]#0K9j3@=k@N';h5W<d%?U-L^X"LCWsF>b(K0bi`FDq]BgED1M!7Y&L:'S<<d3C?FH"HOUu7mGpPQVB\n
%rY7S#0@JuAEi9slil$4r.3=+'b/'EYboqW[[^GEghmfA#S-.qZUA?s<T,?2':NKrerAM_Z=Qr&]<GD$)A6l2%a`]/fheoXQ!<pV8
%JbdQ^A_Nqj]U+8Cg2,fIC907N96(_oR?0/0N!I>[4aea58fM5'PZAf=&O27MEJ3jO3Y!6./2k,b)fO]1=01F?7elTkY2=cMcX,<"
%bd:Nf1T`^dApYEPW8F8'iG<h@epBk%rU]6VRBNq+7e#1$-W,Qg*@c:Ck/]V`p^0dg%[D0&-[LQ*1>h3!hk;f5ER3@KXL."..bp%E
%mD[`h_ne;iJX!)=$,Fjl%okVCCM0%sTD=@G\mbPV\*CUOr_?s3k&Y=QVCPsLM<51IbZGA6qk'r(D*DlLm0l6MB.1drM4^_%;_!7#
%b&E1k/A>#t`au"b>aBL[H%0qXDrsDM(AG&I7aI9\k(+hK''F^i&(E[V2MTu%6SK@nOQHpdU/@8m$AM0k)$3IjV[3[2T,IP7Al0c+
%G68q1KtjY_YstB'8?<3H0,<Zu,$'I]rWTVf>Qn"M/DOE_FrH47hI646_/NG@MR.!M_uiXu2(KMGBV*1G]EmC&Jm%<u#a0rBceb-J
%ad"+6UAJT#s,`^cef0?P*gZ)-:%+tID,[E,C=@c(A[0d5*D*]E==r":J,"E,E&*%X-S)N\fu4,_iAbeliKtU8%rDu=,Up,:jYi'B
%6m8S:/g/7Qg3=J*.8<X&J%b21'AJOGJo,?jH%h`En3p>8U<NN`Kmu\C1@qY:r["[>biBE4(H"2+/+HG//4':A/.<?7WFNHS>!_Gt
%+3!q[de[m-'9jP<>%MK6Y4%@u_*a2g7agH_#jaEL<))]Yqb0?#T2>=_gOB0PIj6+2&c>_nT#)@GWIWYaeQ,^?V]WAfFc_Sdq+KAu
%Ki,#6(>&Y%`f=5?%o0&\EbN<)0.uAc@F+6.P^<At=bZ+(:6+1Y]`%?UgT,71hn6_Vdh1WQ(7^`V]f9D^VWdZR_gf-B(%EENB=l7J
%j:Lhtfddb$NXYBYlk3#gijdS)j:L2,fnX.Rjr?Q9q&5KF=RsdBp;RlO`hhqKaTG^eR([SsFI^$dEfs<@<\L!QT"K0NqXThJWBI,9
%dN+qXEd"I;?V[Jer,VN.ZY8?3nInh=7k`\Tk>?toZfb1\;QAR<H.9FYo-fZk-`,84kk*&g;"ucFk@_JIKUUK7"Fa<]B,ukt[5*FX
%<S9B(Ph*#)>,F5^HRh1eZ"`03/Ci]LZn.d&pd2*PQISL7/=elpCZ2%"p$jUqGOcO$Pg]VXI%Qu&]WQs(b<#QgQCZjqWnI$4H$mf\
%D0/tVkVMi*QCV;I9&;+#q=-$u[t8;P]k%O8VIepkO?M$,](eTp(HiKsqP*3MG+p4$AF\D*3Xr\,UMIZ8-#KsCX/N4YDI']JXfW+5
%[uR:FMtXYb4(ZO>WMnUQBFhT4Z^qUInj`,n+$]]!ce-'`rT:ktr2'/SK(QVt^%O*V:H@WsW6R>Q*D(GqP+/c89p_*ldD;jq)9JOX
%D5deB2$5\=Qj`Yo'P@/@NJen;GVbrGFb5:^$_fp!,fj89`!':+C[9"r?C7V2h&o#H6RR^d,TRNN^.7s.USHbY.2)/c[^QT,6D*>h
%`bAQrB&%Oo^*$/;^V8X2?^N:kU\#bt.:r)eXVgk8*Bgh_@OJ#*B789ccg#$(e;`@(5JFa`Q]H@"IsV"^ipa2^kB4gjWAf:9U^rl"
%6L]HdHsp#Q=@9F>FZSTNY&'<t$CaB"N'+rU]=L@="WDCPL=_k*K3[f>'_2u<nEC1K%d5-%mZJ[uoP<%,V]oi!VeRW?@O*Zp89%,_
%UIuK!R8@=ODDR1[G[8>,]!_/1iBlQBi]Q3(VfY4X.#j!!U0Qo-+8lr(C$EYg$JgN!r"r!$0L3BbSQdHkH;Y1n#p$KX89o``4(B\W
%e'[C0=eWJ&Tqh:Wj*hW$P@Ci`M4#"(_6HJM/L.!H8XuUD\D8S@STRDU&S&]5WC1#T3+p3RgK!^@$`gU7%M/raa;m&1Wq=VDih#`1
%(G@uM4k4Q5[i[h^C>6STop_#7/mbjijY`h";Z$8feuL3&')`TTND,s::Vp+L>C2<AQPO\.Mm^VPe^A;5'e.*?)0N3gldm!)41*Y+
%2>6Tt]*5\a4*#S$`(O+*`.WrN"n3o%SK8SV.'5[3'u''t'B\>.po)dTngr\W_E'ktTW>@/;&;[3.;6)FU"gpNm0;I.ngV=Rd@\ct
%r&C%HfC;f<r&nrej&5mNh)5%B;V[?Jc.XH9XO%&_PdO)/3`19Y[7TC8_^%tOE@tUf1tBp7.lJr8G2";42F!7`46F68<s10h,pXdT
%JgQ&>2U\?pK5F5F&e+(R[tQb#g/_\*#Erj^DWg8!I-/lH6I.`"4a9or<D<@1Q6IAK3m>8`:mOV0Y#*+-H"0JCo:!]d.(+PiM^L@=
%R]*304Q[T*RuG+O0=7J/.sY_8!`flfk"Y>T=?>[.V?q,r'/!gua2i'YFN`W":&u[6L^al*=UU[^['&U&eh,A[C3T*hjn-:"f8";m
%!eF'DjdB!VPoME.pdC@TIP3^&O-c:K-&##b-nb+9(+s/->qm.BPYUmtZP)5*n8:RFCKBQP>*;tNk'dUq1=ttP@P]b\ZeK$ud]!3.
%4n!=(qsNauLT=dsq>O0.0AZ7=cKe7J?7X=E]7<Od](il&IZPXo&Q[57.H9cfk8\bp:62QZS@bM\8-G\CeP(HdA`mC)P$P9dP(!6C
%?TE>&85TSaUjq!GVqmW.]17Opm:B\`X;+H=fd'O\fhH[Df<!1j23f.2VaGF"B^=Uqfd&H6?k:sYIc9BP3BK#-m`N25o2+U]gVk:[
%@(3uI\R(f664FTZll:C0K.H8&)A=!4*>/`!pfpQ_[o/)gTg-Y7F+O)>gqPWCME>!_gY4'@4VK10psOX1TjZBm?^W7[?,XH_>K]t1
%l]s^1]$FiFq7H+QI_>O>m`k:eqVB1rgu)JF=9IqJcsA6Vb?M0h&W4'WPCOf(!Sj3m88`6IAh!SLPL7nbVo4+LY7aN1Yna]eEr=pV
%+ALLqB5lP[0O`JTL'U,6@S_+7*4u%%6;IXK@I>OEd0)IiIEBXEY_)L*FJ>o$<oKbs=&[.@]AQjEQh"&/$@F`&oork4*[]*%R^^lu
%?gE;JVfI!dinQF;L>puZFg[1_(g*G&&l`11J4_Pa$V$2X.(HPEUs^%I:j;tNXCm2g&&uF]UP/W"HUX:]JD4BBZI;*/8PLlk=W@qE
%Ul+n)'\m6\bX4#rgeIiUiENj</$W_IE`.mrkAh2I<(iciW`TJe9\sb]Oqs_?6=OqQUbe>86S@/EI>s5VWbe`G4Z'-ZG49oua$-?e
%COXjuS_ZVKHdDY7[i_cW_HuNKqY%gBcMg]^=Qc\SR(EhnbU@=W,OSN>.rC6SgeEO.a[>1FF@5DZ(<k9h8][@m>XTD2PD!*he]Bj-
%C?0;U_&TiMPoS(TZLX02\EK@B(?.'>!aB,QNik'$GiO;DLE*&D?r2g@d\^CEEeiU?V7D>OVpMPiPHKk$(At7]8V$,JiFhNT1p/)u
%8J-*A#oWI_'Ja(!"#g:9Ud_k12[DWg&CmE4@Y`YuDiJD/Pu@_l^&gi5R8mBJF\US**ZEFJUM^i6@AmR*IT9nL`iUL&5':ri6s3lF
%#LgL'6REfuV&eAJ1),C4Uq<I^9-A1N"Em1`X/+rE6((aNZj<M\HGHh)=qWh'QIFRL;kUL[PtXt&?/r@bgTH0b1Vg-n8iLcDm50;]
%jq]C\]/C,U3ulRPWu%LoLE?R>"gS)fec]rfpaFH^2R`^d9GCBJSY/_>A))E:o4-nC=-3@6^5@[mj6hiJs6%X6hYl&tR#3.<cWDiC
%NE3HpP%Q)L.VgVMXRW#VMJ7XCfW2+&U%IH4^Qu69$d<%g3[?6DKIoL0^&GYZ>rf&j^=F$Gd(OLT`62]0BEH&+:t&i>S?+1A2QE^@
%V4GF9"e-%Z91fTu5Mqgo3gN^%>gB[Xb-Hp`b+_VM5/Q,8\1>`\Ik?*)mKJihE)/@-0L8b-.P%u1+#q/2G6c1Bh3.n1\5u4<)7gVW
%_mDE%M9BDX+]Y.n=(960U<E-/k9s]Lfs)ssY@"nIi/SpTriEf]O'P0qH3aA7\$uCd:<FB"9U5N/dqL;W+i2W]GfAb:h=6c8<laHe
%Ne0DcN4"ekE)N[(A2Mn/nsZW5OXiM>@VfTZT<b>_T_>,!ZjdI9Q!\M\+5U9N6I5CK9fgQk4<e]?G$0ugnqp4OK/a/B2?OhIXQ+:7
%DNiNo?4kG7P"i\7W5W>>T,CRUh^tWemEg*Jm2'6rc3&WYnm^@7&9)_V(YeqtBVk(NBE4p@cebc5^oVVlfb"Z!+n*+F[:`biK9VOA
%[?<7uKdoU$ho,tEAa]h_<aVrkdGZbqN^@7GFr_\rXW.X5#7-J$"j5l^-WY$g8DOc;?&_"V[:"_7c_fV$Y>'?C&.6+5'njLt*<3($
%)N5U3ioTOJA(.^IFBanYgNW`NRuCZgi`a=.-g`#`^e$<c)B7V1iRcJ/-Tl=X`<E/_0b("8^#M`J+GiQ"7n]L,?5O^[/G=C@JG:2@
%7TZ,PSS`![o!['S:JM=niPI*Jg%_VS\>=]_1C;unDp]-7eBG3!HG;l&AV7\0F>id4rAc__op$co,d0dLpuM<Dos!%JL-=oKEW<_-
%4mUSd=WE=b%f+koqq%Bc,[n?u?..1qXE;DOUjZ(qhD'?-5F=*9We>hfh3FM:/FlpHHM4G,]gBaGEX\cNg-rrjqib=u]BdTj&FZda
%gpu(81:L7,Bq:ZAX&__`n6+N[+U/H>1+K@8mq2>S_/36uYDcConOi(T9Vk"Dq?&diM':/H&`!il`UPo)<4\3*X%m%*?P'WWXGOP+
%G5ChP0Rn,V=9\L7g!HHblH'?ZK9r&>m+A<)+<>?HARuqtRKOMQq8U5$GYt;jlknIEmka#1]!.l<9DNr8l3H$ler?%mmU/C/E=WSC
%=U%T)oS`J!c4UQQRQa#!#!-O]?S&A.GBUr>^JM[cGhR"-fYq-9JoH44<=;]tM/A(Pd>hIk&CJe3_23]XU&0V&Okj3Lg$.a%c<7*>
%=S-',:+[P'EQ-Io5i3i<*17&:M=V^tGS^lcq^m<*RgBr^M,f5(#j$RuSsi@t.kJ.TO``BE%=H+@?tuhBHpH5;-pR+]psi\^r_o&n
%-:Kp,O_@)ag!6XS<%F9'hLCXeJnJ;6*Y@U'VJVY`<h<I$W0uGl>7Z]KDr_aFp3UDYVqkc).f-m0A<4\#/=s37jdrfMo_n"2hS&sW
%l<f&9pn.$3?i$E+Ph-r;jbZm0,m;9%Urid&9Y,%tD21A%Ff6"<$R</k$LJ[$!RII`N`mkh@7sD!*S<_NRaG&k&%#HJ&RRdal(T:9
%0ja+,g@jGu)'_6:c48gX;,kQY2Ng1oBh=;=DTF<J1T7`&d6K=tLUu[gWXBMYh*P0h;V7=.HC?eI`!fF88?rOL0F-'A4?3811R^j)
%HN_AVf_&dK6X:oaM7sDuUdpr*qpO`0DeLaS"ge@k,.Wc'Y#uF?Xb1L7Bhe`oe/khM9oYsX+*-OQB4eM,;Pitlk8K&OpFC.kr,XS/
%Q2S4mLad9=$,o=PVZ)7"$3`F0S_j&Y6iO@ekdY5^$hh(bMC]7\\ai#_Fr>H^q_"427qpj422M[+eY!hTbU*l_O93XtUtGPYGCBsq
%o@X52ILR64Kf+)(IV_P2[NB)H)spV2I,/2NWU*nA4L_m?@>nQZ"q'968+U97![Z+%='tPJrTMgjrTHGEDd#;Qs8(RKh3ZV#BAZ/N
%:ZBrBhEAg!gPNBk$-A8AHTY,\#B$1J&rg;I+p`GZiLfau;KVQSf<W4n=E?umY=1u<FrY'h00<@DI,/2^WU(Z)hsBTh^V^0*ZgR4d
%S,Z3Ulhaa#N:a2"&8n1/^*53Hq!j6toob^Rs.lPW;BPJiCM?uXe0NbY!B8d*pm8[Z+p7]Gh0#iKh@GX7kjK(1X[c/$d>qAqITYg;
%8q5T:KC2k6X9Uc>aZa?g&,X*c77Nbidspdh:`NVTHGL^"'#+)\inW)Cb-4]f5/dE&HL9C1_0\TCZOq`bU+=R=/p&a-"fAU_8_^KB
%^/"Z0/.7g6W`bKGAaqn?8WtN,Odd+%#SW7#4[_"un"rfk9R-3kU`3(/o\.8UGY='m)rATXU#OFRU_Hsr/\'YF"!.o[28%k(UPnF"
%78T\$c;0jaW\i1f)p=JW$\9';%:f2N(K:QL!>Hq\GnXp5jnAMt.qQ`1"a/2(:N3ONK.`(WT;d`MSor\jIm8LcH6GsFOs;PO\6S?O
%FrW7q5@X@XNeY,"/S0(W0lC1Yq!.J2kOeRi.^J"@o(`l(P08o!Mp;##]DQnK0-9iXGk"S+"S:rf]Njg'(Kk,%9bcqr@t/J;&.A&Z
%eY=q7`9?jV/_e4D-YWKo2qSIQm`6jfKJ[2n;7>#\8'UUIKC,PApM?biXGe.B_NM3=<8"LO/1em^QK/Ku?<E@LNQN3+P_CDp_ih=A
%/rsSc=c\lkmBV\6Eds=<d?E\k-n4a9.@X14Q;Nh6O-2WJcM'h#SjuB/N0:K9-"d_mYq.FTRmrYP9?P,7]O=Cg@-<4iH./_)@7aU(
%;Dp'T)sm,tQCL%P`9uTT=YfoiF/()Nn3gC.T1&D6<M$pZ%CX-B>96V;;$/n=Z@eH+C6l%Blo:9DM^@PH@56?6TktJ'XF(8>&T\L&
%nH@5AdgUKp,Jmk\3[F_$7To(`-uoTJ^+*-:W8>+=-&H*Zd*#<HYkJBt<#fOAB^B;%)b,0=bK;J5i;Y;9a)8XCM>pH3fMC&f2&uK0
%'TRUVdsMTs`=>KSZFmIL,R[fBTtXWuRN950m]!.7T[g#gVW#0+=\Hq9fZnq_C1UY(A7_7IL='!kfBD2D\:5Wi7lW9HgY8VVH#N0'
%<UoCTpsZ=%9t5aso[fr0B3cF"8!*SP`]U03OoF`trc!8Vrq95!S!!Zd4,ko:!N?9*DC^2hQM!"=4OhHg_D!nULD..E*%L&H;b0QE
%G`JJ2fakn4$M4].LF8S6()KV9"=7V-p(UO+XD>h%E#i"QKP$oVFKQNCNWr6IkG5--Q&"<)V/p)p>?NiriCF."D5c:[Q>cJh;RQLr
%hgY=fp>,VT=73rQWX,fa9>#o;J9:(Z8tc,K0!%)/;"UeVVF9NT<DjY39G0^R+mJ'Ym3>0E$VC0!,b7s9hb@"S1J&!<,!&:YWL(;j
%Uqh0l)DhWDRN:6XeiBi?X\:llBk<?FITFc!c]-qgY/_H_"5[88fs&#,%<SA1ksO[;b0F9=8fZPA7;AK<@#^O=&Xa)TD6/LrMSsLh
%+#\05i*duOlr>,/%^G=IfH7b#R0.*%6Wbpm+cWXp\l/tl-k*F`#WKD\*B>a\7Y.5F3Wugk%Pr!)83'F:8o9042tkRk%>&fQ8p]FL
%o%OVg552Y$qfp78SGHZ_ee;sM8U9L)nkS/3cd'd_G#i)ZO0VIBZheeV.a1%>F'`9Z02#_4o@Y]HmPI[M;&_uO^E-1#mc3Q2YSJnT
%GZqi<ftE&kkp)ebTDX9=qSW4!529GF^WY;;VN2&WpK8d&C4[Bcd\Z$#j<VrsKftjmE"u0CXMSiXBjam7$;k4jWZH)S&H+(.F<0,[
%cX#E6C!K8><Oa5as#$;LUBc(7A3XW494e&6RQZpYCbfQ92lB+<(-"T[ml0mhfbI_",u&L@?%:M<'/LIm#094Wc69/aS+m`A'[%g[
%.6>L@`*rUibALm>+G4;%$Fc$A/-WhE2>N%V'&Nd_pM+mGCUT_$m8C8nCUWnBbqQBTeD-4q27KAuc*j]2gG7Aso;:Yl^ZKXQk&eB#
%FMHtJWAuRgLJ?%mIa.k@c2N1:rdN+0;mT\C[[W`1rL2"0Ra(f"c+TS#4BlPYFfsD^[:YWkeVn_#:!G8(>I2HGCJL@fdo(8Be/[o.
%*:DDuQ:h,HSt$2sg\OCpiP;t)gM.A].O6Y;N*kGPW@%Vdoa3/(;9^4#A[HAlo#,BcUf9r<G3X6nn3ar?bGG?*YuApCIa.\;c"0gp
%?#$NXc$bt<!r?:C2>87QC@21F6F:OQf$-)HEN`aJrL3]`Rf32RrV`2&VWPD<*&faQq_b;K25g=/Vu&@7:!I7K\SQ#`pM6r+CTdDI
%Y4l]!l`ucBls+U=e+KcR=**7=7a6>h))_/JAjZ-ZR_r$Ef[Lo0f,X82S<cdrU8<uW?>!r,))pm:^6p+7q(=8Q,LbLs9o$b2.jppq
%'E7CRpUBUO=9&6ediYdmjbMmX1"?Qu2=Oo[h?t#>=TT#k1R&rU_f!dKVaFPSG$W455boTl`$ja[5)W0k\)'gj9q^R&:L9C]a)8>`
%6X]@08:1jn&c$-iVVRil:5?sJ9i)eS3?1BU@d6Y%d!n1T6PjGSeAVNMSuN^`R]?'J\[BU,0g^n0LJte/$fQ-=B"k7V@?,S!J]8^Z
%h:rD*6J]`^+)&KJ]05VQNqL*c2)`jtXqR-GBo=5TCd_Gbg.(k;R1dk7lZZ9WqScu0p$fP/aW_&="PGA2_QH2\f(NdhgM+jqGi\bd
%,Q"[[g`6gZ6d=k?h>=2)o\1BH5d"Wo&!tDbR,oLY%@rMH6$T,G-%d0<_P6Q@bco)77AH")@<a_rJ?HtqKO,1"Ud-[m*5\.8bBsuW
%*Bi2@ps)VERdaAt5m<CeP"o>.F:RrG)as9253^uh<AW8S44)5;0*%+han:<dF$0a+=:947DclYB>PEn6la4F!a/DR7?LPG&V&q"e
%(s"35.CGFBrr2;S:Og#Z9'NlnSnu8R91B4P(TY<L#]CeZ<'X>j#9V;W\(+jUp,pQopItIj0q^d)W+;A;jOslT?k]>IR^q,V3:0tY
%'V:g$ITKg>aiYc;UUXF14T5@Ca.&cRf-GB4ct8B)<?e8?g:,-?E7,NnmsnbUdN+nAid=#8g@iFgqpL;rQn2=m;@WFHBj>]bZ@jJB
%BoRcjMC.[s0hpX.j-j=+X,4D`#6Q+f^=gVd9M5`Li%5MsihIV7`36i98$,b3d^/V,E=fnf[i?>WP7i<tA?g,&4RL$d11!C:,5sI.
%g"*%$^G,*aH'idI$>Aoi[<BUZpFR@tUN#U'%F.GrHDW*3hu(#Zmn;372"O@_^Wn1QYHlA7!fFuI8fBF?P]X0H^/BAcg(Gjc&:^JL
%p4:>Y`->]5Bq1lW8L=dDC)TmI;Bp[$H9,Z9Ff4oQl$1?<i;R/Bc5j(eq/<VHWh.U(Ef*7-\T>o4?BdDqOjBrlfeFBuQ2b8'[:Dt5
%p(u2LR#fq^*S-V5((@?rma>9qYd;C@7q]mCY<]I$1S_62Wi\r)l=p0uYpbeT.Tl_gW!9-pWBc-_Lpk4)g`VBQDqR8K.T0`PpB.r_
%l>7/gCSNtiqnVYAl+lY-@-CtbPqT]NQ8Z&KL5,VM9cA<l;5XTo]gVf%F'K`VoLX%iVf7C^W\i%0f4V>"2hTqR_2>0)GlO(Z3Y_:*
%2EirLf`WjKFe:(r_dkKQ(uke<r'X/MXYnN(4>SQ$K!f0TaiV,';"&3629Gb1Fd=;:;ntMr\eLR&,dmhP=(HcCa"NA1MTjCX>'=?_
%c-O1"e2A&0T;0fF/g$sUq+"-%n<lYthH/p=S!W(iVieYlrKItZ9cm$YOkT*jU$n=nh(SB4?fkqO;a_M^i@o,9],^*b`e3Ms\cW5a
%)XZlj"Nl4>qhO4dgJ:o.^A[ikh(=jc0(_7qBWhZpjc\H4<dcFf*MPef:Taj'`GVPGS2iHHl4L#hJ^eW3p%IVULqBiVAI5o^HMjtu
%%l\8u+&,#s6V[GbYQ)q?QCXU3HWt)d.ITL67sr1t:&8Q6#.c^D9nB#uck/@kbbLnLMUflj'@,D>a-MUHHRN>B6F[n?Vj+Uu;/CAV
%e""`q`0R1YG/3&rZm>G+jRX]"#c4e3?/>l`pFpW"GhqNn&#70bW8Tq37m"cUdll7:+/caIl=/qs5L$Le7mC=,AMM899cU,]O#>>Z
%e2X;]0B&jJWgC'T]V!U#"8'DV/Ep(X0_c](`e3ALqB]?WDoXlIB+M.g5LDNY+6r*Q](C)N=HmAm]N;rpHM[9UnjsY"LDme#DoT^_
%%=YOOrF=jO68(M^H@GY2`m>GqS\1aO/AsN:;AXWC5MX)pdS>(tPAT;Ba^]D[Q<lTB_3BgiWq#NT+'YPl(Y3-377s(rr)!^6FRGUs
%ktZ<a.BeQp\`dSMj3m^l]/LfrrV;KrhHq=IDkK5<U%+IhRddJ,c+G8?=bVld\pI%AntOC!`5$'%'_XiKKlTj+Ku?Mo.Z5pR\0c?@
%a],3m(LiBMXtIEO@/$r@k3sr(-&s.u+e`n?`GHIZrG$<Ce_oR[qh$lYKWc.M?]`7O6[.7^:S%CO7BrM4X,E,lV)Ag.YA2<BZW/Z@
%$M<$/90@g5h]UOjF(`(V_ui6I^qLo&fklC-)'7ks&L"K=qqqd<r:?5f,rg(.cehd98Lp]+P^UPmUJ.RsC45NMdis$c.W^Y4rG\oT
%J&5-*hnPrW3t-As..U.Nf>@AsFZ5f$MY#t^q&eM&c27B&I!g:?WkaS_noTY=08Eq,7hMXfBXcf3C=P+NB%=N?:6mead=Unuf@!W*
%]VMD_:FHr=FWAQ>*D1'Z)'hWa7GB.I35R%k;A_%A4b=0k73#r[p(0i=XN=FXCG[=pfhIVr,+\Pf$tB!fb#=!t?uR@#6C:#uA_s,5
%W@@C>:JSmMIqOIm%&teCXC^l$BI!=VTi@%fKN+/!VUe:8>Oa\B$>OYgD(J8W"7[9h[ZEtiDb2RFXT3"Mg"fQU]3+U;ml2bCM&b'u
%:YLZhTLP?fJhX'u,"\4;is[\QM__%q>Nfj1'+9%@7<lBK7`+gNI11T`.[ia8nAJq!)^)m7aUTQ6o+)2.,=/[ldndX#qSb$g$q\/`
%dVbr+1KN#rA>"pNn0KVfTpN6hq<'C0!_iMDWN&6+XKnI!Uuq%)WhB4^$e0IQlQY6bJN"rRcj6FFdSkb-.1KgGdm7]G5fjS[5ihu#
%,Eg:=.slbhZ%&A<q)9B[]YE)P&Mh*pT1#f="1dNTkd1C7:q8k?;Y_L(=+$&)o9Nm!-E)1_YAT![[-V"Wneg%-#U.IFDNq8tdo8,Q
%bo?"3Q+bA-n+kn?D7r`aZ\'4n-/g`9<^c$"K1A$DT?AA]VGWOb536XQE3BlGeP@L>pD]>F8?_4l-l<HmW_$+EK^7&aU=@Xi7u;j@
%$n58\B!O:.Zqk\F\^dHCqL6?@6O@HNBM)1.#HkN(qE[;o:6GHUE&/8X/XOM0btJl`?!'j!9I<O*l8GM[W1si8%3%p$+ALK6QZLhT
%#@io`oW(AGmaqm0cRMr]f7$5F9#5]bUt'JoeNn<I1XQK/4;2#k#!:->;+T@tYaM&Ys*X)Y1@IQ%AHYHh[Ea%qCZ0^K\c@^rPHSkV
%mBl5Zc\&d[k9RIVGUcMH7-:'8)4EQiVLIc?.I?5HktN)KguRI-L5Z_\?Y./tCk_g$2f[/pbFH2]J"@,Jh7pZ!FSj)d2g!<WB1)]^
%DV?D0?_H&T*'=d/&+=%0B]Rup&hdm/;'A>5a"\b&<K%6PTTOFO+m33pd6A6:=;*E#WX_>0psjnY,beHJN\C&1bRq`0EeSK:ar5)s
%QfTLjUAhf*.[8hHRDuE7S.sY[68,CW*$mooIeahBGb?*h;&cD+IXQeB\R-K-Mgp:kK&,#pLmRl<;,40R4RNA>(EP4K$nPik3d.I*
%l]S_@@U24m7'Gpfk:4--is'le_+%l50J*%o*%:Dm[J/k6Mb_T5hfdF0#>7Nfhn8jSdYhn\Gg.'YmtN)Io%k]c$QYtn)Jn&/+qC"k
%hS/5%h74kXmZDE<SsIJY)5?I2?E(W^;RK2tO1s]Z02H0I\kp$n)K-9[Eice51Z@8.i%'2"$26lYkdYf[\-hVj==V:D,r[ZsMd*fp
%(Q3-:E'Rt5*ospr<9'1ZiZ1df6<EAF%-uR4NCHP/6'+S'o">\Bh_l>f0V]r`b*Pbs]DZY]fEM'+$1,h?Xc-;lr=I$a#:)5@)O2@r
%PAGB`#CCBcp*qmi/D7o2GHnM4E$,ap_S)5_cd:AT\3X,2p.+"EWBmD.mIIq(8?Kn$a_2!iP"hK+C0kp\mY!KX/3C`\Dd>>e5`Z#3
%K_GWGmU<8'#AaqL]g;Kgn-)QlbUAP.,5+m:&]SJYaEQ68;9rT.jjd5cXUIguk;^;K?7et-1UZtXT_pSRb0MObqk$,GIPO'WbD?*g
%AE:p)q9]iGA_$^sENK#V^+PHT+*l22o_um&JE8j=GIT;E!nW!!b>0@A?5e09*+u9):M*`NHX&$Ore=btNG\r9H$Rn`bP=4_`sM2+
%C3eO)WP)Z*a.GH1pTn0N4TFtsC3e]dL[b5BUUg"$i?u3$p_$ZK?'"gE1t%uYd/*&eT0Br*A;,r:HrL$ri?]OIn[e>7)n?9kqjp&C
%5cP^J8X=QA7%p@9%b!JB&DqI<Lp*2DZ:MXjR[i_!9SJZNNa@8#?<ZpjTl-+F@E&aK`GpKo`_dM\@C5dphXkmHEW6befg"<loMaOb
%?bAc)e_bAYVn7_lFB(IUU'f(dZ))g-#@P)+55hed\D)2M!]k,RP6n6.nBMtqHWGJk/$hlKG'?C<hM/E^kN7ZWDWd\dZFA^t61-hp
%J8YWcMX!,Frta2`5L3*r:[e>Sk4nAVSQj?AXJa]bG*1o.8Qt"c:9?:p::%9GIqEgfZ-DWMGi*./S`=n^1RCsS*_#JQCSK!cH0i&J
%]5%.^cU$,GX3o%'kEOS:NgI=4iiFe5!K)<UZg$0a3Ae`C#WBn9CqbL&_[=pSKZu*GrQ9/j_+&n0&FuN,c&g$i,F=%`?BQ5G="OHE
%D?2f:[QW9=(kK&9$X+LGP16K`p.u+G%)&bJdu#RQi'!FK$+K!o\MBK3iT!^dP#D@3Tb=EZC.dEIDWVXtdu1!]gSiK@ARo;)kE]!Q
%fnU-6P%td<f_3+F32Yb-0s,e#TKdNZ,D`W3GYS-uqr\ph1@M:23>u!O,=m*$6EbDTk!M4b?D0H[eCMeO`kmG\6P9"OQ3`rsO%:i'
%=V;Oui)C!f[L`_FC`Hs/@qMVK5WL8mA_BDbq=Yn:e+/*Um-tI=Io_m>Y;fFdNIDPVmC+0%gqNadq[Xc%p/oZr?=k$5%\f[pgl__/
%GYRX(NZo!ZGraps.gj_7PrDof^9<'[pL5[Jf@5<+Eod]LBf9`H(8R2)'VcdR&XB;[+")TdHSJ4fq"==*jQF8'5BX%(K'l<-2;u`k
%1O8M:JPBT6F\?lUpALnu++LK+%t)<E0&s]2nL]\]IHo]A:eQlfU[]Ju!,iRY775G3#Jcr,lWO2P=oCj\ePA*]lWO1Ccg"m.b')M)
%r8*_+LTu5\H#[>R`I6@1md+52/r`boJrcnrh!'Fn#PAYB$AL@giX`602t,W'\-7,f@7+brs0qIsX"QKP:b[KJRF[K9g,ZI0+ReF?
%Y+;J7)jU,=M*GlK4sJF??[K]jnp9=P-2uu=Ok/A[^V&FE?Vk[j[5[A(XuC$6r^(qkGH3Z8(%q/Jq<rMBjj&1!d"=ZV2ois=Fj@-m
%U?_!FP(NL&*HLg/e+KnUEu_mPIsJ`t`GLX12ps@_2nlfHEV)a!`V%4e]K,8B^[>4Q4kSU3lSB]4G/sB;b@OtI0'i4/FkU'bI]C>j
%6/m;!l`0bY#BKXa#,q]m4Q*,q#P'Z'/)lKEmHk@tp;T+h\Y$&a/s*VNIW)$i2prMs)]('r0>BI2g)K]Xm>^t1%J&WT`qDO[Q7Z11
%nfP4"SrTt\HZMiLpTa5_/bc(;as3hlbEaZ[q^$*inJTYQHO$kML0o;f(UW:QM7o&&hY77k\R/fae?q5a6!NcDe/On8;bs..B\Z(<
%nTWmgqWdq%Ii^99?.AG[QM`C3LCr7EWK>uCkqSMSU.AH^+q7^VMM9+K$-_cq7p;(OI"7%gLKfq;!_:%bQ"+g8QY\3ACT7W+$lO^B
%R^GP#C?:cBPNj']/6`Y9V_BJYe6`*,9;tt)fo/On?0P0f8A/T9\O"7^M433lX4c"JOTr9-S\k8u,Wg(mkXhMJE,4nhGe\=,-L./(
%/8Zk0O0@o?RK;a"Y@F]P2\Ra:@*cTA-3"JRCM-BI%,@nQiU(1L76ImY^6rB,Y^74IkF1p@p$=&&4aZ.VB;b[dHrW:UC;htg@_5%u
%XB9Pl8^XjmSi)AslnVp+930n#=a@>AQ&">%9@h]@lg'`,f=5@^o#pQ.9@a8TH@P8fc^*Adc"F\-s5@n"If&*aV[JQ1/c0>/rpig/
%!<EB^U0\*oJ0P)(n&5m+3'L7RO$*j4.<\Y[N$j/N]^NfRNWE/@f<&#T<bdF``qF5=O_+>pN.Ou%Zr[!B!(p?HL<8lNqeDu$F'GWW
%I*Y!Cq;o8=KD*hpmHrq.eT*f_VpRFPGLH*2F)=gQeR/#V?AaM3f[@g/-Qf%NEh$';.-sm]7S_#V&#Y*A.&AuR?$3RbU2>-o5@E+O
%%h_fkmf@*6H&>XZ40X5=R2pfYgrLcB`TOZ;#RX_aBkX^Uh_HWQ!2V;AA]!>!%Wt`FjnM39fUPRp;%cNhgHm&RH<WI!]T?S\glW:=
%!G_ok<$$G&7_m<UgV2SW<C!=YUW"N<gfGC[T"LGf(_fEkXTbm+Yqp&uIC]^0JHOeAnK]X#_6IAB^cu.:hYr-)&tdmGr5-W9^L@O0
%\_k\`&LP`K9C83nY>N$9Qsl5jMdNBS\TdY'4eiD"'Tc?SE97tV9BTB4$bo#51#p2*!OUAZ1\=Rl:s?<99BbW-l&km)r;cj'gTmFs
%I!5"6-TK.JAO)t/8=5$2LrRW@f<\Pnll=c1^FV?B)J:9[iYlnYf1U0gRacub[:[;?[-`g>>u+ZXs6lohBOgl2na65BIf&9V+"**j
%^\[WF>X)[%GW0]t9jI:5i\X*e;bf8ZE8'%MBB$8u_DODp>"Wj>g;I\aj1'fl'\%<Q)WlAE9WOe"oeW_!_3o$1F1m%"e^(W!RFX(P
%KFP%tVDZWk`gPC;di)k&j+9)9)WuG,9P^/4NAI\N`^q+Qb=l]>lch5fH)<IF[,qO)VDZ]mk*ad_e!aoQbD]A#>/S!.KR%.uo?-"S
%Q,1csK<G[.9^B>Hpj$H?o?-"SPp+@%6[7t?E8(0_ZBaBeT4)=+S_b,a\LjIYKCAg%s%/FFg,&1%o48(Y-Se0Y[+fW.P.j_u]?Iuf
%2pb8\2(dYeZgZ?7;g6rH';cD[-o"N0['qigeIm*!s60em5Ng>M#J^5]27N/2Xo*>m^YOK%q!D[r\Wu&ijgSIim:T*WnXC=aTm2mD
%Hrqg-/&bqn3%UGLi\8t'<f4deEEFZ]V)TP5MY!K#ch40#ij;UR<f5@X3@IXD]kO<&XV@[ui]L`5L#P-AY&h9fV7<T@Q^-R9?k/(;
%>]3ao/h=nPV7=g<Ff%-WFX,,r7Te9%Yc\pR>rR@<0K[6^?8oa4DM3/g#j]&6k&hn2DV[:SRIG@V)#FNK.*lO_I.&U`](B>fB8IhQ
%LOg\Hos7'#GF$=`[(JClj=@'73_SQ4&jn[-BCKu7,s%s[`3gcKQS/6'bupd^p,R(=:(+9h9B9D_hOGn_Pu9<,,mL8m3Ua>0\R%ML
%l=X<!9WMN>Am5.<YFfP%1Tc,'29\$g6Yi-)9ln!fVDZZ+`gPDfi68RJ\_]<p)J<769P^):dY?=.dotm[o1WqkC!AH9H,5n_c#^RD
%VDZ],k*adUj-5h[0Wtmn?5`[R1AH-+nFOf\l[gqA3j/s@?5`[R1AH-+#kQ1M*kO1t^)d*6pOjXcAfEQXq_gR[p$op1hgL!R?Xh-)
%q.m,2U-'*92XQ+q.4a^@\@<),ad7+R^(u8=84eAT?fA]L>#e4,T?I"7jYPsP)n9._+i\R)e:1B#\Wt&NR'tOAWuJ:!594pLP$"na
%KI'&lGf^CD1F9arT`e.Lf1^]Lh*GtVWr0]/@b&l0c_C?:<OI*^Qob$a%OJ$k>"H2HK?sOY&-@Rnc%^Z=I\Y``Mo6o<SYoLs'=NK>
%!A:'"R!_><6K97GUp7S<L2\Zi-e=/TB@/n#IW9EWaf!S^k9Wd([Ijfs(q^[IH0<t[7p8o\/#oIdnrD18EeV'gX@L%6OX467$RGF@
%<YiODb.IYdOl7_>%9/[2CJ^eT=J[OZ8-(p%RR1d/V.-YO.:jSjK;JjJVUTilOrrRU+"'VIE7Ojp4*N*]XnWPnBc:d_l=(Zr)c'2k
%n&6>qV4J7NXng_9E63k)>p;.N:@>@6r"?79,@9MjMq3e.lYO_o]cO_]$i1sWUj^833gQbG^]/9Nmd8%F^LqD1bt,&:9@QLPjPo9$
%W3U!HQj.p?3&7!<2?Q-$3)g34a@VEb;1NRg=Yni&1sKE"MJ_2=Xa2QfP%nl-lR4V/.[=d\i3lS/0^t9i!/Qf1D1b<'"/[Pd)2/>H
%9\=>V@bQ1.b`7BYq]:]d4VtGm=%S0%+#J5M$Z-%rnFb'u?q^CY(bW?NQf(Q1kfEkf7bC@Y@<66:'rp'T!\QZK9lb2dSKPTXm+YqK
%8YNr,Js%hHk=)[4E@T?N]P;L#@#Hh[!./luGa:cb^It1<:):?\\&7`DEc>*qce,7$;VS5rF_eoPd5KNQYY61IAO\J[cEr:`HHo\e
%N:\ruP5[jDd2m&_B)gT;*g7t]%A7Hu7/Nd%KIO:;;'P];8T!@IA7EiZa8/RMq>Lq5jOCp_m3>6kE8oXS[B-4H(B[kY)"Po-<jQRg
%h>#\B@GL&eSRMT%n&:Q@b[Tj:2Jdm20;[9MI!bag?0eFs]N@I^bbqb(M+6Y\-c&K2k:U/2]9!DFmZQcfk-!l[I%OESEB8;($+hb7
%?%OeTOi2=-P.#F5NMoH&dEC>,,h,)#GCVh<R:YX<eaG%02S">sG_'q`quS7;]>3U?$b;D^/eLcuQO2fbMc?:[O?mRJJomTrSlQP$
%&IalGV,lc^Ho3s/+k4lo'cC(66KTmHdbNs6CagIP?1"or',;CUIJVK-+&R'61Zr?UW]HNZ'/hY.b3nUR3d:7tc<Z.ik`/*12SC1J
%'<]ms/-r\JJI$QIXKncV^b$K<O@6&)AXIRe*B$sq<T#!OjM3.*:<P:?&s)nb]@*bT1];ZEe8q<TA`R')\mmf0)Sn]J):?gBgSO>K
%E,7a^<D>V#l=O2tk078i?N'`Fm@Sk&o7b@;0O?9LbEGY1A.KPD"HEtM+-.91_m!'!/F]7Yjj(t`Oj?uZQ:%.s9V3Y7QB`\qaPDK4
%R.9M\G4+.!O%Cf76!iNYeD:aNphc6,[m6t2bt4&Z%]@DhG$')*8sXH3@`@l:/8?K_PXOZ\%[n6MlW>*.>_URs(:\<J.O:9I<H;`G
%-:0/EJ)5dQU_%K4&-'Ll6WhOs0]RmRa3Cu@.Q8:c-f-1R8Rc.1C9#FkX'<mSG81#^j1OqQ@)L0'e0!-=b@!TIE5t60[!o1tr&Vuu
%quR8[KMPr9"-huDIf?MB.K3$@c?8!7ZdA]V$a.N:qnOfHDr,mQ:BFUIIsgkd+0U.bn_IP)og0dgY6jg.@(t.3CpL):UoQ1rp[tQ+
%)sLZWbDJr"Gh1/bHWT*GL@W%IG1nm`0O57[E5cF*R$J0o,R%f$(_[\ml&IT*D%$<c:86&Pgd`!1)W-@fZ&TAGNN!RM9bUg5&1Jfk
%;0I;(7J1L/X@;P'pfqn@?$tEQ@PWVkiIlL47Nk3uCP+3n,/U*+_j!SR`<e!;,+h,lar*_rp@8RRlW)nBF;*)qDm'Flc;7RYIlF1c
%+c#iWFTZK9Vm^-!oT-UhX1Q'EM5=okF@V0XgWfpc\2%I835c6'no7AAr.qk=mIE,:+uQ?U*S\#g@Wjn-P;]pS]J?/6kW2K"RV43h
%NQH;"?ece]<lfaa_s$g(S1PH+ZN57.q/"F`C=GBi/8#>r2`e[gI39pXFO(9:fg<mN%3P79_rHV=e%^*7>[S%eH!r)F<jj.O:#G:X
%+!pION[9Y.;ZVAdT&fV-oMtZFDr5rTD*-Udmk;Ah@>rfsnP\goOrRd[H^F"/.ju_B+n&FQp=HBMj;+kmr\\Mr("V12'LbPKFr4cq
%/UPtu?T6VW.f4QP`\MU&'Z->7:+a*UOS9Tp9V5o0mSf8VrMuI841<"r>9Q;$YiuO^XaYPmRea!^VV$N=Bo'm@+<t5X\ZKmHN5+CF
%K8C4^1umOJ=a)QV:@r-P:u<n;'V?AJKFBj)Hs7;%AHoPj-9L`se4p1LQ#<t_GrK,KLHpSHQs'a%_MmH_e%nnV*7\m%<N_';[P8.[
%jf)"4S?Ui-W1,g4kb?-I7uQEA/c6HRW2563W$j/T8BKgf[E>7N29%F.)KVt/&aJ3T9uFP5VF\(li=[ma)5W`-nW#Sd+,7@["?K3C
%E'fs<;-2\g8Z_@u/I4"P/oF:E.Z&Eq'r=k`Wu#E:T=n-N9:\V;/9rZeYEeJ,F]t+ph6,5ZnXP/C%1Z(a2t!Z"]X`Cdn]fTKI=1ef
%`M$o^k;@5P"eYbQc:W?'W?k4b2>l=Ji6JrcE:,i>k:Hqt2p6Ok^UiE>3BtAh=?(LE^^FX@'^Jg\EHR?jZ._Qe$[h6n;klRf=SrO&
%/(rKoZ(>K[%$$)F-k=%WQ3_:3UOX(8Vqn_NS;`N%XcEhVW)=0V*850VN3.bW;0U_.]'Y0Y*G7&!s4`RF3%&sV/$>FaI3^sbjSI>o
%[!Sd9Z\W$9cbrb>J:b;hNN),PqB;F]YZc7;(N%)K+ea7n-u$M.0[jg<!gXE&-65aXe>.tX]gbUkiWO>L](=;-cX$(d&jP\BZq?`2
%8it.O!6+*N&q*?#iRDDLXXns[/#Iic'nB_G$.JNENL&:6P]&'a)Pul]aLU&&3A<=YW<O>n;`]/FbT/("#cS;"ma3aZm^\9HT]?W#
%A"^):*#8gkM1OfE95(&+</,,ufqVu?Eg0!HQ\!RC&/ahNM5;[R;D!m1WjE%_7pZ:bQ8[9$p4bGUBqZ,o`LU_j@0\0H8_uKpl&Jh)
%2nNWMig*$Kb'<9s7IUEk7k_Om)ZE])8_U.4J0P*[==-lUf=@7Y11$6gNros17PQZ@b%Mm*9&[0Ak[8+6??:!7]Om2[n+U$d'"`OI
%S\&0V((H+i\*q(]HfZlEO!sa<pMs'\_==oKXtd48lpsG1e6kV.*;bA-H9l(hnDkh3<,sihq^-*#B([M`Y\in45'rg@/%3;m!MSS.
%N4ljW\P$XCNSoG_##]:!2*p#U5QQC=!'LKa@J8-[!c__c]OiRV&(N>W8:qfE4u:X2$q42ND:lYsimP61Kf%RH7_2%<2U#n@idZM:
%0((&G[O!RP2?T^a4"6I&Xg5$i9b3f2q4jmWFBjMILDQ*;BEL%q:$?JZXldWu@f!$F.IKn(hS&-S1sWf\r%NS5/W-OsR.N:qqV-NP
%GSsMkd*$0Z)R[QFM2S4"4Sn$\9A*,g59L&0@4iEo+S?[e0QZq7,kK!'gSClKLEp3n,JF1E]hm0]_N!hP3KZme^``U1l$F<n_1gAl
%EMX8bf'AEmmoR$8`>)Tcr1S;P[IsV[!mB-okf)cI]mB+jo/m3ks8;$Qj+e"DJ'%RcT+@-qYjR(K"jZ,>'Xocj>"2(T<KKUm]YfKE
%JAS<ROMhrMlK&2^S`M/U?*f>Oo_r.SCc8M\5i0RTl6M5pn1;ITiK?]p3d_(PD%3nL&+ekf%U2P+3;4pMJV07IZ1(5#7bu.+2o0P&
%=1D>Z6uZ(@T81OW_`STt7@dtCh-+,#pOQ,5MJmWXCh0;j\pO$UDm+%Bgra@#U.I[BY6WKKQ'@dNSR4FqF=?ao\ZL1/:.i?(n0]\M
%>9DS!QgaLQe.l1rP*7t<(hpi>V3bJFQJH>RUe[=c:NZ&*ml5N"bY]sc1!M7HL_$#+q;`tSeL&QKf1$i_oP<)e/$-:Xd=a>dQVhqR
%Z:E11Fb:^4Z?NS7gc_n*j7hREeC=0Hlh\..b3XHD[<h=Z-TjGfg4&T%1rjGtqD'V^M9fZtQN>hO^PX>8hd1+`rq>&WX=6lK++UI7
%J8t76o:51q@(qT)r<OD89StM:!`981:9TPj"rnq1Eeb%_Wr3"ZG&%:COH-XA!f(OMT=<VF#dk79\j6rp=WomSe2`.;]s&_IEq8<;
%Nm9]N+#"5.XHXeS8D5rDic\6pSO]iTUH>5U5=d;VeUD#Z5;8DsT;A1Sal1`PReM_5h\pa7f_*DVL$]GI^uX]'7eBQNWS&PgUe+'O
%Z5M\fPJiai+f($s$VZ6`F-@4\(Ns&HW3E7#P4PT/K:GR]nq+pi8>8]kMj4Z?W<9$7L@%ban$jW_$V%,N_@9j9]B4Qb5lC0n&-n/Z
%BD4^Y:3lTkm2^Z]`BTIiif!&H![ko&f;0lkjYb]0V[GBCpkGY6bKDM*Ta<Y,ZfrQL3XX]H\PVt^/Xt#E-;Hcp\"F'FfeQPN7jnHs
%L0ecIjgJ5?+6.r6khR\>L<DCuBnOLf`ji.oD-&73R*=+'@?M'B=r)J;s!W:j()GBWP/MGB"rY:0\Ek16&XAt%B_FteiLE?Y1MQHc
%HmFI6qnsa7Ck':L'&,IJ.boR8orEu'at!t/(+@P$eVi]>oCIf(^8eZ%rcU1MKn\KTK:h'KCd6(6hA*G1rouDoDCU"bbe;4O0$Gpf
%mMJ\R9;oV`paMDkS8bU1oXMs*Z(-0[PrD;'!`PiiERT7\2#ZKH;]dPn]e>W<P%<h\UJWYD`.%$UQsk]U'+@*?G)%.0==J3WT#97G
%bAfFHCABCGOf=BY3b9%AVsIqdmUIo$c<88GH]STp>9qnCg1RVpNk%C3MMdnd<8ianjFme^q)-WjDp>gSog"S$6JV(ZJHgJf"s\@;
%>%L%O'S+:E)$VE67nL[&Xf8/_,;3bjPP:K,K@e`3*+G'H(f)g&`fX;lA^u<r=Zj9.?*:smM,)StU<Yus2I#<4i*SFTn,1)B:VOG5
%4nh#4AAM/>Rbb=8h+k)ab89n+APKXBH4dY+0Uj)*8FM(\d7I+%N>>:)qI?=t$(/ZAM08NRfRX[u'nt^B\j-o[\,qLFd"G,Jg0D)?
%Cid9YUl^E_c5ZV.45WMMQtk%b9;G9$-@>4gmd6B%`"*'5)/)HbA0,:]qX)7:$ig(j5+RB\Apfm!C*G_j[<])9*nh5TQ<,6PQ%Wj\
%2ML)Q7W*SH`H6":TPH\K?b;N&:PNcLX%uKRlV'G@cW?`U#ghKCW!KOmgT++'f;Lub&oN3I'l8HO6]d-8_s/ttU_W.sT5PqF6Hao$
%_hp^]'fQ6C2GRg0^4Gb>\>DPF5'79VSkKt3P<!nZYZ;glS(q$-]&*auZRFK'/<]Lo*lN4/mNQQE1,Z:s$M_:a_:%^2.sK?=2-g[_
%:OSS7_=k'W0!M]S!^BcY!6GU7l`m$7X<T&X(4u$^&*B4W8c^!ah+5[CaBIVFON[(=E1'8KV?tb[[Grs'idc)?cpu>GQgq0Xnd(E;
%;q$&lLpla<i(Hhmg=_PD7bdL#*JPVG#]ahg4%=Iej7WZH_9qgT`bfdr87KSD#HNaPh<tP(;RHqtNP_-Y8^n@&AM(\ZkqF3e,4"l0
%a+p=RPmC_kh9YLe)VKh:Dk(rF=r4icnb>?oXDsr&P4Vl^Hn%sXl#9K&iGgA!doRWNR+YVPo$mi[EW9$c3i@u.UEkf$Z`qtaq"o9U
%];pGWE'.I:"X*h\cN!J/!BEfWS*SLH>VaJOh;X2RY]66uhfju!8eIiXdLCLL&RlRsZRJ_kU^pF>P/0@tUm+anbX(R?j'k'I!7U'#
%$sg.g/$*HmJh?=(1:+WYZ,jcCO!nT$h?LLo_]4PJHu%JL,42"_$o9LLVE1mKffJ\uT&\<\$HR:*me1[sY)p9T!_DO@G5NqnQsjH6
%#Iq,I1\O^XM4\PDD_#FIAEUnSDW0;Y;t0AW$N<8<@"TpG8,#m5QD/a1=.mj^QjpI*CAN.M>ji>7ijmf(CrRo]&TikWELQCnDEKS9
%3OH>faTl)#c-!GY[V+lsekVGu<73Csm+g-^%&9PLnP4YXf$\CT-aDq(F&=lj2NE4T[XW?SSsosI!Fg17YYlR/Wei]Mj)8MK.oV;:
%L<mCLa$-sOnNKA2<G"!J<+p\->AJdg;Q+ONhN+pO2Ar=<<"_:DC--%dB1+KY@X5aJH([_R/L:PjhpnT#gM.C"U+7uf;Y'7^j6g!W
%Xm.K>hVf>tZWa"NQ,Ja7dK4P]FE]gsV(+Xp6PC2B#2rPb0YYXPAAZ,W^S&lfl7EjTVQe[1`foW%RjQOF@"RLDFY+A@eS2q'%lf1L
%T-3ju`jI[ee8;>_D"A^fM\.">74cP8H9ifhYsbP8Po/`G4OAE"Ati\^_S(T`[#aOdr#`iA`9]F>rP%7KSGcI)V%L7WK4kTh(=T;S
%J]-PrKB2I?Og_M/:5#ZW`!/p%quLCu/O.n/QVoES6WF!M^hUo_-8alSUB[#!l*kd<XJiX_f!E_jZ,=t(Am",0.4MY6PN!Ldgt79S
%P@Rff:fCuO+?qd.9"k946sW/31mX1*mSMPO"9pAFqB_KI:oV8j8Xq<<ZO/7PamMJ2e@&LjRB*%.nq%MuN*:4:;N3(3VpMa*DrKQ(
%FZNLY?N(I<"C?]1Gm3jsb9G&`1(OVK^Ykt$"3Y]@nA_u4RoFR>-c6HRWLc!r*MQrVVqY5mae'SUcqfCqp#?9XCLJg%BM(MH;-H%H
%/>FA^9@>q3i&Z6IY"C2pcD.SifdKQ>'M_33N]lcA<,JY-7K^X:+-L`an9o[j#8S$/4]=#o&+taR(*01)(@E2EVaLLOAUbe'E.sJB
%]J85>@Z2U/q\QQW(oBG+LHFtsBIm@2G\YL9A&=<#[&&AT1$!''rTpK"Y0lfICj12T<0<pQZn'rEOmR\bVQHnA?ES['QgH@l@&mkF
%$aq''dGiP4bDNb24)Lqc%r0badb'g'YM.c+e)j*5^@cZ"2E3\3.4e;VIBZ*FWHQuJl&HtMBhR9jE:9G\*B!6sgqUMUB0FP41tM\^
%+5VElF8;RbBA`G'r1tCq0s]Gs8BPJ)2((f+\#3qT.p6"qMus;`Ju\;lYjd6Vd`<'iQP-3b#\PCs2U@eLWLK@+BE(@.B/0-R0l'L1
%7XDemRLKK4WM?D)j&CBR,He`O\ZtQqkEk&?o7k:WFH&C1,YH/IkKDG_D=M=-M,P!g!,nS<$W&OB]#RaZKp7t.&AkCs#eoFr*_EIP
%.]WHKoR<lu[-h?pd9(@qGRF6X%>DLHUh^I<0W2?F63Z?u2bo5-MU:8a(Wd=!+bY8qCD(Lp+nAL+#hi>n44pC-.\a6Gi.V_6DmGf8
%:3.Q<-/:A5:mWHeCEL$KMVYn8_C5ISjIou>V-IFMiNu/MU]A7]AO0jM,iL0/">(BifQOfBrC+4!>8?C#H/p)4B\T=H*`LF]FhHKl
%X*Mj+55oMFW>eCN]$$Yd(T0N.EJb4Nl8ohKL4_9=W1E:sftH^\otg=UqR-QKoE=uY(>P_Io$%Xl"F]WGW,hfiWMhN;?I[s"7#$'u
%$Z==3DsuL.rdYr7dMG8u0R=J6)Y1`)OeBiUY+W\,B<Mj[2ring5fufn]t4'j.g1hdH&"nK@^TTi'f6hY_rL"#/0k[lhcn=QS/E.3
%86-VuZipEsK^Q_g_LLI=rrUpdW-!^:h1/V#4P0_l8-6KMQ/pqf'\cIY"&g7K&d;*aEN$jQl^F'E8Masna'7lT1q??!')go5?guo@
%`P-q$05A)Yk<,c8&ek#+co<Cm><8WDZ;HNe_7l5FYU0sc-;7k4dl-LJ`).RjFa"5jQ)lj"Ln@Lj)lN[8<_T8r,k]P?:d<Dugp/ac
%lJ`b;_*]4[G74:j!3JiBKbJ2CNDolBTUeQg8Eus]TKZeZ:/*u2,GV29_U=OZbeS=n,Ambu:$H4q(,Q0NUW'GgM]kHJY(,sm8n[4b
%MnJBcZJIsfK!OWB=aLjpY=4W/:,Nj9=.h)+:)c/03)C*o5u5r$`1/7sY,HVgJMC4[eDT-#&(jlC]N@\[-tIhl[ZC7B;jkA.Fe=9T
%#Wgh9USI$,>YF@i[ro4OPg$7>CXmR#*WIG9=^$.qSH`E>g[N!/3`Hmt"nqJ"0"YLVWZft]8@>rW7VbVmTJ?fDCbjac>0FHmP?Rd&
%"fXU"4^8_e9'pen3/R.[:"Gu5+ph+)YBHp[gnji3EHC*AOHM_G$#ui#V%fPq*.X7\[q())H*C3l9OM1>:<:_#JrR925Z3e^X#;e2
%Ri:m6[VQpS!U%f;D6eGm%kQ-B0Y2@SB[n<d6^*QoNK-nqa:.H`:asNF)NU&5Qp@pn74k%P*RdakSd&r1_Um_K*pD+e8$CAW$&r5a
%8^%*BMhJN,#/a(_&X.>6Zn`Y8KNU)"Z]Y-H7[PR"Pn6[X,:kP/iN5):5/IpAG\`*e4Mk4ZV%h4/&a"s#B^cY[,7LN1W^Q.YNNc5-
%abE!rG_8BM0[&M6nDlit:SnXW_b%s9B8=NpBTZ8-!S,Q;R&):Fmph:i8oUqoZ(t*R7E8L[1m+j1ToUp3`iQ6V(h,D(Kk2qrkST5C
%2C@2?d_nHVc9"iDOtgR\/kW#*8n6(Xg?2A.[?:`^B3h<-^[?O&5ODZnmi^A]Qu_U`pfUkpb=1!#hd%4A9(&u%j5jQZOg5iHGHdiM
%B.S=uO4Y0V`k'2j]>C`/JVbZd9kpDXUFbdh?2Q[aq0nXI9S#og:#i%ic=.!d_G^W$e7nDKd;n932Hk(5F(Cp:ICOK3o3'go2A9`F
%B0`Q3@BmV15:6qt%+n"&cr*ZqT10$kTJIiRAc7<,ac)RPJlOgVWgPXKA\EUhpYNmJCc"K9:TnsuUi"6n_Xa#`ZtW]Icl&":,j/m"
%#$tOA<aEkIB$R&9W"q(Z\p(F?1:rs0)<3!\"F;=m&h@-e+.&\/=$-2/3)c.[p8hTg:.D>]a1$!$qu5u\$^]qGqrKEM)Jh3C'NKi/
%iJ+h3gHe9/3CQ,/CP<,OF@[.P;nNVM=$i5eG'`!#D+L/oQoB4/=u>a2K9tUK"=?b%PEr#_2R_\H:%ff"0d>GPrk35h*(s7>=Z/>-
%fTFX9n)j1`^I/$HY+NJ,^0;ptFsr:agPW#8,dANBJ4-M&7J5:V4qN#ngb-9aAEJ\L'?TPuALYj5ZGO+3KWU#U6T^]XfGo:7+KCI*
%r/&lO"HBC_p:PAc`sP%C*+'WSFrA=Dc/Y07*P!?MLE873:MW#Y2[Jm4/p>EN(6`t_j*4C1*okad`j*NqdI2Kia>im_EU5XE\Dt33
%r'$-\DoVJApX&"[*le?.j&hIT*-Xrn?3olL%*LUO]m"#L/7Y9r_Pa[R<_N.#*%RiF=CE5j\9d-*q`9c3m#'o[(Ag5>s1\=$p>am<
%=5WrOm@->RrHN%0'gd6&O^?reM-%j"p;Vn8.*tiIeR2L!OuT&40'H,/Gk+g4c0V7'WeKqAQJl98o]N>SU%Z<i5<M=[0@-h!QGR@)
%I9!A`3[?PBZFC@=]q6$.^\X[MIU=q_5Hc`/pp(me>Xn-WjFu_O@\1@=c".VQ\c8(<>#0.I\A=2).`X,=aB?6JLTnVHo[RpuqlE"r
%d0t'7WaFQdgM,?*>9LJCSZltpA_XrfpR:oYd](lOm[^9HEn3^G9qSIpQ3_"1CIfVm/,a-QG*$R+Cf/mN?c*(0B\CNn5ad`]D"8X`
%AK,d/2enY^Fb<ttZ?NS7SGnbo8ifR*,VCa&>YJ!mB8J[n%!&i,^SVH`>"4?6lLJu4/u*6*QoW]%L-.G(kJrUGF%0sUDRbJg&Nb*q
%ZfE<Wn6'bbf+jlPOt(f,eE)CsarXM\QT\6%Np7BuP!)]Kb>NTYLfYC*G_="5Q4mnU?Y,;%ZH$&"itj=pjO90?qlf@P>t(D=4f#U1
%*i]18`QP?g#Q&0RfE07!U6%tX".Q-Fe--:240GlEdb1lI];t#!Y3.e6]?2/rFm1''<VAshclfX].XSBKpk3Krfg?pJ*X4Mq(TIGI
%Q.sJbp/!e3G!%l^p;lEuC?8p6NtR.7H>)dlHSA)lp.0(d4d+Q-0+t9O.QpJXAX'=&a&KBmh-g-#NfnJ8S9o.Lo!q8hB2NCBk9%Ef
%GC0"45('rsNA@3?#0P+H#O*&0GH=h?(SfuqEgK)0\SK,iR69(Sn8Z7[E7bhk)UOOHJK-\T9,doQ#TsRY/.!;.F3cKM"HFQa3ike%
%$7EPMT(0oh5g*4:!Z2`kf84rXH50dqP^bjMUCq`_Y$9j-gA2hU0^9A7>3\Hem,puk>;lIWHKfdZ/&&m[aM,P]pbD9;$ab;bp)bT`
%rM/mrH@ED`0%+)6/&,]k\GKGj5O2hHX7imeQI0RiHi<*o?euhgr;#=[kpcX*%8B49.$\*mI#hg'@BnIKN_"a/WQUaKO(#,>!#;aK
%6`lB>05Zo592]mH(l>Ch/.WCBD,L_Agd:>Cna9'R'dnlH(#Ft2S8+J97U8S"Z7?s.X'Gsd'Ob9"$K"GmW9i=3TSKIA.@[K*"-sX5
%8M:ocZ8k\p:g$9c4EP>!P%s6,;-W/+g?nucDJbPs;j-_(ObU",IB_tHSU5NCl]Dm4WOsWAH<]#>jd_\\9OR`O+cEL616&\48pO7a
%Q4p>5fq_C@%?g"mHW<oW7(d$?[J2b=aLL@LB7UfB23h4N,*-.Xoe%\jZ30;>Z)q7kHHMPp?5u%6L*7EaXjAsI8Q)OS(]&Lb0IE>_
%9<cT6EscX+B#YP8ma-82F6b[i%jl.HP%(mJPt:1aFLsJi0bGk+3hJp.<^_q#!dg.CY'uF:n>^1#P`#0=>NO,Z`]C$)D(cdQA$@=i
%g)r9m(rm5,HA`@JSc"*kXDnMUOqo+MXqnrl<d<nfOi/:&TQZg[goL/RiD)hPH>Xu'\cD_-(Vk+Dl9AZ3AN9Tr3@\/<q)p*/./kG;
%Gnj@9%G\DM\LtT_BE+DTM^V-6L;=$[[5AX1c*/7@#K>1T-.2'tP%Lt=aTtoF+N7JNb6VALq'h"oU"=&2I,SH9[?lUROgIM0eM\bP
%ig,P3Mr([8m')*Q7NSe&"ERTGDE+SGG6&J%`KDQnQ43=h%O4KZ#,(Ze34)CsP8(ldA"]8Lq/ROQK6)n/6r(-ee9F'\'Ne+gRRRY6
%Va[(?#/JZ83O/+CLM'2.22qbf/1h/`@eL;TZS=?mMZOj+Lrp0iN#8H,h)n:AiP+]\IZm/0:p(\`dGWKl\b$4d.=\b-E:4-]mU9Rk
%]#m$OE)5V)qA%m%i1."m')qFGnIJ_$r8GQjMk'hMj#&MsVD$jE$_48]QZa9b;hDiiBsTH>Ggg([o&3DDP<U8WIl<_W?m6PZ6l`c?
%q/S5eC+=o"4h3kRk]nmlG9K1Q7`:n,UgOeV4U\<#_-K47I8nikDMF[kMO^moB$:uLfb#SM36Rs-!f;-7.1V6e.<&43KAe)i*I"\6
%[Q'KWcgM8-DC:4POgW]s35.^s]UP'l*7OV#OKS*c,"n8bh!cd]bq2)q6I1iS`T3jB_NH2"TOtEIP[]rIbZ*&a7e8%E>0Nj<gtil"
%Cc*HD-1o2\gi&:<rJ#4*ARm>+@aqqc6h9;+:6Up,9"q9N`n#`FaU)T50#7@JTBd5H[3^Zu!PQEZ3?p-T9u-+tLZ)7%P&@g_/8`TU
%A#%]oo&&,Y]AMK"-h52q;T8R':EMgV?2`p1s'2WqfCH\Rr%I`s,%:EU=`3G.i.1)'Uu!5ZD-s3u"Vqh/=G&ni=NC-'+pXl&/kit4
%UAUs-)3@-:rH\JbG(O,o(9tA;hm67faT/0_#>"jLrjpjq#=3:'PRkB@A^nECRi_/["ECEuiHWFZ63<e+hJS/O06p"q<Q)/6l#nWM
%0eJ3\QciMLoY`"CX(Nbf.j67q,PPo?A4QIEBY'g^dpjuqGZ(K$W0+k__@@@/OKlqR*E.-cM)1q24Y>^9VJ.m?_'g<upITg;7QI^c
%TVjAud1#5[cNTB.`EpY\q-AbF`0lf1;TU6*`?%(VX2\Ug\j=+!,]n3<a"37#IC<2H6P(nh)_@nNgXOq:Be57,MeX!9'm6..+2Wb:
%oG618V\HXYE]buj`Q>Tk'1lL_5]C\CD=_Jr>I@W%Ah$2!<]8"R%#&.;qp=a-.Ftr(@j<!X9:NgY`n-l]FYRYA]!@'.r6Ja)0s"Qt
%DuE:"BX8sEY7=4DcRLQLU=sG4K-iH.[Dl@[.#\_dFO]<A/5]pS.))7l1lOR,^4La<qkaBSNQk\!mEW<BY`fV7.p-eAdIoXqaaim@
%eD[2@VJ\2(Y)7eAQ_BFP?I'Z?4BKPgAVZiU]]BnJELamQZ_#>h\Mpn>%J,.G<DV9(os27hbX"?Aj!-YuGg-XiEun#$2&A&10ZM0g
%'\\?qqS4\iZUF(qQ\\.<J)9a^&u)[e4$Ku8"'dCTBY!.D?NIWC31O>s1j55\m]<)rOC\2.;Tc,_%bG8F(53,'kAJgON"3qS>RX\i
%Oo6f]nMn+sb&)sMg8B7*`SDtdP*s50pDXEjj?5/8BR+loe'RbgmSAeY5qZCZlEqTr\%9?.X5EJQrkcDFiVc8E3P%mHe_DhHW([EO
%4XMmNnag@r^O!<B@,"=jb^.#BlgsoFeCC;Oi9!X!lIAEN.+!Ok/fZKXr,0P^I"ST0BPc!BYD)m(=`0r.j(^Y'?:>K^/<)ZE1CW.-
%0M<B-/X9eq7TC7*]":_Ye"d1ui1W.MX*f&@i^dQ%i<\1@?#[-4Y9qiX:)s@B\!H$5j]ZeW9Oe6OgVuLfZ1:a^MP,u\F#sgUWjU4*
%9G&1s0SK@?[$p9+$bSMA_Gm0U7h3+Va/s3ZW7</8BdE03*'.(iQc9u4L:)b:7>D$:YUq8bk9@fC,colpIUormjSd`S84-I@HlY5H
%/\V,Nc1*8iWj.64YN&B-N*jfg.X%254\,k^02/m!Jc?8WnVRDqZ>Y^`q5<`CKiu.$ZsjDJfU\$hJWV;G1)to\Fn.M,k-%CT@Lp'E
%^'-Wq?<t6HY>.FIKc7t<BeU`DAdj5#6bN5\=2mRH`$1q<[6_S?#!#lNs7BSG)VLD6iZb^r>TrVq!GUi%^HCU\d`NMMD[S")9l3a0
%gZ%^O!s*SP`NO,uS$r)Ma@V?JgQp[d)=#LP'i\^Zi"iTa#_af(XL_i/1+NmB<9$m=e;3sOhLd07rMQ*$7^aXL98!hX4Ong84FbkR
%V=b2R<6[u]HRO9))u6qe\9X5Fdcnkc]1u]4nE7uIK)Y9&Q`8?R+Upf$Th[8672-S2[mR&-dEX7OB;6TiK':!i!1DY*(QFCdi/5f;
%E<K/+.NRhJi</a)H`8BJqWQlLfI)(QFR;rIbr5l%n1lOWSg`\a+YSgG@;<`"$:-,8_PrMk0_#0eC4lZ:Lnl17H6ZV0JXg#lNPM;"
%"gmNRJ50dR,Hj!,2Fjb%CW$l<?J4pJK?-lL__XlAb[1MU.q'Xi!pOChC6^B#eGrkZIMd[6Yk\u63D*:*o3ms@j>(s95foP^>#AEQ
%b"G/`X[K&6KPLqY0t6\-pdYZj7?/;*p7[BY*T]$lqOja+V^$eJXoOG@38];i:!usu7Y=k6YA4JR6NKn-7E;'/.``D.3^.7cjb9""
%qY6jjPH)B8k9bWNbl.m_FAJ\>]62NjD]eE(]Y=di/t/%%Fa/bd-G:.@*Y4W'Cq"uF&i'>>l4)Sr]aJ?9s#mYU>WcRlng[:#rSGI4
%Z9b1Oh$@QX?.Oj#i^S\8Lc+3S,bnb8QKhqjiZR;g#A7HmW&p78gVN-EE^"A&.kb_cF#/A-&9W>Dd,O>pA&1Xn[]DMpq9dA9h'-=9
%J@*,[A/0\s\RhC0*4$VNjsfp8@#e;QPpUHM"a5SKVJG>_/63It)j,*JM^t,_a7JA-'>?J`-OOE5VrB"mIR)W!iaD3H'D+3(OY)T@
%>Of'ocH-W/TCL>X1MN7\+26D3cVA'>3+[>UmZ\kl0Ert6K\T]'QO;hT?+<n$<nE$MFl?Al3U%;s\V47*j]5YH;AX6$Kp-YuHRuX$
%HVW;,Ft6qcbZAFX^-9q.+`#]n)V:mRBD*%mnS%#>EW)oA/mF]jHqW@[T](Y?Nh[K5h/.+@#1l%ga^6Tb1#pXf-oG"-GY)%l[!E/L
%`,^ulA]#Xr?V7U>j/!D]-EP&(7lOUdpa<1"E#>'[s6=R8`+u:eJ5sAH]Vu3uEo&>mdGe:!9Xq6YgbM-L[f,')i3:C0jj20NI2[3e
%F6D+mE%Rn13uC`DGFWCk[8<VM6n%<?Z%Km)4R#hf%VEShK/G+&OcAJT_2MTB0SOWS!t%%O+$1<=_L+s?@L)d8S?nhg@*00P9)gKo
%6Q^21ICRpO82=O)/q%Fg;+PZJ*!3Z<Nf@quEA^<ONL5>XPNSRIlk,d?GP/#k?oos0E\gZE,>Hge40%J9\*OE*C6l&KK:SpG^[EdL
%EEg];gi7H59M0mS_@Q(!*RB[LAS/`_FX>_EYnZ.$fd?r$%FpdVL"N\,D"<g^EDB6MO[!\MSr,=aZ'LG'E)+\^o,5"nFQ_L+)e8C"
%T'>/U/TocFbDQ)k[?*,ZN8H%a(/Z+8MT?IDM/K$n8Z'dD;[VBr8+UW;QbP<7L*I)5f#3D@(++s`aDWH:JDp`+_aP^<WK0e_qfOMp
%L5Yo?Xnkkp?d/f0/Am/boKJ?`m#hPdoeBq*/77]I]08&V*1"fXH:/km2anWNFc]su#O!O*f>I.o>7'>=:1AXQ+(s_#HfgUNic2K.
%n<e![g"9FnJnLLcYLm)4kN'?bGJb*NdQMT7X7c%-]3sB"m]J_CXA^BS3[=:+2Pk:.;)aH4)b/<lHX]BKRSl)'W#J4UKb6Y:@!?qk
%1?+h;J1P[2e<P82/AWJ9&dhN=JjWa6N1ipq3O1po$-r---:*G[,mb%`R`$MR*3D2g+"C?#V-jV4/NkY8;9p&i@'X$h>Wi[#)8\_a
%Ea)&OK%f:o[$FLm!_@4pKHS&?C#9D@SV^9l#U6g]2jePTDH!\hli-(CQChCnl$bK3n?)NDDa&XEpA=;3pT)sZG.e<5=X&^c$U6iW
%-49+Y6p4I"PUhSD:Z50S7eh692X*U/bROj^[_d>4Ts3Y%c3`=NV&M#"=&,BQ2T;8%T6Hb$NFMd><7i[-TW6BnTqtg9^@%X<S'a](
%D!p3V!d!9M>a?^s#a^AA84aFY<#XGoI$tr_]Y=_=fn]&*ZV.GJ1.BG>9F(U[,osYVKpenTh[L"LZ7cHs8Eer4CbD&qE]e&>dV$3T
%Q^^LU=tbB7$b#Hamb/5tfiuS6RYd/_VB'!GFE3rI<gT-(%:ACTDft/W=nl#E^6Ot%Fi0QWiEP.-[BA/CiL?lD(G&$9>ZVCOZfU[T
%?1(6X*.NuRDg4$W._(O)[*^'817d]7Z:FO3MH=\'X!6sq5[q-'#R&FESUic<Hu5d./F!L6l77Y(L/A&`/>60;T'(/aPZlotBtBMN
%%t9dA4V,&I.#Hs*F'.*`:07kVRq&#2#^PONoL]B$W0>o#-FsYX>/G0O4C9id6V&3L??m[r^G5%Y=eb,c8/=XTkh<=A"Y]DjZZ1\B
%J2Y$ZY_8V*"=nn_U;\?^/FIqL8l_I7Ka1?c]Jf+p"cKP'i0B"7QkB^+M&XJ/:e@k1.*B2/=="]`cp5=ub'Gqbh+ht+V7n!Q=msBV
%92R]bPZ%.&CoOS9S2KL[H9X<dn"Y^e\&qj+"\%OScDM;pjLF?#c_T'S0Z6?K)LicIGc3G-4R+k,P(oKR$9\GYBuAW0OgaIX]m5,#
%hsWc-n`n_ES&BEJg=;\eYCZ=LOC$cW)9dWQZ;1<B"K8<#Td+Fbf^BCi+k$#hR8$1DabLSbQls(Xncank!lFhscO7WZ\"s0;l.>8O
%KY7o3]$FM\af)eV73+oA"8N3a#)3G`IjN\j=@$[$*(b!0q5FWM^([A9TX5R-L)T7dAZ.?mZ5nn$Tm8g?kPA(aje+kI1/l7MP?c]8
%T2aC8^nT]-jV9FP"S!hf"a(1GiN5'oi8;0`;qlT<KiPu)qZISjQCWoSNiV&=CbD&q1)"=ST(1fFDB.bQ^&6\=fX@-YCF;@@hALn_
%N!O2tl@omn_hbm46s[&F7b"7`Fi0$H@74B=&Jd8/o/K40HfAR%ANP5,eg+&]%*>a^Bm&o4TX]5Si)ZCBd*Y4pPJssm.%u'?Jm`U3
%"i)7A-B`^^5H]9ga^eD)Ust&.b0gD&ajl]c9^YV+H*KUI?B#9!#qKiNh%Cb%1:Fb:PN]HujT2iY`eJV!`Gf=l_XZ]`k7(a(ki]?1
%'emV2#HMAm1iRLLQ@]ej2/.rr!gRBXdS)8u)U%D;c*FpR(hZA9$S=Hcjtq/Dr^ugrFQ_)cHM^&e^dEnCEf-.*OA9NSFL.'<jZ3RA
%VNbY/oWXLIQ8i#09BF.!&RUK`3DEZfZ=[`\C@*+a9*oMOMDd@8)'.SG105I,'[k+P4tXI'=UOC&$sa3;/o6:$o:/=C88#u+f@]ca
%Vb%_tNgC[<B]^*ZO#YNW1FeO:!V<H1=@]u<#/'0(Nj^u<U?>X:96bL?6Lk2B#sFOPDE-0c:fW1VDBk=1D9mBEFRp-bcYMC^;GQ7f
%',2odrp9lr,Yt.-YN`X%$)$G%Zc7j1Go`1"V\^;H.P7R814^]M'8(NPo3GcWN1[K4kDA)Xfn,8njDEXSAF3,[K(\Jic-q:_kns4?
%l`NCH6>e2kiS*EYD%2mrs&?UPeNqG/T(KuijuhsFhb>fSMTE2,<38@<8lC06%jSRtIE<G@4Nb?KG?p=g!"t0YZ'1KCFK*\,doE<D
%j+X>bSY#6KmWa-RkO3nj?i.g3]+hdOE^tNR6[UTBp"T55hL>C9AqWO`e(O_Kpf/F(bX\7a1NW.q8\]]Jp7"ir5(6[_YYW"(HcCh(
%je"*2Xk7]W%l7ee%Sm0`4d]#8kZm-->bLOm#D/oE)]ntcM+el,4Z"IIk<&Wfb6tKer@@]T_,aZZb??65D9%rB\M&9<9Sq7M?crYc
%9P+54e%f9F%3Eg%SHRp1;>/ur_8EC'!L#cD6CXt$KnSIhNKa$6D8\`IZ7O9`FfH?lo/AJD3sKu$V@A.-YfLfN<7gm2+/FS[[;<&^
%Am)^DkS/';U4A;Q\[#GQ$<muj<&m@Z\#b<WmdAe@*Q48!6lt4)r0Y;tb_H&.3[Al%dG^Cnn#7MQH$62V%]$'0;U]E5!R!hN]&pUF
%-=Z%5!E"bP[E>JGY%]?'d/D8>'_5tcRf\eh\LEPdKJFpfcg9T>-M$-C=I*@]nta^V=`Fll1X[P#Kgf8<Mn%>KW>$],cG3RoRDh%:
%P[n]jZaeT?kiq&TLhi#MC3(3C\h&2'>ha2r2Jt$WGth_4]/1WA94]^aH-Q.fP&kMnk>lk&@?nGOm%i_i4W7+ZSC5mVi_o2;Qe1Te
%ZMj[Q#JTi4lALeVG0^82KKF@V%Z/71?0>?9F8`#<HAab\X'itKG[;W,a>L2),]d77]4FSMED@o$fQJbAAIE>*rH6>901K@(4U^oM
%HCYH077t'd@XH$-%/3.J9k'6e6R$V4^C"PtcQZTJCDMKHfaYC,HsL8)&D<XWbSUs^)89XQc%Y8_hqe:XmIBc"4-G)cSbADHY/V(e
%j:>^B[5su%j$'uuY4pUI(7*28'B>oKp>XW;RLQ]_]:<(JEW%c!ft*3dmY5n[B),WtMEU2&R9&j9QLT:K17g/0I!Q+Bp]^!Y_du!e
%&h\5XWb!<4COu?'KLP]!Y+l<P\Aj]?N9aZuEF$aMXqd+^3O!ei7MDY=4_iQOFb=!"HH(++.hU4ETQ/6I#2C$uo'VIak>HFbb0@:j
%"u;/(;!I.Aq5S%h%'R1uCbkM2J..XB23rW)=u+36T$O]"ndeEb.k)#oC"@MmR*%A&i-?o<F#)R!NpV(Y,+V8mM-;!N9+,'pb5=S%
%^N:7&A7ADKr`)Xo$dQLOl-*Vs@i=KS4AOotn>E7+2jSs<&D=J=J@aKs`1$ejQKZg=0"a2dkVtq7`*='H#iM..IXlEn-^KtHP7_LN
%c>rJoO)Nmi]t/L`LJM"OpCDb`:fo'?f0FXV82'GF+5U$]7207\jLai;Rc.cNW13GYf%9?G\0eX`BE-fT+;X%,2BAg$Sl8o>]ZS2_
%JCg.6SuVM\=bJ<XP(T\7puK+LLc(%F.0V]Q/`\#/HLa[dV$<O?TpoNUM7eZ73'?2H+*u@p\AQSVLFFA*ed_5QonqPue2C4TNI0d&
%8at2?ft2)l?4P."5*B;/?A&#c$Ll)\bms5Qb&Rk2e;8W=?;NhZVDp*op9Ka%UoK?em"6XJ<Yl_$f0kXE)iE[O@RHib</W*&O!h<f
%7GWkXH&?gm<0s(j"!)BuNEMdr"oK"gRb;=C7D1:Fa#u@g(EZ8,S5`sZ4Yah_ka#KVf:l@,V3%0i#;=I[W18"spt]=@+]c-M4M.G1
%U'6HpQ?"JpNgMC[Lkb/!"U?$KDon>g9<q#,34H*BMirrbZo.W#DZ$2'#P"4q=o6.?hr(7Z\rOt:iaGUs4fUq@;[4,d_0B@LIW!3_
%4UI_Ip>CG8qfM_U\*pO"p"eHCYr`-P[GZG[CSJXA/M6;+/r't7csokEBPcrIYjGLj,'d)JC_9HiNR0\b[)pT(<`:KB8S@*OS2iS&
%BiG&i&U4Hh0scMp>_Ld,TTD/&K1YN]RWcST3Xl6o*4U7;>UpX?1Ef\s;G=nAh;#)YXl!hEjj%"%X^"d'/el@qH*=jk<,9h!YnChi
%5BqlA+[K?d:Pk[Uk!E-"Os^uhSR!*X.:B,n]*p\6(tle)ZGNJ6_:6ESodQ6.\ZgFOOj'bFO>aE#.r3nbS_[u*WI12\:SBIshO.;O
%HrOaMocs]Dj^,>nio@%%kI6<GGi#KE8pjmOkPWEhE(]H`3S-18jP9/^n%O;CT?"EBIsX;lq07+_cPAurX[k+t<a$J5[UET\R6=24
%J&llhL7KDLjWPoo%igmWTM83akg<>eaPk\ogenBP8;aJ7Y#7muEue]=0rX:reft%#Na8^*\_s^)C(OClhX%>4W]YG@Q;M\hSPSE2
%=X:qnbd+YrBW0^K/(A7Rk>dCE/S++iRqe/L5(A$,Ll?D(,Z<_.2ca%*KOHXiISIs,fR>@KnKgT/8PqBV+>a-U`>.bh,`su^e'<ed
%[i%cVW9+RZ4opc#bp`sB-o_mU\ROR$a`(qBf]*$YSjKej\Al(.M!Q'!,`lsW[,_s2^$-djE&,8c/Iga`4&eMJ;G`g(9.3Cjg&i9r
%#H=?LF]AiSGmK3L%7;8i;_f&%]^UL+"*6sn+b3s8ch0ZThL%6Pa52UW"ltl^1lPl`7)9>V52I_"[k!UXhoHalMf@X%DtZa0!`m.:
%#:q\^Fi_4OKX$?/bcq.o)S>;%"f-K\Lo.O()OA`V5an%$1bBm0OI3jI7lsWIs6RF%GMK`k-i+/G47MY6V=J#$k093iQPjtU:RA!J
%e<>p:;VO("[!\pMo(^sHr*mM5cQnpX,"5D#F\5O9rWoTV5QHTD7pJZkYWK[_)bZ?QB1J>EL8:AoBD0uG`8"*R0^M7@7K2D"lm!de
%5B+;HM&c;+?#f0Y)4:XBS:O>!qGM?s9;k]@V.cn4B5[=O4Rs*%[sE+9pf?@dQ%Gi@[b:[8N4@t'Ok!V(00N>?4]60OK\sK?bPNBb
%^AZNAn%\o%jDuUj]cBWsqI"U(NsZ+6MFma^=C-$Tne?o>h<GTC(iXF[d&^2^\5F0h1%5mBk0]aS!@Nd&W9t:^=>euAn#rpuV^gqk
%q`"EHJ,]G>hgN05e*fO!qEI/q(0K&IIicl1]6>@so_ZB4I@+C!R;;Sope2,hoi'(=pjg:9#E0"FkQb4>hQVXV8aPb,OU&>3R[YF^
%oO_nub#Xii;pFlUK,pkq?`*f>!d^F,Nb%TTW-WTi82'@Y((is4jm:L:MNcQGG*IcQ!AjZ\jN+fn6C&^Pk-E'P'%`qNPt_4^B>:F?
%cc(1K8STnO@E5lQ>HseDC#`0Yph83M2bSYpZmItr<A*AM*=Je91[U^(UXMYhk]KT@SJBj72jRVr8Ju%-g&lm.pE5O.Y,A4W9-q%\
%ba!9@\nZ#a1sljRrHYa6^mTs/G=!RG/juosiN`>US)7pahq<B[#@c2Nk:Lo3UE6sPd3S(*Y+,/jGM8Yc)7<3p`'g$!l,oUf;E*EE
%MU2?a2!\B85O:V*C?`uG?`U'"K-+842op&O;.pIgGOA#9KM0`,,:.Q$?#U.hhX^rilt7duZ):WNi*^bk:8'g:\f4J/1O^cg^l5<!
%BCum"[rEmUqCqU:Ho^BIhVW^.a*[))OE>sE0->YUICJ*udE?DoaG1l;r;K3fScAE@Hs]'eq!#]qe&Q=U'AC3Lq"3b<gBU2)6PZH@
%,u`sdP0$j$F._2D7C7u)k`gL]qT^^!7h"2IGk'RGIs^qg&"e<>\oCL&X]CVQW8hbED9B3kHRC`'Hqnb-BZLa2kI_b=pXI312Kd_0
%/(4>Ad-9X%PiWmHiLfhXN;rc0,\(JgT$`dT%et@%7=+:q\$4qC*ffkgJ,]9"reKsgA4[;@4U+D;X(guXS(9T_5D:>Q=h&s3$f&RY
%cK_n[A,A7Pkd8?ucYBOjfb:pDBl3ZNZF"8p1)NluCTO.\%;DVlM:kG`#^Yif,QG:>%jU-q5OA#rM"h[keMQU1U7T;_IaK*UVno5f
%$#`5/;N-OV%gtP'!<9^j&/U(nj7oD*i7b%&)\*N(Nrdr)@-BD_G>mW%le9(F+"`$**KDcl8W\MSDgqKQM.[=7GY8mWmhX]T,SqFo
%V]AM<XkEsdqD-I@>9U&Da\N3?m7.Kt1l/mN^LA]51r%Xh&r1G]1VOa'b@T.-2gs5b.JDQjkIE'b-YV>R_ph7]pJAO#.W.o&oA>k*
%IpI-*''Ri7kpX`i$bMIDZ&6FT3>BO0M:+7nc2Q5R/*dNl/jjne%H2l-^@OGXM;,ku:Xg>;&k@=h;<,WWcAD0:l8jo]eS"d2]W9?*
%NC7Ta)#.[/je=Hr,VJ=a=-X<\=1MG"p/epiUHg_N&P'4ek?aPYYO/5I]QnmI4-Ng(cg@C@i1f&<<)f-ESW9;lreFIa,_XHT(?A*W
%+lDM(.XXdFB00N"`W#e8*n&S!k:taTUiH"Y%O7%u_):ZUl2.N"huEKCq]E#sW<';UoTkWr]%=I&#CbDV7\1ne4;^h$qiWC$4ikJm
%E(:[t7i$5%kkKeABHD,)0540&5,#J$TTkKZiZF:)9_jV&i7Uu1j;-B.n[YdS?H`#3F4<`f2L'*gpLQOr-8IkLai31X@H>sq%km+N
%<W#o/MB6_;5M?c>.fnP3X3c]tIG*PDQ(eN-PW<0!/_>3mgk2=kH^sriri.CC'RtZMME]o'Ps+McV>JEDh/K9YMfTkAXMU8tSCA^b
%=LD^l];sO)q9<Gj1u4&1<l/8`4IVK&ktLUliJjLrdX@I[>WM.[o]6#%m]<7`CZ9@ol-C=*Eb_:=Q/ZhoXVV=3L#A!!>4tp.iS,2(
%0VdU:.$SDU.&:HJq$bruAb"X,Iu<DJ8+,4+/)kPJ.CQXWO;GH(3NOT^r!oGj3L+^0?J'j_QK42S?D-?>%]@DN<Mg=cjHn0ZCp\b+
%_r/*m>jYqEg-NMK%[@FV4&5Z,iMhC59+((>N>t1^'lh&77<B>.$;Y!`;8I^57(m(_Mk+\WT/XFulAI<oo/Ojm'W>ScMOaUoUD<YD
%;U:Au/GB"oIpO0/TD9YXfi,'@?h?_FlZu&`p#c88^*=\T"*\)0\*`Df>i:P'ES@YH;gRt2pFu<*Si?^bK>"b,c&mL"hWDCJ<;#)`
%G&9mR_XC0<HISt79#+e<?"Kq1#kGpm3ZD+aO?LPfa%787,hNqK<WTLZT!W-%dAC"M<o%=k_H_%64&_'h(3nrScGVOsG5k\$*__XY
%YXJ'CF8<<65CRFuFE0?:5*uk^f69EF(i=X@F?@=V`J2]VPJnPS$(EJSRmg:&`J=c-]Gs5@_jNk,%`Mt9DT4nY3$+M<1fk,q2W9?e
%Y2g@c:*h]>d;gNUii'+e:$iP*\<QkG:GXO*T:uab^QRp]QZJUXYd"j1]+&>_KqdBkd<;3s]>:fmMRFJHZjT=7M5&fmd;FU"^+P;W
%gc.HVHG=8!C44^m\D(m0,E"Y-&iNn02TrZdUp+_F%Gkt2*(6'AX;_7i#ogN2b+1GF#&cGT'XZZ"fbjM-"tqUj^<gF*:OMoMC^a+J
%0arq_)p3717D"DNm6]3DK4d+WD)[\n(Q*AL7D"8Jh$22R>nh_?(nPDNJB&o*.iY7(ostP0D;I70r@BV<!<K1C";<(2,]7-)H._oI
%om/$`G$"4Mel.bO?W1+4($;e`"9fo<?PC)_;WA\1c]hCdg=mRVep4"k>e@orf8V2e<COo3"]!?jOo!hc9N.]&/$q\V[Tc@3`O#oC
%T3bP\Ko8E`JZd6:TH\n>.H]_tJ?+ZFM-t3LbSpUo#"p$1."l['eAu'p,rNNB)Poo:as"l^.N*5PU_1%OnC9u/0iLnm:9=2fQ>,$X
%?=8PbMZZUMWK1!Bd`&a'd`'Vb2]SK\qRH5,4=I_a&0sO\UEun%Pl^cd->paYp5'^RV`B(@&^$H.<#B,<0LZ)>,hu-cKjH)XZ\L,(
%%B1+<%E<Z',[RN^bcV^Rb)s@K'_nWu)S4^Da.O:^Mpr6g#Y'KD@]ebATm^UdX$i!>bq6>NO)hk+h!6iLOX*6*51!qAJW.!i](DoI
%*j+_YK.0S(15XiLJEI*hk$pVAieN"9bL4ftqX^Sn_FhM<)hrCiP1QuRAs6n^''&,^NDj!0LXG#&%K:F<!nBB8=>)W.QQ,k7/:lg:
%-l^8^h*kY2G_848Y/*<h+oAW&q_T8cBbkt@cg3Hb"85;2^bs(jZd0I!fI,hsQIsAY3%sXI/F:h*Z;3R7VnK=\$i@T@ce$3$\+d#N
%bW_ZCe'r;#r:0%o5CE=l<."V1s/k?HkAfr:)>-MjgKikhREp%$<*.Qlf4&cXdopl0-Q>#lLQ=XA7H\2VXKJ)rOcmfOFsND"FEFj2
%82h_\P>dI(HP4Imn:aRHi#&N2[JIGhFuhChfVs<LC(1KmK),V2543.^M:$&Yk]F`[P@J/lY)-;m??bc#]H,:,9imI!oZ<qR7=AEU
%Q-FE&W(,DaR$!__b:SF1j1I.t8VL,\(SBfbjcu<lGAj,+[=#+D!0<p`Z33QL\@A<YRmmZT(=)ceFh9uFifWM9qi7IUS4$1Eh@r_b
%;50pe;_6s<G1dD=JN$'V-@"kbSE+*'8#KgQ?"u(F:2t@*aG7l,1b`DV,u?$.4Wp);EjrX`(P%*ATh%Z@nI9@ZaZ:[]:@[]cbq1Xa
%0E?uGfi[WZX4Bq&Tf,;$0#hJE==d/h[/@!>(L0gB>J.m%En)P[BW?uRPS+Ll0cJ]c,tmNN\5oUVY8K]skS0?B_Cg1:\+PJ]W7`g5
%%.L!`QYs1jIl2E(?bZur/`YhpPA=;*Y9d<lpbBo$Pj4V"nD/A>T/;UU/[q9VpuP:c+Tj:K:_mLH\=b9TWe)nGS/:`(3uaAjLpRTu
%#;B8Y\T+J2dR*ZS?qFd4*5$IOgukF'quG:IUTrALo697>h%Yhk!1nGYlb:jom4I02UA%4T16_ng7[HFb$>P\eAT9@B=?i%U\Yq4i
%/GuFZ-HCO"04D%1W$teV$oo'BD.?Bg.2^8;H'4>dMDlQm/N^/ph@2*h.)d'lR"2SeUp'NLn\9r(jL.FH3i9hA>g+0'-K>U-Q;_!n
%dOgZMmBh!\?#V]BP0"CVU*WrLF(]^*FO]5^_5>rP_"PlTK%:4Q02@A80gW^^<A=M'0pAS1:?7&"fj18QMBgf=cL"<jW'4%li^OrR
%=k9IZ%ub,$g.-A`BNfLc9:0U0D-.+N0bA9Y9UN!QL$U^NM817Mc\0tL@Tqt.m"lpD/9KR4O`t]:9*Y^9AYDcOg/H1\/fT^@Xt57Z
%P,bnt@;`]'mmqoVg=&fj24Qjp`!OnY0UnG=D4V'?Yt*il6C?\jeSY[L?lI0SR#T5b]Fni"jaGhqAq8]L>R8ffSKsPU0\]W)3$.QW
%R'=>5maqiPEB`FC6C8"kI:tV!eMbu3jasPVlj"S@5Q!p#R!uP*<H8>a>K(i8MKomJQ37,B.R1a\2[@#ZJ6eSMj;Xm5or9=aZ(+?X
%Sq!c+4@B!K94%1pk5-R-_ipDaBEu'V'R7CbK&q#-&)sm5=kC$uf)rHbT]G"IRfD@jk;b]dS930NJfWq)]1`A\*c`=V6Vb!A9#7+$
%*KprEfq=_k4gUh#Y[qlRB1m)oNm80F>DJUUh\.tj0iN@>p=K05W^PU:pEX-f<)LtK2s&Rehp'(drP2dpgWPf[9`;_2fK\t]rR9WT
%5Q,Ht?(N"]^TDuOGP,>,VZ'7Ag(&0WM2P,6O18l=NGSi/Z%sX0kHnW:pd85h)9,(?R[#l^)I"VH!]"LgAZc5508b\%P9Zi/<["tt
%S;!cYM&.WpIK[9V4-(]&q=N.d[i[j4jhrrHbPmg6^V0dV]+P_k]N]gtkj\6J-[d\)XS]t&J4')+9+MMSa4oE^_0PKg6I]<<C0n#F
%b>O_r&a"7"gPOjp[^%Q,+S`7N[jS`1r*iIJT62Of?fRR4m&0#"j>YQN;r=-cL]-9qR_4AuCG,>W-h-d3>D9t7pfX$4ja,qcQ2Fgg
%-QZ!bIS$'n7G^dmE5/nF\<-Fq0W[e(6Z0es-I]QlqcrA+jX\qIr:u\aP_B`I>5S3qTDpn*jnQ_Ele"(ghn!col^46ciAf.0rj!\2
%5A"D9;Z]hYA.'hGBn)/25f=LdA?7`=&NifU&'P<mig*MU"RkeT2C7NU\<#ohE]Y`7R23lhjRkG,pp<0WSD:[?^A*A;@WF[SWY4p]
%=><S0%<#AeXM`@<B.(o)]S?lCGAO=jDmECEp(8\<>h?V&@ThmVG//EWT'&_P-u<&^9ctZ.o!h.aMfFcIeg=Lm4_k5HOlAD:BNY\K
%&s5M5N.1#&NlP_V&_57cJ+t'!F6-31b`VgArTfI;PcWZ2aD5UIdk4"_5<6nOj<c3F`%\m68M3@d/r]7'r2G(d03m6dg4UR2nma>f
%f?`@A#2cTF5DRMSET>f52[crRa_3]eqlQ>pPM,NsN6BV&2"Q_h*dC(3m-!^7@>Q<e]<^kO6a!N:Y-"$Aqdr/+b!>[9YrmJH!AVX.
%R[tE-/[*!7`BG^g[t3qlZe7&ZYs&E[gQ^K%Gmn!:r<.m]Jf4#^?DR.h]nZ$Sm>:<?,PM%X;dS;057K(226<RiY45R<J]bYtR[-l\
%T*qkl0?!c4BsL=<%a&Z^6]i#DQ9n<$oR7NdGTT4lLHY.*KV1\8F(8n\,q66n'2IKL-W"^PSDm+7*(^?Z2r"M!Wj'NeJE"uqLCC8<
%*q<dhQ5bRR<q8XSjIC$Q"Wa1H5fk$gUO:]f1Bo^&iq!NO)=2;tAg&Yf\&Ne!13[R)O-&DsFbDaC<DH1K=1g+4TAlG;2m"g..sn:"
%>0Hip^0ZqQKu@nm;pu)-AW9$BjMf92]fZF?D)62X5`9!aLCJ\Ljko\Le`7@<c1l92?`c/^qY>Kki0U;<B+Pr@a/rYnL.M/Y-V+Yp
%H\)0B-&1Htnf3ZbGak19>[aJV`h+"bO*.:=.+lj&c@IYR^;<M&$7h*2pi.onBmcqQD3+%@5I^YCT^d9ApjAe*cZ\Hg6.85?lun!V
%R'0=NRd21^McfUfcTh(7T:u5]Lp)*iVQ?dTNCS@oo+7$c)8?au4V!?0<8>(N\@_UajIl],1g2JANeR_SqX[R8)cfu.A03,TK3@`^
%Wp?Re&[Vk:"C3Td]o[.O^9i)[X&C?TY3:+kJ#Nj?YH08Qc_APPmLOfZC<Pd):K:t?q;65lf.+ogP84LXXR)K213YFe\/#B3=e/EW
%f-.+6R^,[Di#L^kW)#IF-S1HGAT=I6foA7u]*$%ZU'^4*pp*8UA)TrA^6@H:+@dkF&EF,"ZA.@e14B&Ro+>rM&E#8\>5n\:nQqMn
%d_c)O;T)NMIGpVg^X<Dqa^I]M"CD/J[4I"Fj*'10r<u7:h.jJSp%P3>qV6B_YMU_B];psM:Pt?BjNmNk!COehhW0=b@PN"6LL`1\
%lerU*3-M(SG)'Ao+]#)EBkL)=WpRTjU0j)Q"<osF8bMQWLSU/.@!N$dogifOSlH(']1)ToWel[I&.9,VQ,j=:[Z__l/Z7W%,#'Q!
%i%k^`]9mPGPoT7'NU`0_+N$-cHY1A@?*fdH-6@aGbPZf@O.=M,b0@!V!PjO5iH9[;JmAWG?o2dC-+pB\pE/f&,m[kQrK$DrfUj(2
%Y@i?=lFINOi9Q[#TMq\VhUqPP2FF&>&!f\SGTur]CJcFH-WE9k)R=<.4bof2Opd:&4R9a&e9ZPHI;'Xd2B;.,47\$ThVM,oQ[VU<
%]7a83LE;[q45&e;JegUh1?XK)bH?0Vs-%-uS3'59V^$7q@2_r]OVBdZ?l&AC1Xp(u4fgVq87TBFLF+G99K?7Dag$JY-^u7rrg2tH
%IKg.eTBg'/GTg:NcrF._Z:Nd.(B3\*mX,F%=9&+bN:/ud:Ccr0b:b-jDLjdA@?o2o\.uVbf0JsA2Bc);'C*%A:Wqgh$un,A#qq5m
%K9iM0iEKFR_GoZII/3ZK'3o7l#9K@i/Q'&C=Q1jBIsX3$ZpSsD-+ejTm6\p<Tk(c3Z<cu99"#*rg4b^W6HODEA@LL-YDJFuKp!OM
%P54C-kub)c*RgeLF@B%>X'9IJa^:@\UjQOS\_N[g4sEKTR.90@DB.d3os<u^^17%HmRsD>Hl=m>$T1/n]?$2-ioJl!@0S[6Su&Cd
%a)SJ>i5Ue;i(\YQWFcpf+E9krGA+)i5qRp82gUH;eSAK3b!]t`7C0kq<KRZ$=4j)5h5Wp$i1Lg*3a&F]][2p4Y,"tr.AFTs;Oe5X
%LfOm2:P"LS'a%%\bE-u42j7%;.t'CG@9Vrm)uCi3!o+\kF9'&0%jgI9ar;a-s6*K_\!64N5q8*WX.cZ'i4,m!E=%-qV3k@f:j-eI
%pI=uo1$j&I=4gN_a.a1SKq%0p6mQ<,$+.R*2it."R.qTlV-K^s#7&FTIbJAZPLDV!JRnp(Z7%0E",Gkd4B9dmU_SE>[r,q/TD\Kj
%@/0;,gV`>I\[B!FEU(f\gV87?hg@K8dTS?]'#n^8TRt/[:r*WQ<f-urW"X1)j,,6Wb9P)YR?ABo@NH-+EB"+cj/lnObbrb#8`*p_
%le,TF50q7=b<2nS;'SSTf9=*.=?1iU]?6]$b$XnTb*ck%?dR9r>umd4SbaH(>t+EFj6?;q'@48Gn?b>sg$E4*P@P%Kf@Apa8RXb.
%bj^(5KD8Q;apSl<m7o1U"Rl.)RXH`DgBnU[niEjU>Vj$b?to(7*pKNFrP-!Y5PL*0?&j/9MpnQ8g4++ro[lp.JklnrdP&X_cSZH%
%kj]QpX<2(%MihXsauRGhp5$ie0<drjGr(5:pjPR>n`=:/]6to#;d0aN=*,DGOa/?H?>3gma,65>[Y$L^NVTonksFDiRs'2"iK&H/
%AG;jM>rTSV'K;X8G/nOXm8&/@kH(lUeK+`/CGCjQ-#AHm_ah+kFBS#e4C#ND5brCAP=a@dL',2FW\<uk'[%X@lRr$--/+n]M1\1l
%Y.R:p3*gIMB6a0SAUO0\eIgoo<Wn";[aGQ>#IL:3"%P4b)6G3]'q?&e#6]C^QE-$bGE&P_;'Kh<M%SUShajDR^IstoBOL4-)T>:p
%BlC$\LOo96:Mg5,OV18*qC;\d%'GJ/c&Ak-UX2nr>VIJZN8/IK/a&ki#LD`D(E1CQ59"lJN[i_d11)#f)C:^.Oc5(7*S.8#8fWDH
%h:36S&AibAlrpp1QPdFp-+UXE%cJ]G-FD.m)QEOf*^bCGnZ]C<>,=6U+EE1k[aF/.*6F:p>j`k^.7Z7Pn)/1;<tU1s<>.-IO(l8$
%RNR;VprM656_a9/C-<_;S&BurEnJF2pME6P5trK_]AMQD;81DZ>ilXPKMNR^b?'J";uQ8MDt*?rrX1TW0IIbSgQ_-NpkkXM?B,>G
%f:-F['J)^7NF="4$5P2k&05<DZ`9#o7T-:hrG+/=G#I-ZcJ;2)#\h.>`kt<kr)N4,'mm=bGpqFt;b6f"M"EK3IiW'Ja-\so?2me'
%m[NpVjSid-i@'rEagSL>q`JBAQPFhkiGM//\^9V8,h9CY?@"#m[[V,?!Cq2F[RoG('^kcq4::fi^R`fA!)Y5Z4DGMb6P5bM%QCpK
%G:cH(qm.@:XZK.Qo7.5>Ng@5LqLD/p;P(Y&$(,1^EZaIi$"OqP<O;u9$`;)Hq>P;Fd3[n(X\VSr'Z&>nWP_To.oX'-K^&')m/#LG
%O+D2HaB/:&D=Aq-.`sEK(\qg_GB<RTo8ib4]=(N*kOuYmq2?D/:Y<Z\XnQFT72snfOO'T4n2]**h?`#'(Y9-1K2N?4cnjP4q5Zb]
%+MU0t^rOh=>)CT/VGs(>8U5s*1pd@R[q^AMZa&sQNl4r71>BOI/6(H)Cg4LDBjXC\%,r"qfQ#\*B#RhrW^;kp.h&LU8>2h<'W#E%
%O!-['*Iq:=/Yfe+$:E6=GUN%QGI"esLXmnQ45!XVb*'pm>[(NT[1,$k\E&OZqn;Kj:FP'(h5.2-Hq>JQc6ut_UTg!hX5<ZIE6n"D
%;:mp`lNXfAGbqjU$Rppl[Y#NdlUSLO]18mumu=CGl2UYQmQ]U$\:Mp2YO@Y"ML'ZF94n>Ef!l1.3@!=0#[%aUL'LGE%U0L$PuMGN
%4Om9,**Xc[$(*"YKiPFbeJs9[<#A\HHkY%olpQ4kR_]B/G>`froH(#+\`rX-:p)`GBW8>BBIV`0&Q98TD.5?dZXkQ0rNBq%f+-Bf
%;-8U"SVb70MTbcU;qLO\m<pf7'[im:NY5qO66AD*VZh/7O72hPmm!E1:It$4.c0D?l3/ahgtrj4#A*YS>p?,]BBr';KU_5VT]cRC
%9ct=O.j4QH3@q&lGnqP.!5,hoV<>3$PI(\TV,9CjJ:+*0?s.m-maSX+FmdO"q0/;u--<t2#%qa"f8acdUJ@=]I"GM9m_V.,5Ck\2
%lsRMl_Y%ii=4=!GeDX?&lfktg.A\YaHK?u@*[t&I`t&VXj%<W=^phLH.,+)ijk(0`4("I.EQ<UN[L"S7FGn?lLCVbW\7]F^]fh\D
%UNJ/A9NF6XG7D<9VQRnZ0b]\D%:e2^g@r5oIm$\+IrSQ:eZ7)5"5>6OX%]nSO/2`$1B,]is1boCc&#]%kC.ikZWnsoi<DWb7BT5c
%9HqAIjpe8W?^#*^f,)-Z/j6Vo'"u+f_DckIi0*@(fJ%WtP$pZHjK9]f)E!B4/@VKJ1b;Oc"A(&bO>?.u.4Eea1UnN7j<CIqaP3ZD
%YDaD*\>Kd2,!^22ZkeqXHIH&9=rTJZU+T.<^$$b+ZX2WsY#$`cM&3S<%F^96`nkHHo4c_fQ#YNQN3i51'aOOO)8\[o`elb<39bpG
%N,7Bp_(LXY4YSY5ju\?>QK3$X=it/KA0[pl=,)X,![_%IOnBn+H-Pc"(=@,!Blg5udJ9]]m0F^uMO;SHK.Ee>Z*p?(<?7n,BEuQQ
%\!ZRYQ]@h?72D-kW]\I,QL7D*;HVh_(S`,'2h:i00`!2PRQZ+*p5*G=-g]=IYM[SW*cJ*h/(WeI2B7%Z%b^De_2$cBhV;E1j)#U#
%pP6uJ;?:q^cp5Vm!(cW5pKok$LQpJ=!.QdTVLjt22?C[^0LIKnY7F-_r,'E[;lS(TVW7l>X*[jG`oJIj:UX?s;#PE^%U`?JV6]UL
%A#.l5Q5D+)H:%kj)VVhs+a*):G'MAI,jUj&h9L>ToPN?j.HGJ+_8foH5MDu?I2"uh`.eM$G!h<W9a#IUHJ-:?leFbs\[ngChZAL,
%Q]7Z=[n$gcSr[%^W#B=UH;0RG_C&'?_]iEC;ht:R((TRc;R5BmY0`^p`U@K5Jbcd*2_9i2\if'_^9u6j"q1>G1k>^pNnR=???SD;
%]JQFk&\;^48PS"+fZ)YnUr5eReHm#]I%=W;E_`BgZS>Ks)s5*8mS0K-0VjJ'`@fGX829[P;OBHigi>Jc6;;Kt$%b*Dj,#@5EW_E^
%#WSb0[`YLW?\>=nlVUS'?K.f?eGUg"J!o:5/@LgrncGe=[pK/sC,\ggNqBqL=MBq'YFJeb8T>]n.5\Uc]/C"&q'"su`ee&[9UFib
%Tk(D6OmIIVT,T(V;`gpEAK<_0HgYMjC+82RjHn_K(V(Gj49g30p^sUu[m0e4W^ghjH-7V>n)E)V=WQ0"=@WL>:pJ^FgFB:T4OI#!
%FY4J*-'KKmMpj"[,$Qsk7.qi&VH\Zed'cM5V]+0sLeh.]n=Bp:[:LGMjRmIc.U`_e9GT#k3Nh"n!Q.6<D6t\o%3CE:]SfZ;lK*4+
%p<eFZhoO-L2tu+YVr=X<ogY1J>7^Q&ecuNHK*'cDj'miqW"tHe33&dijjAlUC<iXGiafuhg4#M&`03<C(o<P,+?3O,Nu00$qG(Ap
%%ag)0C1A\IpYJE^gXoOK;]7A_KbmkSF\Fe)EIs.\BD&@NBh:V1lU8kQ\#dTMDcI]18o<o=RFp][C&q%NOb\)u1!(s<,iuGU(P</8
%Yu.*[QI(FZe(Zl[CdVmSH8FeW<<c.nSnl[X4cEM3H]Zie)DN,Yb!&pdN0oVSV9*u(7"rSL#\:mM7+(3;*\j*t#P0CPRdtTmIo3GJ
%&S&u"$``:iBZ)qp)5HgLX,Y8s&KC@FH?l(JBsgguBuE'co@l!\R&hT;D=#bb=\Gpl?ALP]C1ENYN*'G^FB`Qp`3,M")#!',AAn>]
%cT4oYpd%q"]kYuO%=Srer)YJ#<ZC:7d"q'*rcER<>ULJ=#klb<D]?p;pUZ,ij4f$=Of':q:aN/L[,Wjd<?0!,=4OENCtIEh_dk'!
%-):j:oL=KHWg;IVk-*Jo`?+DqVDH%;LOt`60Z`DElSoTkS5THubs^/(iaX>*,!Kq.mM"'@NCnO`:TEtCCp:fNf=l$g&^lUY7bL)N
%*];-m%<d,2]"X:!b<>0?#rf]fcX6\^m'i2G/[OKMODS9Z[SG#>/k]d6nPUjKFf?*u7]G9Hm&AdGe2Zs7>jfdY[<h,Tq.f76:09RH
%]!hmEGRC2MW[68\j'=u4=VlVE/-*/@URMP>/L5-k$c$WqJDDaV]4+Rtg8.9N=TJ/2=oeSf4:T'T"e^b6\c=eX[UP7s+ieIh*'4:l
%Njnj7R,GUlc((*c[UPZ:RbErAU!17;"`Q\;s-FFk^<?WiF`;Qu![sNA:_":,;*lkh"],E>Qd#R[RfuUu(I6MklZN<YX/S8J![o^K
%!Sf?_>Sb*_=o_^u:CtLf=g'1Rj1IdSno,bW-7)ouY.4,iL.b3f;f)[A8Q<d"7($lNE>usAU/s)t8Q05+qBbfL-%[m2AP1\KpB<4F
%_JY*'>"K7e]e$)-E<_e'oX14'SD:9<^GFaJP9q+u-dR7=.+R>jGtgoMj0!LDV-eVui6SW]@MC)5^:U#$6u?eW[;9b;=#)-p;eB;2
%-1u"!Jhf8r9%rq3"YV7<Mf;%,dW0Xfmq"M-M<-QRrOeX)Vse^e3;o);S:2gNZ&No&T9EfNbd_.CNCs&Y)bl``7[jYNfZ&4`F-8BA
%TYFjUEk:U4:U$?#%CM`>_E#5lEr&qk)k=W88V>Jf8]p:1TkeIS>rnI=7#%1NLTi]eku-JRb*4a:4E/>!egm/PUaZQIIDO+k*+A<A
%42$1+oLlTt]Yr^`3nq5`PB6E#IsM(W'@jCMs"3D`KfWADn`G<#6BHH+_@C;5`>,opi-UWWoM3BClYIDFrIX@C>g@[b.X)BFM80Nk
%Pjg/e8oUu^;Sf_4lX"--YfN/!),K'oGj'r[Bd5(p8tp`=E@#,eCE7\76_<!:`ujAMac]7l&YH:n'N^/oS3W-*9jC4p_XV1KI+3a$
%%[^6N(s:ihgkL%f/qm;$i`]A"Ft'M]d=5I(g,uk#\%BhDmBm)(\LVLplaBH3W<$jF^'EcV$e_G_8mteAco(0uM75:BRY[\P+)E.[
%/eI1j[j8Tu,WG?',-`Ws)!ljS?mV*kd,9NT-nMJs-o?Jf8'9O2<`5\7MK5[Har/?t+'i&H($&D;88=^9iqbBXGrcTsHJbV^nN>9K
%k=^pcS4TrS&.8hHS9X4KpDlk[0A,&Xi@:m/[jDF$^r=f(Qk34OK?0bRn45=SM1L;#+>i.7CnuYm9P,0:m?sPAq=+CpF-15j0c%#J
%n4@^rVl[-DC.+i-5hD5e(>b/\P7.)JA4uf:Jk/'`MR%4>QFY%7]8o7&:M[X=/Bau]5mu"-NjP)?80.[7eN[7Uc3AWY;Z!E'-WTEb
%d[2LI>H=kcn<*ZBbA&Oh6$!==OOY>[<f#93q[eBl7(e511p[$oe*@QLPX?3s+d+:24?C#lFbHi._+jm(V*+X,94d:Eaj_+&+`#kq
%3cu'T$6IjR_8D>;AqR3<0K=:NEC!,OFr4cq/UQ!k?fM>P:1ZYB0&lDV_Y%^bO.ZBZRo_c@=nU=9LlW(go>UQ+T8H&W[=M!EPM#l^
%HtTnTlHh'5huE2pT2+1F3:#nbYgd*`3c0DZe0K3kD3]9?cK%FVDrO=>--%FA1mqfJC+$N[aXc,%254_L]'pXMlQ?1._d#m:-[kqE
%`eABGW[>FWeShZ,f%cC35XLpEh'cKU=ALftf*unjb'p%Adciru1Vtius#S;??^*RMoAFG-olNtVYdNk+h!q-&$1Q?'mu1Q]QI`P3
%`&\SFp)piS`."kYi5EIN@Jh"%Kc=`lHigr>$KTi$2#[-\n%ql4jmAJgW359WIc&o.D1Z"4hdO)iL/eLmA7K0]eqS#.9)BGqGTnlO
%am+m*p0Y@d&T".c;Ga]16':pMR#MAOlAc4S\?56>b$sooGSZgVPU?=\XNT6_>'RrVZam#sY=gLlWl2@tEt/B#g4,_YEhtNB:,0.m
%\5Z$V`1mcqX8@*aZS.=*)+T0)+R.D;d[=8\(!\Q=Y*Uo)m@4!sZ-N$(r>6S,S#AICbHY:NqThC][Y=IFGMiGj<):u%nlAT4nr3IO
%!]F#!ohG.e%es\j\H#k57Z4\A+>"m,DD+P#3&e4/!p@mG%M.Hm\E1poj[6krASVN<+9li=N'eDug#q9sb?5F]iIqQlpDhnE2o3?)
%:Kt8Y;^.Y)_nb,,8N?.k/6;Z8XPo7snF83]p[.SW'8RVH3Q<ttCq*80AK"?2[&n^J_eH9:4hBb'&TOoFTrj@_+0(Qg`SS?]Z]*`S
%T#$6@%"o4-.I?@+"OFj91u:YRKYFnnhK!ZPh<dnEV:T1q+%Ri[9T?ma(et@D^&G$O#8`9`]b4CB(*oT%[o[nFdd\K1;3oGqAJi+j
%R;sVK52,E3:(RI8??o"&3P0,j]C^rT2oM$GK8G#&JS,thGD-*KQ483R#b>'`$c_:bS<BGAN</`Z76__%a!a\r%d-A1V.9.ket8A!
%VDagMJ$>\S:X05$N,p_8e/OY>g9:gZ?LBTVCRcqa+F.3)VZ[DR%j.'idrt9@a08U=$J65++DE/F8nQ^Z@j$'2W2S8T%-.ln>B$*E
%G6R"t1S6[+6m%d[.]58DcOtkh@-iga)0A=PVF#uOIl_8-^NLghkX=a>f2BRVKd@[thABQU^:.17@MJ3p'c5*u93D'tYBZ>05!HQF
%a"V,q!0JiF3KJ?o@_NCq7ZnGQiVLKt1C[eK;5Z?Y9md3\OG-oL:+'&gPc4sL1!^MJ;dO^Pe3*GTp?S?"qptS-hVQ!Nr3(/KM[pL[
%*-&kbLp<M!"/_`Lfse5HNNjVFE/jpNlUI_9JMnX`fF#:`7im9iLEd8KPI:s!,/=h+;34p\gR45%1]c#/?D6?\%N[u.R$43HS7kLi
%aSok7;BuM(oeNFa=26SCiY<E#92O9gQ=<05SANQD4AW5n(Ti\.M5O8Z()q<Y05fC.0tV@mcZYE\5s!B$kJc*];Wq/<8.n,%O^^Z<
%'O+5m'HW)X%gc0iUQs%r]-:9+FdsHdA@h=YO"f&k-SM0Q56TDbOpm=1"B2i6HJ!r'T1Jn,S%_b-H'FNrM4Ha27;6)E3)U*c4V.?O
%W:QA>XDm+W6U`p,a+7ejH_/R%<P=o)ED.ZQ(<Oq59!"=OTP.#gd<jB2i<'T-Uu=4hh&<*T837]c!-C\eb;QrK[:[^MpT-8kg6G._
%+rAdGLmeb`#ImF$cEq0GGXniSBuA,kQ9\=MIRV+HPpV#f=)`K[1hXYu))B$`Sftnq6K/W4ggO=3T##3r!)d8\J20JQ8?!EUQt)is
%k]JaD0udu9U&^C<ajJflnU$Tt[@bF`>t;7DS*/2@M"+D&K*WWu\p:A]$Lbnq);H2-rT7MYXrfOn%a3nBN0a_[FT=$X:YZX5<LZP7
%PkNF[S$p#8eN7hN`4%&;/7t3(WZ+ZFY.Wjca#tYb=qQ)5cePl6<JcK'-Rt81WkhCQG"E2&VNeCFVFW4Gk,*"dn>[YUZ6038l-,D=
%AlF!*->n4n*F-/>11p9`fs<%0mhleRi]%a,?SOXE'>J""=sndLfkFH8e_+Y:I`:*J.)5'61b6?#$q^7pB;]IeYE72C4gWToEI2;q
%C#\iWSL3IlSXlcB)W?ub\UA+g7CbQoW64Kh40;_)s+jVF9+U"dg08O8[aj=4h7LH$FD>n9b51reXV%usdG=l<[^Qmi16J%Sq"Fra
%TqobT$o8en&nNM'2j?p)2L<&h<0!bP<,F-D(i^!6%$Q!46VpUs;9^C[J6P4N$3JO>;CUs@=Ac(-EcX`ELQZ>_65"8Y:9rlH=S[uQ
%B"k&b`^=0+.g;rHHRii.iL;0lNGJYjZuKVj]459g.WGL%%csHX$ja%OC@+'&\!"Zn`t7n`m"^aulIcdLi?T>,S2pbH<*/-4RQ(kA
%R%(?^:D[tC8"EMlT1Gu(A"d&h\pt/3-KK-B5l@EnpJI*SP!j,BOoe(W_4*CY&1=a7^XO,5V6V&]b_ug-2V'*Ki7uI9.gT%Z*W$l<
%%'=6@8f>R)[U]+9U7DZ;e]ThV9NO\']qe5M9f>UaO>tV\jK`$&[Lij-=!a0RW?f:k\WX<f=3V:t.#Et`Ghl;4Lf4&"5-`IfdTk^7
%nLOe+G[Y/(_$hEQETG3N&*TSnV/KDn2ncgdl'__M3`15L/-PZ(C"+(R<&*05EGV.3]"hH2mWSQaqP`!j9.uDWb?TgtQ0!TLo:SMl
%@`U4?4M!,POf+hL+keYBULRp#CS0=YOSmfj`-:FhO9'W6Aql8?34!*e3+0dsRV-d`E<hgkqfNL6UZq-5YitQj7i"']c!b5)&[ste
%C4-H]>t+QDP*4l<I`tB$_iH7SUmW<77ZHa3Q^VGHH^7-u:s-l,f"&22B#eBq+'75_lXhbn.nQ;T0f+i=ic<8%.7q'TB?!KeK,53k
%.[(7G<Z"CGED'+T(M%M7P>b63Ou?!oP59pLS/=hG_dH558\/>P:5i0*0U*;Bdl340XjdfTN-=K@_-*:G(s7aq6i#@J'm)f<Q)?(0
%CkLnn?:mLpRoFJa"^OfHs6>LkW,.+<H<s92AXepL#[+T-SZ*p#D'VbPfd7G>9M&ca<#%i4RoFM^-'`=Fe[:W@[V8<C/L?[!g@8M#
%;Gu2&*9pF[MSAe,4s@4kA-ja?i3nU]dl`kU/)/"DUmclfVlZ[$]h;[,=\0@rQ[(T&,uqH_m`R%0W?s:(:!?50M4$e0;GE^S'I?c$
%;MA)6`8Pm].&hB\/0sbcDb7U9OMn1@hO&"G;3L3eobE0[FhTC7Wp6lc8Qs5<Bs^a']k#3qlr2F,[#X6Ha>V0*#+19C=&mp#'cB,r
%D*Un0W>:b9kg!.OhlO*m/eiT#:+G#VNfH'iUp<_ge#qR;1P/4(=_/P`X[/L/gSfU71e_F!a\c'H@7JCfl`TX4o^;Dua>T#E7(*[Y
%Vm6bu$?t<,fs+@G:t\=D7$VV8lRAu/Xd`W@Q'Zb<%_*csfqo9`X&3DsH$&9_Wk6]VBct#KStsagK&7PCm?>UL4V/c6%Nq'S3^ZA7
%SCoVC*3`pJbqhG9O*?n,R+JcH,-jpU`sCnJZAiCO.bf&gN!D:Aim]Cgfr"@N,UHI_A:D`oDSqMa[A934@n'V0@:kEEg!61cOWrON
%Ni]N\B?+Kr+*l%GXdclVXX&$Aa35AlS]``DVBk8DSJ`Y0%phrJX%^g\>%&[f`5j?#cH5'D-J(8_gG1c]l5PIs@Q/-@_MR*U@15ot
%qM(]F(pCTX@3fQ`DA[)p;`>-1&p2#f?G%/uQZ_J6:QY0,J,8+WVg=N(XKV*D/#G>$8r$f(dPu3)nj>`E76T;M,Xrb!Xm+fI@ONb8
%_ON]0[5L@?Y_gE?f\%jAh.u/Vafa9kh=j)>5Fj!p5=Le,'ZYcATm\LfUQ1DWo;PVW5'8o\D$]QGqq;\V8FVFh_80-SfI&bPDmB$C
%jHUQD[-pgV<9J3XQNA?PPmD,(o@bbJWNBN71d>X'>31hsW#aT9-u5r[P]AW_;PjX7d:ML;V8LYU2p95sI2p)r+u];7&fk<*g875R
%,/JVq"rXB[;BSkrcm%Fa$5BuoKjCs`0UX+#1>K][8=KZHi!hI`8SoDm_Y`+GVhtWr:3.TJZB$L2RjP&?,R9TMY8^4u;Gr'_,-hl7
%[3ilr$+hf3k`R7#_jsBSUL$It;ic6A\3):E?B$;jmYj6WRuRJ*]gJQaH"VJZ`crbBH(mf=e.R"S^7'g99g'CndH!Crc9W*lMPb?l
%=(ROP"?+f1OB>^W\tEH;lTgull-D<,Gnmo&5-/AFS@<CYdV(:m>F23X!s>XL]UN)b2?j]DJpHYC25a?^ph;_Wj<8.\*Ah$XAlkkW
%ID\.*V!:WYF)"V/=e;ma'"ErcXgl41`p!>!JSe]'*%"k:*mob2\u8-4&>_do?Y\mPgRH^WH8Jpl?g?6\b$(J?a*?gBRRU#<hDDlo
%lHtt+=jK].4ECf=:Q7%18IA,s$8F\;KL'2i9K"=L&NPQJ=\oZ]PItL+QGSSrQDRn_FrrH<%Pt:l+ZJ2I'sIc8+a/)SY/ka'`"P`(
%Ro0#3_&,4VR)?]gPQY^;-?E9$=6-/4e]_BsAK?-)qg$*pGME_PIq`oaN\PehETN=ac._-q/gm%Dr:&1-5+HqRdELdD@U>534</Tk
%Vlt$A#TGj!KfEW`FD@mnA[.fkUM3uUlf6YuW-+I(>8ifEW3*U@%S\CSPQ:.rWM]k]f6LSu6:7e0ANiCOm3q3QFjI$nScYV:&gO)/
%ks/P[>tmkI]5!nL%MluiU(ZRI8*l;3#m[[`'U_Fqp,k65?3d<O,c/?^5LP?4,KNP0<2Y-@(6HIH/mWim##C+M'J.OT`u.S^#q'0d
%#!8nmBEHDP8YrfS/is+#UKJjMHh^F\NZSYMr$Kp2M=WMe+tfMR+(:PnOhY,7G>plpV.(S03kqFEi$AqBH1*SETlHrMP7ljcd]S*J
%h'T<1]mOb?@6d.dRC>>jg]=_U$DK,+>GW96W81O:I.[lM?cr%7SZRH:Un^e_:?eY,^Ypo(;6Gm.Jt16,aUH("JAR^2qh)$`0mFt[
%L.K7;]GXl?/Ku6^rDGS!os!YkW?$Rj=P@sQ$Z@**pI$@)./bqXfRF)MrJ(nbjOrT^4q!mis7#!Li4QcsUYmL!#IbWhN6L7HL0qUJ
%,#4dlf>Q'?6j"[.p;Rt:f9F)K6JEs-W_"Tei8WH#/DMDRm=-ck6B%n.\%qmY[Xi:@Am6/l?K#4kQRM6P6`^VJdp.l!)uVLcA8G6g
%&E]DnRXTLoQni:$Ze]/F].KY@N.06?@@42<8q$3&\</$FBJSu1-r]%uOJ>1_A-D(AP,B`O7BUM5IDb(c6a:\?TP.<"lW?-Y#cn17
%4;j=>6Z'Xr&SX$5BhSYNnfY*rP73^CCe,S$@sPZV@lG>uXrtW$/h^SL#$YN\/PMCjAo'9G<YddI/71?gE@Q<O"a[6]IA_8^CV)Xn
%45m3\afn,#_i!YcnaqR3dZZB5N]5]a!l90o#pG9'Z+1:J-'3_[>mbIJ=Ql/<><lbbdE_]fh6KjDd"NTJ#m\rs]'90^AR$o`1Igu:
%Na`Q&(L-l*(k4W)_B)Z'PaSrsjcQ-X[l&M7B;N.RDsqU[JiQq80^@+De_-57YeCVS%CTX`6>K.#Tn,.@#gMH56??]a2!A:b#gJWE
%KI1l_S^?MB$_b,@&t6ZngP[SUBpM%uO*6=_*Hq?J4')C?_r%W`M;,Z'Ir!B`g0^0-ET5G7%Wm;#LsHJMOuj\;(?N^[2JAn:U#"Fb
%%:,KY[!(_f;=_<.QDH:)J-m!B@LLtO"5*G^3gY;O5qg:M*;7,%Os'YHe5"<Fq^D/NUX/+1d6*RZaE*mII:7Vek;:G3DU[CgS!gnd
%6(V;lNnC?1#(Mb.a?*[20%W`jrkMD1Q2-+rXXRW604]CEfjhe6%-B"P667p'%X4<Ns6?(pA"4j&1H17=.>mh0J#=u3"3_gF%Ueaj
%Xa7rFd<T3%oL"L@l?bG?Gk%'"X!5:u?b'fl]J"'pB[1X*%SJq5<UQ:(A'_/dn3^FKAtdPq&cJ7?nQZO-A4>qXaq3lhY6XF5,Y.HE
%@Enh@(u1O4oG[MZ.q`dEZ0/I(gM)X)T@MStK>%(B2h3K$]0G?91H5&QbY=nD?oHG><T`D(_WkuI_7q\5$ZgZ@k'$<hp;5cp08Hl0
%E1j$to)\CI$XeF<@31c*e":_PB]TOj^Y0.*_O<Ql:E2]iZ-+Q-B\B0C1*;02[[YE'b:T--^loU.mdU!=6dd.BPc`XnEXBZ*A^k&u
%`E)+rak*i7<`jFdrkP(nYg"S#YB-V1jm*,_:1^%R,dBNe,lG7)[l8:<Rr%"a(:khF#X#?+kE4k.`T=qH8F/TaXu5OioOh0l+8/>$
%7/@8JroMt\q^ZWhmm$_pW_4-pH973pT>lIBGjc<u@6*o3;NJ_i_7JR2'I>s(Z]f17%VI@;+,;_rer6e$EY`T$aLp<pfkQPbG-+)>
%'Nsa*Ur$l`C#!]1Mk'=J88"_6)9WM:/Ku0g?!XKjJFct+!F45_+2ABrr#Dj!#jhHD]Ap-D68;!h5s&<)o"&[+NG3DAIZP>)NgDa9
%p[RrI@BIkDF;,ellVUd]]?J#f=^%+mDc/^S`1DGdO!5m/7pfSn8iD@&ZeY.jiN^%E.9CX1gT^W4o@2ZIGk_0e5C`Oo:Hs='E-id%
%"jYkRo4fA)Xh<c]>D0k&q?^8GBSafpSMe-#nL")ko$qQ\=3pFX(Al]$hi6'TjrSZgf+#/o8j>sPH-!1j#X["Ue4nQ[AmjmZ0P*$o
%AV48H"&h*`/";*hbJ;WP^sig:rVV4la@EChi*uD_&5;q/m7A=,ZVPTPOP!S`NYrRq;>t=QMJ[[X21#7o,-Jc\p:sG+Q^ungKOSmm
%?aZG^4kb>POPK[*[ukL+.n/^Almdtn,q1^KlU-if:ULm;]SJ\*9pVII"\>A!:F90Z(@"/,.JF[K>YXJ'-b)'W4VT4W1e_A.6X#!E
%iLHof#hm'p7,""t1C!"Ag>:5HF,0),LB/9q:["\ghoG);-h9!K,,2?_$s:jkY=]hrScXdq*G,HgKc3a?2&?V@Kp5OM]QCs.GhZhn
%(V?c!.c6>hT<QZ25d_+??C-M=iF9f_(PQTK<*I6'JHsL98CUk^EJABVG_H44n^@14_me^b,alQ]k$<Sff/Eql:7*)@<-bNAN&7=f
%cR(A=Co)D,/b4iHW;LjA#[oVn.f9Q7))THEd:8hPNM2M)a\Ze0Ro4A7Cr^-+dhj@E#chZlE)XiP]@Ia#4jqm,fs;?/fLIjelVE$.
%j1CLb9(^oBFe]Ej"LCR!LGGnu_9>=>Z3'8nP99^qMV2QS:@Zr?_4EN^#/isUfQEF\lIo1]r&&Dso2PE>(s\[[k+DQ#6-bD3q4;F&
%He]1HFM#)MA*"e$a:DbE'c4H7c-oA:*5"P9)HKQg<C]&G$u@k"hLNOTFi(;VCc+)@C?D^>K,q]FWii7Q!P;2$=]?sXE:KnEoR]C$
%'frESqO2mAVge9O4S_-ID"Ej4=^UZfhkR/d?(Up7I."n04mBcnOc#_mXuXNi#\oSi&I;>R++fnuJ8G,<YOk5%;cq"$^1LD5B=VFc
%!OA%\-?3:S]%!(F%$'Ym7P%ao,t6j\Z8rtIPF#>:B1TMj?5E3BlL2[pi0d:>:/c4^d3\jSW9AP:F2*O2l`#kh%fQEkoj,<<s&@kU
%U3,=HO"+t"P:DO,,I!oCQ@DG]&Fm'Qj+Y9f^;G;@;5!d^SA/m_/#0ftc6"Eo$KF0miYnnIHD9.iE8"l1pr#rmjF&>uDk#3iaTZ80
%;(]0q1YTL+fAV1-b+h,sam2=@[m4f/^AW2P&H]9NZpIO]R;0@5RcT[^T0+_5af)5=)X"5lZDuJtZYA$tM;4`2GC1!Zqho>40?\V,
%ZXdtR29O]eD]E-,9&_I/`TPl06<04Ok&9'@QMh\#ogtf].4uT6r>FhNYea@BEtbAK$modHb3lmeW*-iPYiA^VbD^80<f-1g/$8B-
%3&l7FOmRY_1JUp"Meuk-hgY@ij4/8ko+N3dOT-oqJ$!V6JtFmtD[5VT!$9q<OHtEqp]TK>?H'+)iJdWheJ6t9qF8AP"6km+@1I8L
%<V/qb2lI@oFu&0"/QX'5TLbUg-a24bNN-bh8\qqTpR40TP-IY+IVm+f%cWSoZY3!(5dqEn\BL]6O@;.$(N0G-@S/\<D\QIN@rT]\
%->"n9_6%#T3p[]m^PH1AOBddTc&7tT5AAWQ6J(Q(BR(\`54l-Abd`jMIk;.6iat_D]Oh=AdRg]M,!4he(aN&U8Dt2FOT#rG0IcaW
%:5&@.W=!sHN^Vst;9@FJU=/+B\JfF.W`?e,G2[Vbk,YKOeAXAAJ(j"\^XnO@p[o!7RHhLP#4qZb&,Z>&^]!-IIX`R9R1Wck9<p4N
%%L@+G6WoQ$"h].['mfPs']`N^eK:f?9kM@>W`mNTNLgahBu6`)aCVE&1=aTUV.CZo[/8sr@,6&]\4]/npNgS&72!`NEl#nf4O]PA
%2Z0k-%7Zh%bXC=<8%LTl/1T6o5+Oh69#g5m&u2SLbcAYKSD6l;dO*3T6ljLWG@n@jo7`oXb)ViKW!c3cN*f(ZA_Sjn]S9@ALst@j
%*etK^phgNRZFt+ISE)de;T+Cb^6^kS%KTc^`#li\-^,N%^D*c&#Hs6Nn+Be:kTcd@Qr=HB4<iJ>jKtoQHeh'fMPFf/L2UR#)#1P7
%H+n1<5."20n:#9:i+!@uj5t?N7aVgekln_Zd1@Ic8T7?'V&8]p[XhRoR/f@VZTNphms^:c;"_n(RjSYr#=B&B/lgo@#4b](Tcf"$
%m[pjO?IeA`#,iSo_aTG=D=\OcL<cW<605F"2e'.QnV&d-FsJ7[<6!2U[QZB\B=A>dcqT\(_?/>He2Duj@54e(1URfoC/U9I1@i8A
%f(uff.9\Y3g-TrP;4I8PKoVfuCYKNKs8/t(poE;"q"SiYWqI@)]N(1t.sP0i5pejOCg.%9/HVuuEcHnKCXP]N$.6PgZX!Io(L40*
%EaGWo.YZ6=luuX,I-<0XR7)m-pah1.0nJhq?-_s4"FGjGEHmj9[/*9..Pbg:qAD]ZIO2>;_lnc1Eakm.Hbi]nk_orVE&Ae[P'(V9
%He1uOEmEaD?^"aClKY7e$Gf.T-($QBWG;NLBHhR)MQ,"L/Q(sW]s20kk%<,kfQbR\Y3$oH?blBqLII,BNm=Yn7$3u[\T7(/"cOW;
%(-CnQ')cQVP:.sSo'\`NJN[U4cD=l=at`O@*9b5,g]cdY-3:.ES*mWn@nN#1XO.5(fM-4%;]FM*K/QdOjCsYhQ;6=r8_'MsGu\V+
%!E=[8@pG?\fGqIDaYBPJDK>gTp!"#F3aLmLYEeib&jj5ZKNU9VopcRC:Ue:g-Wd0E)e;u)Pg:_eM$].^@\T`qLnLXB.B-15Z/o^M
%(u%(f/G3c[8fB%ofD"[-B3U-qPpiHoWE1*7P@!u=*5.&jC;[9$/knOn0][3e\Ed'k'28*uP(ZSu$\iIb"`+("5[>1+Qgj3EmlE<@
%,XqZ%87Z<OBRu;#\+<%iAP-f;@[e=]R#>0H+CE15_m#rBF6Yat*et-E?rV]XQ+8'+Y@=S+b"b9gWGr3!bl];l<gaGNZpo`i[dAE'
%,,%`RKIGWN'\)rAXTkWSSI\E^XU7IgZ#FItLjc]P,Y?o_lbO5,+ki+R@AaX`9(L%FD!J"%<SltHj]b"kCeMr`.<nS@01i]``#J'D
%Q0TifgNa#qmI9*q.9%7^Oh6_9`SX!1Te=r&nZ3JUN]a_WR[T;IS$`+tfSuQk%>[pq'o6_Yp5?6B5tkShU(!&V1Z!ml@(1N[P(M-%
%I,WXX";4C%Rh_p%]!a_[bfX%Ml;_eXX]^r7cAFT%c(uamkG`O>W66p:I<U!b?53<XRG-VC3/socU7`U&MU=pom\hi)74paf]?`"A
%T1kS#Io\$E1bFb.:OG+OhnMtSqt[KL5L!2bgRHM2If+;fpAi>4>+]"QB;QdS93,OtlbS\Ib(Z!l=TZYMZ^X$]/ZoVcY&I#(i)/EY
%("t[4"E>9_9-e%JZ$%C9l=1l<Gi;Z8#W-6jhu`5E.*Gq\i6XR'$O!suDMsD"=u[98_a9NX*0s55^-=7VL6GPkd?eT"f-3cl,\)aF
%W\8H@P2TM5N!7)A3'PbMdcsXUa79-ijQVr+a^XnGG*jPR4rfP8ne6t0$nH)>E[e1WL/8(h.D=M7Zs9_t5AHAbFgUmgDVpN0?EKR_
%jgYc@HML;`V6AnLrV2I:a5+AK->a&E>>U.53$HN8)^n`#kUu-rTi$85eZXFSXYAr#*O8^8)VDS9/Xq6I(aZAhnhk9gdo?#K[H":-
%eNaVCqC?hhH9$.RZ<&ohA?&[$kgJ!VeW0A<rCK(Iku>o7o*/E-cCL6_R4^RE-H/q6Rt';9_*Y*3NbruJO*89GW]ik:X&8Q[\\:o5
%B2`phcp:,:Y7i2OKLSg,k0WV=M#C?3=3,VVeECl$k9QDH/Qm_eio"#VdTf%BTOJI8S&H;$PFiGTar8mmPEs^YPEIR7EcKYACe:/?
%JZuQ+cjki>n?PWRQ_F"qH1[WZkQC4i!t\ENYllOORdA]<.ps&kC94]Q7+9>Z'I"'e[Y-o*EL@k(&`9bN:l"&h/0cB%*R;BobLOu2
%1.(p_K^p^mqIE!'o8^gD,Jk6CKiT?lcRi4UF@NHQg[C=Ag=C-TC7U1%Q=&r3.6c.iZ_`CMSSfWfAB>Bt2Up+%P(MjBHLDo/[Y&o<
%ER#r4L#tp%Tr%^fORaNRZh.NodAKg(@7>N2Kgr"O/X3muM?%JO/)ur!@\T]#l&p35eO!=aL7`$*oVKfSl/<l=dg2^jcPY<[CI0^3
%q@J:`hF8tS+d*tm=*qI8:>C)T+H7oY=#qZnP6:rtQAOpJda<X`D@-n'V,f#fdes;DpT+O"0Zk8)+IV3nS`?/so`SG#.GC]@n#^(t
%7DM8+%KeG";QbBLB2&liA2hZL0oDRQgISd$4dQJ^a9,R-(*17`o2QCcj80KW&Z1\k7Pi3*`><7;<'9<3TXV,sk"Vfb:YeQNj7d`&
%0r=Fu%A.anZFl\_Jp4o0BU+80H4rkFQ:bA"X^>%pF*q4!\-3l^%,a.Yc?r=6^;buAQ.-5=![Lo9cTd4%#t73,<IWMSO[kj$%C0X'
%@!4`<6W+=GLPdDOODtf_1=j>*5midCBm-f(Kf<fa6Ks1B4AC/$OK'k'QC:\\I)p-)LbEr\!a\f'V%nja*lk?6^n].V4G\)^3Se,4
%Du$htIPW4Uag-GcP4Ifpn!$e7cch@NPXDfO.+_VDCYN3B7ScML\]qc.9B;\Qq5TH.3btmdH+F*-3HX0L95gOe?GhgdM#ZlVPj2#V
%N7,qRoc^8V?>^J!.:.d32]o8MXG%'Q]5t`8FKm@kbL`u7<`jFdh'=.<fVB)&AZNf$<3q&0@)o85(MY#L:,sa<o<lM$IlZWl0(SCk
%g)mo1HF.YO9p4IKO2@@#CHAt=eq+X&p[sOp0roZ?$?,Kb99alommIY:+`D^ZR<$A#^!TI<mN>.Cj\AtB/LtP2CFr(UV[dCd]4Id:
%eQHJmWFHk5Jh@i<+`9Aq0go<[(@jlW?UJ,('kYGsL12`r->^7Om/nVFpR:pDUsr&iUYX87(bV?;O>FNhf'nL<qlIRt#nB24^O#LL
%2OZ"Kp1tRa$0/\VShENW&.NlM()\Mi[-#!oHm,nq*;(*fpo3+5V^/TVao\a*lYe.@%`0&$qrG)>cUK+=%"3OrOiAj4B^6&Wf"]g5
%Y[9_^MmiTuC$Q:U\eUn'%\"h<Dk^t<E[ltG?>oeWC<NtP?d#Du!I;;O7MC5"lRK3CB:eejq[\/kVWCQ`>!N\&j^.Dl7m&?<"7>IY
%eQlk;FTnBSo])DR]3R8n,hllYX5gc^^R>V?dB[]%f8'Kr&P*QnBb,:<W`qU9/77]I]1up%"!]mYO5V/C^QMmpb@+mHG2_N8m>=/+
%kd#<a9"7e--0ieqEQZ.?.::=(gM#8!h.^95##02"Y[cp/8$rpM29XU__6-_i09iJH3/O[,KrUcbJYc1cLP.;=gh3L!>WNCq-J(Ns
%<C^OWfJ?NO8Eb*2-G&<EQ)^aNj_N[[Im$b:03%lq,3QllD`a2,i[0SVLptAlNis*\iQ(@.&O2%X_@jgN(7mW['d.[g'kDm,e)F[q
%bF"KdF5*D/&jYpX](,MZ^AHr-UEl-n:R+9Nl)c)A^@O,aLA3(uG-PBkO@q`!l%L8Vd[@jq\M`FJ5Qd7S_n"G@B9BQB`S5F=V5UcI
%bGCr?d&3js^8rnCCCAtH6<BeZKc6r$-ue"2AF[0a'PO[L<m?tSWrB`>P:XePG1m*.q2(QB(V33D@sIe&K59m&_7:_M@0/m[:]0rh
%MZ<2Fh2`p*"d/Vn6f:U?HE_bBUg>!T2h]e9`]`kQLnkaT.N>DFA\?/0.71if.5iN]on..6@8t-n$*TJ[jEVc)gGMZ"[<U00856^$
%K'-+#eO/j/Gq5s(@A$pT-45o`%]qmuSBc*7#_.[g"F:W7VgsXM[F39:B,B2es2@c9f5)^N.K7L=*iA-MKXh\3a]l%Sn#_#U[d=7p
%I;@.IbuRT17j3RlLi++b8b=0mH!lguJ5!jF-&MY^.A9TK).JYikcN`L9f48"0sGNZe@5i-Oj[e-#^4GIS#i1#Y3KiIS>r?:]EVI/
%@gnKa>_K!U*Gi6a1p@jDe#.l<_<X9r'<Dl%Yp`U$?khM_A2L"o<,_/nRJ<)>9nYQe_OtT\0M,6tf7BKZN"#`lMIq9Wcc<r;\-.u(
%)g%GhEEM-GQN[6XL+/E1JE1LG/%3;]'`n]i^ue!1PoV\HdAU3^C<I<<[/8rK+8M,gM8(+8/mm#td9SL,Ie2OuT"OBt]]X1D0BqWL
%,uJt)U!8FV=k3;/5nrZ!^S!*q3lWc\omDQ_/k#YpfAY5Q4[E@"Re!>_QITE`9hRRn$8U`b#VtNT/$Th;TMKMp_lm&a,Whs%EHpQ,
%j9F1a;p,*`-JfVK>LgpYh*5gia),F$C=;dP8_4pZHUmT=/E@0A$b=GJmV<+EEgJ<4=7*NmAHiMcVK7p\if.9edl8t'af%K3lR=9i
%B9f1D*lWtI\,'2K0Imu_BKncq,@iD7)h?G&F@5<>T%0L`dY76=]9]9If/oZ(%-cna(9<k&^ZS7]QXCtt)_C&&J*F-a=NI7_I)!T,
%3K\aH'dhjs1='H^T=IVaq\?d"iP.&-KMEL?3>4;c.)5`N_dBQqqgRFKoAcgMpV;&9E*hjM.)9dIWo>Y6r2Za=-hbm12Z5AI.:YFq
%G$%aA"GWUBgY&b!IR*nF@UL#%;1FIuAb+b*+5&0\^_OAGXg$CDaB[Wr[c)6ip;j:0m.KHbHO1e8$>\T*h`^i<;"Q`6%J,gpm'=GZ
%S$G!1K3?><,<fI;n^GZ?1$MZAT5o[i#>D=4f-C;2f)1kucZ>\*eiTX.Gk/DO".,e/@ip-WkOl3</ab(^m^'B4d3)7LeNNJ9L51$[
%5K$<"PZ:F\ZkW+NQ>J'ratdfWe<\B'pLCOeG&!GY%q0):q`/QG5]bSlDatG!;Cf^+kSq[,ST&BnB%g&cDHVk3H*fM32Ara"h8$Z$
%qi;gpFhZUO^VWKB\RF#]:nQ=N`"&gM=3\L600AM.fO=6[RX6V*lrP&<m7$HH.A(iC[UdqcKKJP2ME8JQcSh@0L'G[r=?2W.hng1i
%Fl?F=NqF--XSbnNoe4RpEh<(AGm<]lMBV(US9'B:I-SSH/puq7jAY;7D_B>t;Q=MrersK9lUap\8Gkq9B>M@PWsc\Rn>k0WY9!sp
%rUNa9SR]d`YB-eNC,,G[>PQ(?/fa2oZ+`PboeK<pSR9dtYB-c2BAUQe=6RN!/pus$VnPJ]ocd1`jL'.l#r6lk_.G_'*PrV>K+#H*
%n>k0YYNfD'rCTh:K4>Y2E\)phEq2;F0-';pYq@$^/*'ecng$3i<VA5Xb'rJIS9'B:I-SSH/puq7jAR`!,WKLfcJ"t0UJ&"K2fFH4
%EcZB^=21,0h.\ma0W]dYY'5$]_R7\;A9d=*pSIX#c)EAh>eX5:m^Q<p7L/SDAT4F1E8b";^3/C=YD-tdmPa*:nh!&m*RhjYBIk.Y
%@r6,G07<*&[k<'op$f*[gA+d`j2GtY^Y[q^iEQ,p[k<'o_REhhhl72mY.mrMogg^IfjXX?47o^X^]37lqsg!L/`hG`%Wf;Ad'$GY
%-?s=Z"^=8dBS#0n^\9C!B7nH1*=mT#rcWe8Y4MQFGUnr_>$[7(cdj;Ye.t:f<4P;69&-Z[\&V]3i;M/Oc@!tj/`)Jus0cXbrgqs5
%=!#6lX$=.]c>U_90&qDVRlp+rpY`QRh4hIK9F8=/j?:\4poHqECZ?rN[VhjO*.iif(`o@sjGSCEHKM1/TSV/>C9?ipi&Z37P[Q%@
%l]j$T1>Dqr"Gc13Cu7?,23o87geX^)iiZ!\mCd\&Q9qSBW44mJMQ>4).);UP&<2PIguVl+(mSF2Nf(2[)O5^0W16L2O6!qug4S<0
%D(kk_di$H#>OL)\1Ej($Q;%>6:9\Xfb-eJ\Cm5Z2CN1Bg)N%,F[W;XWg38AZhV]6gJGlW&S]iLF,^0YOVW2W"J^q1U-nIgb4CuXH
%i'XP&L0^I;kplf=[!H6ZPRTa*_RXZDNiJ*SiTm[,fQ0gX.^jss/(F/%GW>8P$1?MVOASTg&o%cciiAl`P$>%[`i:o9fEmjE&XF]-
%2LEtP+J4eGC-`4=_'*4fOo$oL/g3>W<d/0>DMbN/5q14M66Ql;N&ArAGI0fGK!%T8k[*W^893nK:Q5gQ`jWUMkj><,mBVe%C$Z`J
%]>M2@XSIufSHO)F^0S9frjMjccelM;n`h4RSJlT@;;Mr.CL"bC=>\?5,LfP#RgN7<15UtkRfWX%?"b^E@nZHi_BBSqVki%4Tm)1?
%Q8tkYs"3Bi\k;k&iJ!hH2R7,l2@(o9$(HI=m2McdN)>)QlG2O^F8sr0@gVK,?40"XO)4*[KU,,sRZYJ@:5,MpD]!-TnF`$AA($Zu
%NODTW-4?]tSuBgYG]=F&>#0FRBshRgU8WkF'9"CQoC;c0"YrYh.cXC&Vn%eH"';,)NK)&Z[(5cO@,Z:&-m<VVLYI1[)7>bEC)^Tm
%G-OK%IhNnDqqI1MGAF<\@2eHt\&Qq(U`MmlMb%uja>-@\1@5?(2((8!O\2$G4:Rj'mEO]TCmqN]).J*>TJU\_adN>p8OW`Y"`^4b
%+8^'kgp+Mhh5a)fJdL+kP5QMBWKo__Wt]cbq3_:dT+]cThUn1n@.(dq\G#o8^=O3gjB-6^2h-/Jn`i'*rpY^Aq^^u.h&mZb>=NoH
%Ut<(E-AgFo.GF!9FtP.1Vm$#NOq>:?l;%ag?Zo0=XQ+*L?n8=h$$(t]A%PUHe$;Kgno]RjVm;p>FO@u7U<1i]0Sj+s0:Q%`+C7h$
%U1E:XeK#:6D"'dA2U59=_b/H;Cp:fNeI!a2:=sHKX].I6/71?gn`un6Y@QC75u^RP3]g>c8Ed@q$WT8M;meD3<BIP'2D\>`Ui\V*
%]2?"7oi/8Fh-f!@L8qAf;"`jHFanF'LeV##iYI@p6(pFaYCY%%MZ`mY*@/25JV=>`P!"&kkWqLKY-k,PI[1qKJ^Z"r3IX<HO>R,P
%@aA6,IY+pIUF^<GkS'0Z/@n%$<R2r6`m53-j2mJNM\0H95@"ohUiuUCrHOb&!@.%_U5,W9\fnq&5P'XM.oB5\UKm'9cq`N@[*s1i
%nutrs_\kNZ<,$>ob)\W:]@:AYf?k314(QI8J/UDh-(ip=O.4ZJf*C/9O(Y8!4e;o>7Ncpl8<ts'>:$O&@6-dM4(F08?X:E10[>pa
%p\].SK8qTp1e*QUohd1/G9;;1GkFk1hE)qUgOFO7=,rsm]uc?QpJ.DF+KOJ1.#Ht"duB7HW:p?lN(/@:D)&1[b[EtD9PdZAs!6C*
%/%,RT\s@m@%AsE01?#@#g),"@`6?^C*(S.?W\qM2.Zo!Q#JameOq.Yt4!1iS_e3q%`(mP;M3G5`_b<XDK@Nl"$Zo[.p*LS3\(>/N
%iCgk_HqW1Z[&s<7O_hA/<HX`ai5rMN,4gQPTXYh/(>ICCS,VC:_fCo]r(bn-Cud+X[SI_Z-t?c?dKlY79&^<T6:6WNpr$A1.1NdE
%-!K#SVPFcC?/+;!NEcLrem_C[N`/W3Sst7\d)#<WCo!Q1$(-X>3RtJp?Vpga3auhnZn3L`0uMKFf-l;bS$PqQpae+)iO,JOq5q(O
%PsFA[5h1R?[5Ak9Rpm0(O`1G'^,Vu2#2?u6-4I!=+%4&@3ooQ/NDV@CJ*b*,W.!p?5**RF#\unR1p:)odto03F,$olLUm%iO@-90
%::O>`4*NgE2F%LnG$iNr,`ge>1s[>-8u*'3nfni.;.u!;$FT1X)B\4_:/mdCr&ls_s8Ms-+0Y\*_oML!^UF=*/MPIsF13epjXHA6
%'BIDuJ+NK!*``$/8T/S=`m0+I\N<!PlLu$_bN56>_t*nO`X?ju@?dhco(Te)k?dR:0oA>HZqtm=Z"#b<kQGps;GV47\[-#5)S4'9
%<-4mDnlo]Pg3$/c?0;o1C$%F8G/YMD)XTX;'4.'L%AV]i::X@FgO7qKk/X(B4rc\,p@IH(4o1[DlSL6[1iClYgoSu7=f4!Vf[H?C
%lSNM1C##f=\65_L=f:dGf4fX)3F13MquuCC4PH=FA9T?CBZe-kc`g6XCh[Hnh>,=eG;eoZ7`a8i'DKW96_r]C!pD.cS'+C!:W'Y*
%;7:(M!ca7WGWa/r:94$Ig^`-Xq>N02'T1a,&\"&V.X-'*mL47<)/VupQRZ^.[b\ij[d2fl%d[?#]/q)"B=,r4)bGj-Grm;UefZcl
%D&fq:k1dBM:Ub<ubVtJ8X>c(mX>c(Yk2W!tmI7TW+]XKbA^M5<f9B5jOBRc-Q1d+V?Kjg1X2Cqr+kQG%0hXNnF\5Ga#GmuVgSpHN
%Oa`F%:MpD,,BK?UNE7+DNaRe?VB+f1J&=g?@SJpMc\7$Xo$kHP><?'>l<&04\q$=):9<i]`bgMnchCOYaKcC0V,CU`j.:@Lp3D7e
%;l&HcjCk);3ic/7e1k]bZa,O*<_23r[M*f+0l#>'D$g2ZdHr_,gL]rim,ZtSgn$ZS^\$mUoWkk&1EZSpmJ[%%]C2s&rkna4pHP6o
%pg]i'MXq2D:4:gW_J_5A<uZ^0i6BV>'UlF;OA2OU=!@(p>2).QY2U1V&gb-S_Pl!/8p%fs+2K]-kF3N8';TjGk2u,sp19a+VNYJ(
%[drh2Lh:0:U.49:p7bM;U.rhV<SFVAEegJ]![[(:@T2mq7S,al2#hsP@tPQf'mjhZmM$u`d6@c7'-P\tV[#-8<P,oEJK1[e;U?eu
%2@._+!V]^P_Puh9Qf4THVXd8QdeX6B#cBt^CC7+'9"Q.HmA79hVe/Itd&juRD$!4ESSmn.i%Mb]j`,5%dCJ_Mn\mlDpU?R.(W6"I
%nc/LieaSdkRXju&s18.%-`DfmCZP#K/t?`H\YZ?"g`i_7:768j9!T1-E<WEm#(iOr97'^(_l&3GDBQ&hac^k&SI3B`TZTLOcGu6H
%/"5aE`Xhk"21)6WX_UreM\2<O`.E=6,ejhFAPQJ#,/;i0-Mc1X+h>e"%9hiEh@h>R^l7TEYHd<V$j_B*j^T9?5uFX.aVe[pm1`Hl
%<MXT4>b\sQmqdmV)PB.KAWWkmPt>dD\0fQ:9O-VtPrA^[>$an3ZX1SEBNae.ROa=E1S&'Tn]USo_DVSG!O_3a@S>M\8,HALf@>$q
%hc5f73/d*S)Z$+G1n<="bYS2XCq2r($G&9c.Z!ZlpB\7VGI!*EhsEX7rU.S&Dn3sgQEn7hJV;l)I9*o^8MUF[DpqQS7t?dCC`.Uq
%r73,iQFE_/gip!lA(=fs%lsTukquM]BlZD=YTt$mX>Y?\C'.ED,iTb[2M:l:g0NjpH9"Ap>_g%dEQcMX=&D\tH&)hgg(%>^`<21]
%)\7\Nbb0;F-TRLf!RTu/E"[5l"l<%Za:)!mWDIk/^GEU2-V=)UQZO%1r9QFRPc(b:5K!@!p\'X<\3G'7c[UFl,YoE[o&7XDGPa0:
%EW#YD5CM16qRE[(OZd]Sdkpg09iFH,QWo0_(!!k]l\O4U$GXIpa#Q<OXuIKG`U%;U24r@KF+&"tes+K-97'\sh$Ji]\c3p&*%!eE
%'99e.rp(6bNrOsQs$utbJ(gO0rgb;(X)U*PgRgb/9EUZiIQ^9)]TFJC)i<jrldrAW<`jDV,T=QVp=Q0=hkW`dno]R*Vm??_4?iXr
%oSm&c:JpX9?]4I,bL&9:ZkcWBlYonI<9b[=jW?#nFfJuWD8l+A>feS%A#^O$6-B^0rE<^@RbHeD/^3=j<-mDG[(Vs'^ClO&QUK58
%6d]U8R;&AY1f8@"-ou88ieF2fL,.dUd:o?=Zqtkui2*W8U@X)5+'Sj9#ql:U,QHX]U="E8Pp9O*o7:ceah8J^-0X3D>qU.h7IS;a
%<G9]K?+s*u]Q.!=AT`5]fLihVOrfdu'!C7b%R-oLcEJGU$6rU_/mA6oQTV)U>o+41>Ge!YT:ADS$5Yl0S'd8^8%En+AtAntp[>9!
%rSd_$VttgWq;4gDo5CIt<4neUT-e"DM!)7Kf7"^[VI'B;@g+u!q__K*_Y7$<MmXYb'mmC1l]B361U\664"]2=epb;D*SX;"hoXX!
%p[k<Db+$i_kO")8hWF3=\C(&2B1KN(BScZGN,>t-],_3)27:IVj'Wt]jZ\/>_Ib(1iCNUo4.qLg.`,dC_Ib(1iCF)'2f(u.>YXTg
%8)g6@r\I$\.pZqt-WL]l](ZT_qhaJ66F-cTC"b(3b=HkX/<oU3_%'DS@BHfpq70c1cq'\/M83?64;;B`'P;'HR@7rXcBujQR*AHp
%bu!&XFj+Z5X`6-2k37UehIdYMR1;5i)OrT(Em?L_cEuQ#C#PTHOE7;83R]/79Jbj*)p\8p]u=XUMmVH5l&]s5fA!qYNPRX(L3'4$
%k=gZ$1F_K\>L&W@k=ci?R@]@YV@D]^LR^0nffPjbM(1ER1Mo*a3olf&3G7&dc87Lng2P=B:J.8(3R]/79S7D`Kla,JF/D=MR:aa4
%%QS/?S22ae1JOAq*HKF^F3aE"S221+c87Ln=u^/`3+k;5S8%,Ul&]t`_)]u]3Rbo,dimmJ1Zs.;U%i*[Y'(:aSjFT3q7$")Uiho$
%2aKs=Uihnn.:^49bc?Pb5EG8dBBO=&-s,`rms2ap^"aFh^`jiocZKf%'8OcSFiEBG=.INY5Cq2*c6onN_EF9I]EiQ6-!!?`=9Y#n
%:aWE3X^,ZX-IeN`:O-$#ao*_hDdE)q"D_s=[NmgFi0pC^U;\m;JD\u$K$l'@I1O_kX/Q`[-Bt&O.7<D1Pcqb2<'Y:(9V$#XV,4N*
%m=P_@KG2mYEs`9A\W*>9'Y/^6La[X`112/_%dbW7e<oC(&s&=W]NL^J.[*CQ,6c4';0$?4;\HQI8_@qoUs5Z:lI'8Q/kQ/jXV=TW
%5+YY.@!Cd4o&Js=4BhO5;d9-1Zia'>bV.QY33f3\+co&S2+RsWFo1`m,14]f[=2"HXfNuJ/Y>n]J:tBMA#u8m)RCeSa0[W;_%1SA
%V<kdn,;o\V[2a+0QQ$7L,iQT_$k-hM%'J=hdc%.9D;,h4F3#S)XIS9k,t=BsguLgT"-t\V;RS\-5c#W%p?a#HAQ\pM2V;Ffq^F[Q
%s7<j`2h-/Rdtq/a4nn9k]C\QdHp]J:*LX3CDp#*/h]G1t3*L%W;nS=LP11g*AV@K7?_VEfF04DUCWP>==Rq\N0kI=UYU%=iSDU:[
%f<#IZG3e[Pg;;G&S>0soW7spnd[,g!W].h)o:<d.bJCF89n+(o*L<OV)m3U2/2hF(aTo^=P.4FiattZEh)[+:Q>'IfAmk#BfT0H\
%Fu(\pgc6qFMJsUP:"'$F2oB3/Q5XYNL@)4D"]$ek*":"]i_E?"e$+dSl`a2iVI:@eQP/XJe.T7?'(2W_GXsE+1X5HO>2kiO_BH=?
%9ekUg>/FmS_hM@3!O]iT[DYcGnXa0/gL7@2%uWLh(:WOh3uf$F*>Wu]//t=i#89*D8Z1oe=R<l.\BV7f9aU7/Y^@?6e#hoRrkG@U
%ppHi-)^s]Bid`paInJg>gT]_==`M\k3$Io.=0nN?3*S2V-Akfg'pn][R`V1.KG@"@V0KX]jPLH>n@;%6'*=^l:&?J#LPDQ]aU:dP
%_Z_FC"t*<(7gZmj7nJsdF!4RVF\/R^X2=s6JV>XkJ0I4T@J`DF79fj^;eqR<6od6Xc5A8AfiguSfop7"f"Um+-]HOfj=8:`H.:*k
%eBMZuD?+J,n3*GEs1ci.llh;'+^B&$/6ZX0>kTH6HI*gTCtE@-S*q<UISPC`hQ%3,9fH57]I'al.4k@>>+2a7&O^Yc.D_>mH7@82
%<#28C4@`P,\LPdS*TgPDS$Q\]W1n*HOg^Y#l?>6Ig'Y5i`5q.5:gOshZ4uHQ'nKI'A3eS_;&8n7o_3A,na%&'YQ!t+h0#o?\U8Xr
%bD1>JH%InL)C+lI>;P0u4Q-_fqhG^ZGGeV"O8Q33KK1sTk*t9hn5>tdNGYkP+aSZ#!@24YklooX%)N9qr6?jj^^!RI4qa#,F;76$
%dk[Ba9kD8a,mm8"Y1Z0=$Et/7Z8Zep\7k>B_GB$e1ValbS!k%30123LV,qTR*sd=&ZYMX,@Fc9CJu95WZ%s%KXU!a4"^n[)Idg)7
%H0'SN$[0Ym00Q.u@\f7P#(ligf&*V:D&!ZTi)#[->hd\$n1loIl.E@4OW2t&"5GN,W23H%ELH)AUFs2>(/qSCM'I5TkfVCuG3u$f
%nB:qYjf.k@]4.]JI>H<.RV@`Ch<kR\`\Z+ho(0-_Ko=BfS[]9\"MY>\"<"<gl[Hkq\^k\-6N28Q!,K`G'H)Suh,9Sg?."-7Vg1[3
%5&clFnS.)O+F8ki@hT;5*^o5"B;rZj^gH)@,SIqU]Q10`fHol.3?aEQRZ%bFs/gmse^bQe(C)\P7[Y]mLE8ABkPOG\`KYa6h7\n<
%MeqKVKJ2[E]lM)+%K9.$YtW`R$)sF/d@9UWcV?7;$@8_4koU$s8]>6Y!gFO84WCn'G;Q$'eT+PlJ@:MPiE<70?$iB,pPo8LRbm.F
%qA:KZ\NI9%*:J0!^7;c(XoJsO+="U;>m@>a.oZ#miY]deo\-^]n3$ijY%)tpj#U9ID7k'$r%=mNXZ_(@E&D>W]"O@5P:M2Zh&0Op
%drl=6%U(nFQGUA:B;3@'@T$?c])pH"<rou&j`S+MRs/f>>:Wrn%/dY)NITdaE3`6MjF)I.nSgl;SEPV(s6VsTDdBnnmfi8(mRr'Q
%^g;!Tc,W:fJ-&JMCt#,,>,[>G2(I>ggUfoRI6$A9O[iSJNjNR@HFUcP*6nf2iLJkgB@uA-W=D95PfU#cA\fZ%ETUF;76QoUSrZs>
%Pgc9Y6iFYZ0fQ[\TptCLBSdXKD]!B[e3`=*@VU#6d^_;N/6a?j=f<_GoDis>cXT$2NBT\aOC;t98%RNMX(pb//@gKK3_4g'hA+p9
%)0=)EH8TXt[E*%%9^_6:pdB%1`74FD8LhbED+hj;4TgBYi]M0di>fKX@-kI`8]M,Jd(oETm0uGY7Po#DY=H6_2eEQ41_49LE@pX0
%e1Pf/5Smt&6-"n=a2Pk#C_PIu&e34/fKZ[dkE4MrSIU;IF,Tu\^LFBFn,/L1)dL[r!6Ys_lkAAdVF[VeF7gRZ]^%9U1GF;I`jk$<
%4;5CqW4\>fj3YJC4FM_+>TRf:m*7M!G.jeX+5:*RQUE+h*qnmr\BMm5j]l"0.b'_ALQT7SZWe3D3.-"+1snH[I?'OI0Dq3+J31@Z
%LL%UXkMX'^9I/>NBD#-HDC"qm%85o<3s=a[R/S;F)aa'u"d1F1A0^/jim*)c1O2[Y(=H:,^_]k@Jsg3XD+$4n!MSP=Y"%G710TpS
%$f<+MAg-G&!Mp<KDduM$H40"s(ZJ#Nguth#@/LbOY`;O*^@Fc9D@LtiNHpJdK`:W/j^!(#B@Zn3ia;VaTGq`&g<&J+,7PI/\]$mJ
%Oh\__FW!q1KrtfS-Di-u%T==sAms1H3(^&G2<!#V,`@ip[26NRa0I'qWA+."cj6Op<Z:u]FV):^AAM\hUY77m^5Cs)RO;joVa'\e
%`uAbACUO+ED''MIYJp3NZ2IiA*8@[9p//*n>&:qhgTT/ee?*)_&l=+I$^7b-)X]GC$0+7GmY!5W=`Bb^W&>$IYM_ZUC1ML@%mC#P
%",>M;I"rn=qXB"C"#j:;2WOBp*]8$OA3=p=E1#@X2@H:__#^567#h$7-dCX-6OdTI"%D+!EaeO`Q:A=4ZfRYm*2YWoc,/P2bucYW
%8(;YY=FuB.$oRHSW2<pqmemKPHNMpTYN*`V_pl2'U$hm5?N<d%Y5O5RR`/uqg'^q2qW*59PA_*QkqqkD`dcJ3@_R[)$4^"Hig**s
%.l^D)7A@eLie\s(*B2JEepq?.&qC@2Sp3oG)sYB]^;I0'%TBt`$OD=NO5L/7(5Nn#ktcoM$&4niR]W[e+DVSSAWsN`GhL6.XfV=@
%CDLZ1P;St7![DJ]=gOAN>JA5%R]NU4b*j(c.r2G<PEe".=d,+.>F`@JR]O4MUO2k*"*lBu^D0aUa.$%JN.u=\HcMl;7&s24l<:JQ
%a\WXR_9*)i=hRZ+S#i4"""Pm(=lCJR#W:7FjadF_X4l1q+p@TEW%e$ZX7P#iL2?$E?>u:c'l+MugTta([Ooh6:Q!+?L>!%-O,Y1<
%_W8>]&o2'9[6LK>37\Qr4/\Qb?aD>&VGC<G;-.>8Z6h);3lmbDHJW2W,[Rd^-7`jmaI7ccg13o*QGCRVI$aAD.E9\cZMRe7/h?'Y
%UH[.OZJ[Dop9UFYIMUXt@]`8-p82#`C8cujdE3@<ZAKG'Bp1E:GgXYPXfV%8CD:N'P;Sq6![DL9k#Sg0X6js94[87L'^LOu):\$.
%C3FL&_q\u^\(WaLGWI]D\'ue,hWh.#\lZ`3CB^K:'o]k-=E'4REFJ,RR'C%6<6a^/[lE5@HSIhran2YM-Z;c8KKWG4oPEVg:BMY=
%S=gR/eR\MK0mbP`MR.Mldt"V]EM</:ph&#uY>'RcHEKR@LMqKco^^0o\;t96`@PUd\3MKn$t^-PM&f4I31m=?ePKh\L:qOYCgN)+
%p-Y\nXr`HJ7n.Jnl8Ncmo4h,!]q#trcBr!Z_J/PWVfaN@ns4piX^WgHApGmEgL;`f>I.on;mY&V=_lTI2.HrOj]-(S27qRF<tDX?
%aZO:lXD9Z?Wh":_cFS=hF]GBjD:[5N942@;?"IRfW-1:gL'OS>F[5bK&l3MkW,Z70($@"_*ADlrWER!7<hi&`De8SH=bBN]S#h1Z
%o2\n1Ab?:2]hn<iXSu19PbW+nNbP5<D:qK^ehpPJ_,:f0DcgtGg8K2CQ*nF?K1D[Nm.a#-'+HhmCrHl04/\j]"4>hRB^J&iE3((9
%G"tPC#GSU.dFs.^EK[$hJmDrV>?mPCK:,piR(4LbcHdjGNgU>]+T#Yc8$H#?=F1]5:-:+LCIW!i!s<=gS>G0qF_CM&G0X9Z@dT5m
%.71.QdA(_k#u(!4G[Mc]_5hQ*ls<C#Y9n-n9q76&i\37`C-6k%fuus``p4-KW@Sg_(ht_F@#M`WX*Z`+<GZKOfVm=/o*LH-f4oH3
%>(*MR?`V`/AoZO=eQ6D\eX8VL8;WZMMWYh6p?N-X$'+6V/o2,fhKqpJX:Z?:=(hE\D>cL($[^i3f_p@HDt(.0",U7__-q*<&$SRk
%Xkn<';;USAYW0Hqj1-I5A1Hr.fdr9=]L?Eg2*RG=,uJ2&Ci^!=kA8>4m1Z]`@&Sp1jjeT2miZ-7Jlosqg"/J9eQ_pnX79l[5mBj=
%&Dh@!eXoqF@peoB2+,'QY?WL:P8\j$<aUd8f<X=:IC4.Mhuo_hfJAgW@0n>KHBTB=edhJ-*=+EA_e',T9mpsIJ@B^;+7+LoC4<Jk
%rkoEd4(.se0QW-[oA+<WW*0Y2<qh?4WAnKJE.NC61DWY9&iC[oQ@Sn(F`.-Z#;56T`,BTr'u-hacCHKBdl:g&kN),K$N`,5LP)uY
%6[J]aOH@J?`NeN"B,G!:%>ZNJ5L.R7iMku/+Bb\mLcA1rVS<F,3M*8ZA#Clu+\FaVh!*+/FCs%d6QY@t2(/<TL;J)9FU9fnC!Qc&
%E"Ut-ECRe^Ouo0$H1aVYpdD&Jcq;X[a"(+K2]"5:C0<7$W2-Jq)I3X/lpGr)X9W#Ye1rL=*2bWt%=o-8iV%H51B>\]GpWW?ZaeDP
%G[_hW=Pc(k=(=b3O?BnrLcajd+ZY\MSm0H6MS8??$RgUK#AJRQN<q7I)Eq4b6h=ts>FORKF7>4I0595*K,m/$9B"!SOZNYLku&iI
%2SK^8(u"#eR(f`JS'=FLB5@ra\2:TJLMN=$^-5i=c'<lF]BX*s_r6s1]\:DIA[m&BH]&_-9u`2fflMp^B3gJAH\gG"H[d?op>Ra^
%^3K2Gq<?o0c!=+R%tsBU_O#I9$3Hf-8TX%>/#3lBn`30ur2h$TAolth@F^/U3]1';;FS6XBRH8'Tq-^X1QK'&,HWbteeKOMF94Sr
%;E:Te]8LPL6RB,+:`Bbm^dHem-PunP*2bR&G_'lrgS/<d$1me!#GI&Ro7TRqI?\A3!G=$:]"[=Kcf=gA"GQBr29lM`2cO)p`G$;s
%Rs3jH*seI2.EGSY6%gL*$ToJp$ACbq1k$g.3GK!K;[rg3ofp_H<i6=H"ktVJDKX%d*RN*Do/!6%B^<1<(SN#3F\hT`qc;Xoi(RIN
%Sthe[\=S4j9U=rK4Kk!^V2/bSF7gL<EQK17.jH)E>1t,"D6&8u6NWi)b<`^UmF81lZ3kh[')HB\1CN)I^Ad*^jdYG25J6saiVK]i
%-O&m!7f*6]6jm%:nV0%_??guY^)Kn]aD9)S4uIE417g5mj.nnlI%C#?EJa+#C\0b4]rGM0'RGhd(RCsp$@@Un".ULFfh?'n)0*4*
%U-(4SQF>`W*N@`s249gJjpOhp4HK1q?JEne&n@?I`H9WOruI)T&nmk4j+_FF;5HZXFc.9)2IFX>37H=c3uQbEB,\;FmZOojFO/ko
%$/>X?_S?h>-TFoI6uPjR]31HrH^X06T3"X>4JEO)2Fcu?b+S&,l:V:<khWP?SD&@3\'ccO-q?c\F%l"N7<jpB>`'YcM3U[`Q<MXk
%G>K3MXj:S'\-pb[B@c=kBt2kBd.NVd[VW0'Y&2lZ328-C"LsmZ.YcH3W7M^8*=Gu<e<+h&2uhH1=!m)4g;Ud:U[pDS(M'9kiEXB(
%Ds0-62MgAI16?Q'p7ZLW]A!`SkgR6K+.p%\!oqIYC,fK]mWFJ<\@d-7<u7@kIX/-BJ;=.FHCd<D$_H.t`ISn)0rq!7/LW>%RF2hE
%@<*fE)4NYo&kWm;F^tTcU>2stkCZel+=:/D2$`!Z\a[QTIIqNYW$!7=-`Q(?\%c2<5eX:u+<cO)L0WU1@Z4klI][9K9WkQU@rlYM
%Mu1fpQ(b=Y+<cNhJ*DQcR:`M<\r;=D$+[JTm02K!1ipY4F.d:C$?W'Q>FF7LnqO=RaA<6OL\<K:m45<;+FiTf#-DC2'bqDmj(nIj
%,%sCKq1E!V^8c]e;*dNDoQfCGMQ[a0`8l"]=hZrU[%`/>>YZ52S_dO?5sblq)Hm5S*>mZAh$1/7AYAk7j<ftgo(s08)Y<(0<`Q#i
%TZ3X<8jemi[S#g58153-?a^tLCm@t!:t&9Po4@^V2@.tcWMgpd=/)'8_\Y8aaAtl$"UV^`k0*=4@]Q<!Js]dH0jiKG"L1s);*dmY
%7PS8)0.)?!>9t"!,ifF^k^jH&b(H4+b`P6/J?V9j88MaBpH*Kf"N6;9@#1q`TVNTj`k#&5gkcl51_gHj?7E;R`C8Ou(Ios9Y18C:
%8ilGJi4ug;8;=EL<032omYQ8)nO:^HprSt*1a%'dQ[(mkb'3d(O.K$6"UR3]A="pYicuE.!AP]?kP"GZ=Cujp!sLmo!lJ(K<')eE
%#uh=?&Wi\%PRm.md+VQ);*j<jcO=!t81Q/<+3)q'<CP8l$=\%U=-g$>TN5$RO;!%Kpkn'H70PD+SO]!L:,oAS+Rr*8r`[#sdC#^#
%KNu3)Hjs&6;>V5meLL_2#:;B\<1e+/hX?qQL'Xc44(#=5'^dh=>\*e`,uKcQIU[rn9Z*T,5H1S(+m6feg.lWsrM60>SE^7s7)KhS
%/$aV%;*dkc^HNcmB_\<G7Fk6a.S.X+0o2.!'C."\'u]2&5U@:9CL"/I5H1S(nU?W<7)LqgZ$oSJ5sk!Ie1Q44$MjQLci_4^h5R8'
%+T7'sn#q1fp#3&(BWcdX2)K\]M1S4J4PZ3qlul>HHgnkn+bpO<DXQOGb%2qj,Nc<IO(hot`k9=A/RD;CKkW;,Hr_&rC1r'fZ.@>W
%$?VUR69eB<.Gjn-n^`i3:c4Y6;^8ubRd@`<AFHWIc_.,o=\\&,e4>3nP\+?m7[$sj_@'_3-H"IQH.(c/eRVcu1+Y=$(7P_j9npV6
%6Wrr\-Gs;V@BmqYfOS*#1+Y=$^*9$Tm`?e?JgN-/)&A\MMbSrF-Gs;V_68*A-8.7p(7P_j9npV6_d\hgCU2(MaX06^-N@CMI)>-/
%pk#D2NG^crCkg94H$nR\_FH>q,KV^49B(Sn&J'o].N[od9H"<\n'klGq:sRg:!;UK:^IY#[4iHjAa821mfQ,YpPQ7E7gJl)o.eM=
%<IMF/!kCW,G]slYZX9q0"E`/Af.\jDE-*jXOE-X!Sij&VT?b?1ET.)WpEaaCGQoQPL=&:>Qb:fd#?8)oYd=YP`l9+Rp`g`-A-3d?
%V):Aor0.F`H\9@Xm55qPe%Il&6>C3F&#28[lf`AWCAV!eR#+Z]Q=eZ&P1jRoP@As:1-!I54"5-Xc%A.2Q%Ai,S,&%+ER@s"=G.4p
%S!995n;piUjiF;=fp%Ij?.o"L26=UI)m&+tf6B2mYKcLsBd9Ee>"O!R%o5bQ\ms=:Z1kOR(<rMMU-*6+N0^aA\DTgH4K!m6-I7T`
%87<mJU!CMHQ(=MhI)%Pm+mR7[Z`2JVSi&@6[$FBM,.'0tV_1+a7lKJMVB":=Q&T-SUP=SrMQ)d,:n)(o9oYceYhDUA[5:Ek.m5KM
%pi:Ybbb?%kg-pG^*FSP6hA)cG9St]nbK_jUD<H@('7r<u9Uhm0S6SaDk9$%Wp;l#H"T4CA5I0eu)q`e&Ej^Ar*uYgi,DVpO.u9G`
%J.r+m*mO<o-Eo>!Xa!N<!`JA6>!/uFr>(J5cg$*`%F*5JAZR!D"J5`nNusGr:$0kFO@!gW2W9i+/BqfXT%.@(m/\Zc<i5,jJCJfZ
%(;0/0B_#(elHoZ2U<0XlA6<Y'/2e@]Rg`lIZ^M;\9npV6_d\g<Z,s6&AGD$unl%g=d/m4GabrlJ`?rK3P@:`<i)dQ[P8B\sMbSrF
%-Gs;V@BmrD2;.&gJCGfWZEotJUic*iFlO82NEb>#>?Ee$3T#RU%Xt^$gqpdF$bUHebJl-_r*2,TC#engpQLr'><$NUJo9A\^2XOn
%E=9t0X_9JV%Xt^$gqpdF$bUHebJrpNU<-2[o&KPfbJl+R2f:oK@Ba\*!cQl2Z>hC`%#[i7`?rK3P@:`<Yh3L]MJVjITDWq_o!36C
%a,O<MfJ2_3\%irlY\`*p-8.7p(7P_j9npV6_d\hgCU2&XIe%"EaaT'oqdVbACHU;=nRTu9AA?'Hr=Vp"a*=oAGd?5eae%P7IYfHL
%c[3Y*&Z=U0:O[[Ufe;l+IuGb%N@4TdT'SJ/m$Dt&?fK3,(f0iD:\K,tflK:/0Ce,,7$F8@j@Ag*r=Vp"a*=oAGd?5eae%P7IYfHL
%-(aIanRSinAA?0K4i`cb&l8L12#56hIOm_:0C`S&N$it3-i6&uloC[(Q[#fCilV0::\G]&p3SpTF$/,/n`6lCPFl[^K5:&8q__A6
%!TlJ;hjWQjmFCrLY:i,q4h6n'I"Ah"`XOla7$$Rt6_(3;["+_cOAc]8h>gGA8R`>q?#<l3:S6PWTGhKo=Y%KprnBP)RHCoo"*BON
%ZrtQk:d2@NDGt8[\8_AfjRAn1lI+smn2E81g^74gc+(S3qNX@mDXQfEjY2MZQ*9:gXEYu#K>9Q#io%_:_kH'aj9Y8[d)po^K:ZLl
%Ue8gagXt9a.[4Ah!,e"ned`&N==GCe65Adu1Kte_Y,>&"b1.:H[uA8m_iM9'(WUeF7<,*]9`7i#2=Tk;:Q#1j.d7r$]]OS%Wlc]W
%F(R<B#d8=2WP]k&]0*MK,,NkKOiWS.O&DG05n2au[UeOg;^?+4d,d$f^,i^pqE_DGhK66lT.f+%miCfkXSV$]negRYkA]ic$%-oZ
%gYS5ZV?RO.Le1P.n],Om`kB'69Q5CAh=0GsSs%h7LQkP8k(u(@Nq2ZXP\uli;X@CE]BUi#C1eXaj-JrYTdCQm8Y>2;/m`BN4:7jR
%pb+B.i=%!\HjVBHrm61pA$0oH]f.rFl6;mFCE'3'D,_56#*5`jPMc5;b>pq3gT^qsUbUoucR'sJmjI5Eo=]B*jrX,:c\ub5]#DW6
%<IVe7(%8CD&GG05?tROKLJ'XuCC"?,ODhGio/9(?Jj'"g8.ok,eiap%"]Mg\c7Xo-Xg7\&Ia(/r`C#?aJthU;?Ysj\LK<*o;>.TC
%?<>fAQbI:%8ACFAWEMS0FSPiA4-q7g?>5>&HhRC!gXDd$^&7EV?%#hnpl7)CeDpU$5&_X0ioKNlBei^_1d=\WJg+Rhdq>`IZW5.i
%M[u.[A,O,CArnb>gn_t45>D&$+2gkNeDGG%&V6+g$U#pt`m6-\[4.<PL7Y%09`+:nDZ9A*eVD>Y55REBcG07C\*mX1?>hZRG$iV1
%IJ;n"]>+7QklmgP]79aNpM[6br33LcB]$Q&n]bG<K8Jdt0pji$WI4:epKjTi:DJj$qg6,[KM?S.7CY:!m]h!En_&S60E:n6a7lGC
%pLuX,"5GIjDI;k%8p7%\2dtO?#jZ@8T%LVYpuH=eI'R(q^"@;k>0"k$"_EZ?q).j8U#LPb7!'_8fIUaenhX3^ZRkeDZ6f\Q'eI`s
%^\R-bqUJsABo5*3oamGQ?D@6k'TMY@:6t+8`5>+-s"/uh?4HqeCq@)!\soqlPD")$j%bp(DR+Yi>/It_W$-chR2I3H0%;RC:!:jV
%);%BQZKqL=pGfE?r_OO%fGm,J/m`<s^7P7-RON11E2hVZ:WgI*RTnkKJm>Hc`6S=U*Z)V%H<dokIn2qNgXQ*O%Gb;qY.Ji305TiE
%]@B@I(!PGAK<oRWRoj0QEs>D`W.NWH`J0^/l)i<PAGGn.bqa`N?hGjS:aXen:BF79>aQNDA4@XP]sab_V$NCSh'0,GhlA39]pD,*
%,1p/_g([@$8/Br1D9oSS1HjQu_9i0T[u+J(Z-kqgr6mRo_ep-G\s$1(9eY7ueSW_!\nQ<CYj8%6FjnOFBm!Xe\ntX,2XL.fBQ^q4
%XIllr=$->!gSK]*rr&BDaj-p\fd-Hr,/pOO)fI(:`c=/mg+%_Q#*-XQf"4Mr,7BHp;AV:e'4T"=4c]@]ou)QBac5S@5qSpSS[WII
%^8+:><M"?l%&NMNhIrtQ2E:4r*6?kR&X%!gXb*5`]\Xg]/5;%KV\k#^S7tEejm#4'cc8`q\3g=kZjCK;e0s=aV^+q'4lTp,%pfo+
%LP5e:>KTXH4GD]K$]4\J1IN6*\+BdrW,8nd2(;s;n<#L3k_@W`QcmZ#+'q0)[.BqB)/G&;jL6;c9_mD,j!8-uq+4?p/Pu`h/RQg6
%VZE7ZUL38*RJGV.[?a6fV)R-BbM'E3[/B8VDKi[7,O3UA5FfH9qu6Btm_&;n_fpq+*IPE;--qY/k%3G_b=mK7%.mT@s/p4b_Se7V
%pi\O3)okmEVEQM^pO6()pZ2k?^DTtm/4_:=;<PIB/'gGeQ5C,gA'@YHUbZS+`e,2>JZ95e:M@qJ=pfN9WTPd$-Qg!YfXkl$,,4pa
%ahOEAmhEotG4P$2pb6tD&5aUFV?unQon64IKu+Na=?bG]9R[WQ&V]V<UdY'N0m"_2FNN7b88'%$oe/4l@$slHM2HO*l>%G?-c8J'
%>)/75!RV]o0=mneW"($c/JW!lZ!5/t3^i+D(Hu^]If"&M0;&:+h;t\QZk+nJ?iK]qFSY&.3^:r?k`8Ilh`ZJhiU+8?Vt])`rBGrX
%Os'\r\,Z*(J,7DSr'.sc)?^~>
%AI9_PrivateDataEnd
