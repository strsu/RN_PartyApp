%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Free Set Line 24.eps
%%Creator: Adobe Illustrator(R) 21.0
%%For: Imola-PC
%%CreationDate: 2/20/2017
%%BoundingBox: 0 0 456 696
%%HiResBoundingBox: 0 0 456 696
%%CropBox: 0 0 456 696
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 21.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 21.0.0 x223 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c137 79.159768, 2016/08/11-13:24:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Free Set Line 24</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 2017 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2017-02-20T14:02:53+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2017-02-20T14:02:53+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2017-02-20T14:02:53+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>168</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAACoAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9BQNLK1tcSagGnaNXecS&#xA;WyKG4jbiY2kA61UGn3mhQyDT5JJLC2klYPI8SM7gUBYqCTQeOBKV6jelpbm2up4raEEIvGb05OLg&#xA;fvGrxPjx4nrtv2KEy0+T1LVWBLx1IikJqWQH4Sepr898CUJrN5LEOEfAGNfVZZJzb+oKMAiOFbeo&#xA;qfo8cUNaBeSzRSROwkWMLJFMJPVLJLyIVjxQhlpTp4YqG/MUs0dh8FfTYssxXchTE/Hbv+84inf3&#xA;6YhSh7JLe31KOHTkKwsSbhPTESgcGNacE78Pv7V+IqnM8vpQSS8S/pqW4jqaCtBgSk1vPfwzW9xJ&#xA;AQLlo0lYPEQTIp5GoYl6PTj4LXphQnmBLA3vdXcl11J13Ysh5VqPhI+Eoo3aop/LhYsz0xnbTrVn&#xA;JZzDGWZiSSeIqSTvgZMb8y3OvJeSLpzKaOBxadYqL6an7LyRinLoQD3r0GEIKeaHJcPaMZyC4YDZ&#xA;zKv92pPFz1+KvjQ7V2wKEF5mnljjk4tTisZRTuDu/MiMkLIRRdiDhCl3lqWd1Tm/IMrl0FAFIKcS&#xA;UUlUJJfYAVxKhMNXMgt41WvpPKq3BHaM15f59+mBKU6KZEvkWNEjVpp1cRNzDQoP3TH45P14UJ5q&#xA;UskOnXUsb+nJHDIySEVCsqkg0PWmBKU89Rtba5POSFYEEsRfhJGSeRKsxXk3Jk3o1fj6DChPsCXY&#xA;q7FXYq7FXYq0yqylWAZWFGU7gg9jiqnb2trbKVt4UhU9VjUKPwAxVVxVTS2t0kaVIkWRq8nVQGNT&#xA;U1IxVUxV2KuxV2KuxV2KuxVzKrKVYAqRQg7gg4qpw21vDX0Ykj5fa4KFrTxpiqoyqylWAKkUIO4I&#xA;OKocabpwpS1hHGhWka7U6U2xVAyagqXbSF3WAOB9ZO1sI+IBDMfhrzrv47VpthQmqOjorowZGAKs&#xA;DUEHoQcCUovdSvZDdw2vC3+rckMsrgSMyxrITGnGQUVXH2hv4d8KEZpV491a8pABLGxjkKkMpIAN&#xA;QRTsfv6VG+BK+7uTGViQ0kkoOZFQvIhQSO/xED9e2KrdOluHDrKS/Cg9RgB8YqHUUADBSPtAd6dQ&#xA;cVa1hrldOl+qki4bikdCFNXcLSp6devbFUs8uXN7JMRMztE0R4szmTk6P8R+LdfhkUe+EoCb38ss&#xA;do7RMsb1VRIw5KvJgpYio+yDXrgSla6w0V7FGZjNGai43ikCrxZg4aMJQVTvv1+EbYUJ5gSx+61b&#xA;UYZ5rT1Yi7y0inAoI12qGFCNq716e+FCfxhxGokIZwBzYCgJ7kDfAlAzvqU1xIlvxjhhJRn5gOzF&#xA;UYbNFIAByOKq9lNcSRstwqrPEQknpsWUtwVqgkKf2vDFUJq2qXFjNF6du1wkit8CEAgqRuSa+OKH&#xA;aRqs+oSyloDBGiqQrENUsTuCKeGKou/eWOzmlhfhJEpkUkcgeHxUI8DSmKUr0WTXPrciXcplhJ5B&#xA;nhePYLvxJoAS7Cgp9kdj1KE5md0hd409R1UlI605EDYV364EpTFqV7yWQejIJCKosj8SHIVPTYxA&#xA;Gh2O/j0woRUui2UkUcdZVSEgxqJXKjiKAcWLKRQ+GBKORFRFRBRFAVQOwGwxVDT6ZZTzCaRCZAQQ&#xA;wd1oRQVAUjfYb4qrQ28UIYR1+M8mLMzkmgHViT0GKrbm0guV4ygkUI+FmQ0bYglSNj4YqqqqqoVQ&#xA;FVRRVGwAHYYqsubeK5haGUVRqHsd1IYGhBHUd8VUbXTbe2kMqbuV4huKLQEgn+7VK9B1xVFYqoT2&#xA;FncSxyzwpJJF/dswqRvX9e+Kq+KoQ6TpxiliMClJ2DSrvuR0+VO1MVRSIiIqIAqKAqqNgANgBiqD&#xA;n0XTJ5nnlh5SyEF25MKkAKOh8Biqva2dtaRmO3TghPIipO5FK718MVXmGIyeoVBenGvtWu+KuEMQ&#xA;k9QKA9ONfatdsVdNEk0LxPXhIpRqbGjChxVQg0yzt51mhTg6x+ltsCtQakdzt1xVFYqhItKso7n6&#xA;wsY51qootFJ5bjatfjbv3NOuKpXL5kvlS4uY7APYW8hjeX1QH+EgEhKe/jhpFp8jh0Vx0YAivvgS&#xA;lN/rLW00yeogMbKqRemWYgoG5E80FKmmFCN0u6ku7GK4kADvyqFqBsxHcnwwJUdV1GS2Ajt15XDU&#xA;pyRmUciVSpBUfE9F+1iq7StQa8SXmArRtxGzKSKD7SN9kh+SEVO69e2KqmpXq2dm9wxC8Soq3T4m&#xA;C9KivXpXFUPp+pzzXZtp+HqcZGoopT03CH9p67nfpSncEHFCPml9KF5eJbgpbioqxoK0AxSl8WqX&#xA;Hr1kiBtpmjW0ZCpLcvtmoZuY/aHEfZ64oTPFKWLqrvchVlhCOitFAQ5lJZlCl2FQqkMP2epxQmEM&#xA;qzQxyqCFkUOoPWjCu+KUBcahePqLWNksfONOcjy8qdtgF/1h/n1UIuyuhdWyzBShJZWQ9VZGKMPo&#xA;ZTilu7naKNSCqBm4tK+6oKE8m3HhTr3xVu1maaBZDSpLCo6MFYgMPZqVGKtzTxwhS9fiPFQqsxJo&#xA;TsFBPQYqluka/BflVDcmdUZWWORF5MGLRksKVXgd6/RhRaZXUxhtpZgORjRnCnavEVpgSlcuq30J&#xA;5v6bQfEBKEIRmQElAxckElSAStMKFkvlp39aFL+aOxuJPUktQkRG5BYBypft442tJ0qhVCrsFFAP&#xA;YYEoG90azupDKV4ysyNI4LjkEI2+Fl6gUriqLt7eG2hWGFeESV4rUmlTXviqF1DSorx45PUaKSNl&#xA;PJCRUI3Jdq0qD0J8Tiq7TtNjsvVYEGSU1YqCFABJCqpZ6faJO/UntQBVff2S3ccatwPpvzAkXmpP&#xA;Er0qv83jiqGtNFit5o5FEQMbFgURg/xKVpzd3PHetPHFCPmiWaF4nrxkUq1NjQimKUEukt6ztLcv&#xA;JByjaGLf4Sm7VqSp5MK/Cq06DbFUwxVAJpsickWVHhJPBZY+bqrUqgYMu221RiqMt4IreCOCFeMU&#xA;Sqka1JoqigFTv0xVA3GlSHUGv7SZYJ5I/Sm5RiQMAag9UNR23p7Yqi7S2S1t1hQkhaksepZiWYn5&#xA;k1xVTu7IzyK1UIUEenKhkTfuFDLv7mvtTeqqnp2nTWk9xI0sbJOQRFFGY1UqKbAu/UdffFUXLDHK&#xA;oVwdjVSpKkHpsVII64ql+l6Fb2DBwQ7qqKpHMCqKV5UZ3+Li1K+GKKR9zD61vLDXj6iMnLrTkKVx&#xA;SlaaJeqrRNdxm2csTAIWCrzFDwrK3HqaVqB4YUUi21ezWnxElzSOlPiA6spJpQf59RUJRiOroroa&#xA;owDKR3B3GKqMl4quyRxvMyELJ6fH4S1CAeRXehriq+2uYrmETR14EkUZSrAqSpBVgCKEYqtlu4Y5&#xA;PTbmXADEIjvQEkCvEHwOKrbXULS6eVIH5PCQsqlWUqTXY8gN9sVRGKqAvbdrgQI3OT4uXHcKV6hi&#xA;NgRXp/XFVfFUHFqXqNbj6tMiXP8Adyt6fH7Bffi5PRfDFUZiqVDzRoRoRdVB6EJIQa0pSi+4xpFp&#xA;lbzxXEEc8LcopVV42oRVWFQaHfpilqaeOKnOtW6Kqs7GnsoJxVdFKkq8kNR0NQQQfAg7jFUNqOpR&#xA;2KxM8M03qtwVYIzI1eJbcL7LirtO1KO+WVkhmh9JuDLPGY2rxDbBvZsVX318lnGjujSB3EYCcdqg&#xA;mpLFQAAN98VUdN1i31AyCOOSIxu6D1ABy9MhWZSpaq7ih79RtiqOxVQivI5bqe2UNztwnNjTiS4J&#xA;AG9dgN9sVSWLR9UMs0kywcJ5TI0ak8qnoa0C/CQNqGo69w5QyBeXEciC1PiIFAT7CpwJS+XT55J7&#xA;lw/pCVl4Mu7EAJu3T7JU8cUInT4HgthG6qrB5DxT7NGkZhT6DilRuoNS+tie0eMKVVZEkrvxLHsD&#xA;/Piq6ytHhuLiZo0j9fiSqOz1YFizHkq0ryxVWvY55bWSKBxHLIpRZSCQlRTlQEVp88VU7DT47RNj&#xA;zkoFL0oKDso7D/PwxVFYqlFl+li1lDPZCKK3pzmEyv0hZPsgD9ojChN8CWLny9rhqWNkxO7VQbn3&#xA;pH3p+PstCimRWUUsNlbwylTLHGiSFAFQsqgHiopQV6DAlB3mjC6ufXkmaisHhUcgUIUCgJLKBVeW&#xA;yVriikbbxOnqO9PUlbm4XcA8QtATTsuKUJrVvczwwrBH6gWQGVQwVuBVlNOXwn7XQ7HpQ4qqaXa/&#xA;VoXQI0aF6ojkMwARV3ILDqvY9MVb1Kxa8iiQOqGOVZPjTmrBa1UrVetfHFUJa6ddW+piVQqwkuX9&#xA;NQkfFo0AATkSDyj3/X2woTZgSpAJUkdRSo+/AlJbXR7mLUZJWuLgqCpWdmjPMDiWUrQ7Oag7ClPl&#xA;QoTlXRuXFg3E8Woa0PgcCW8VQt9qunWHD65cJB6hITmaVp1+gYqigQQCDUHcEYqslmiiUFzSpooA&#xA;JYnwCipP0Yq6KaOVeUbBhWh8QfAjqD7HFVzuqKXchUUEsxNAAOpJxVRtL6yvEZ7S4iuEU0ZonVwD&#xA;4EqTiqviqhDf2k1xJbxycpoq81oRShodyKdcVV8VaZlUVYgCoFTtuTQD6TireKqc1zbQU9aVIuX2&#xA;ebBa/KuKqisrKGUgqRUEbgg4qteWJGVHdVd9kUkAtTwHfFV2KuJAFT0xVRivLaWT00erkFlBBAZQ&#xA;QCykijAchuPHFVbFVBL61eT01kBJ+yd+LHwVvssduxxVBSLfWM80kEH1qOUEj4uJU8mcJQK1atId&#xA;6bd/ZQmmKWM+YXEetQu5Kxm2I5eikwJElQPjIphCCnOhq66Jp6uCHW2hDA9QRGK1wJUNWMyMzBSU&#xA;lRYxLtSOhZnJ5FV+L4RuaHv4FQqaSZnDSOpCiOOJWY1L+mX+Lq1agjep+eKW9ZgM8MCEv6YmR5Qi&#xA;lwQgLqGVQSVLqtcVQVhHevfQXE7MJlMkcgSKVFaNgWq7SVrSQDhToDhQnmBKT2FtAupSGNHS5R5m&#xA;uZD6nFlkcmNRy+A1BDfD0pTChOMCUnmgE0bNMJnvipCIyOYkZloUXiBGVPixPucKE1t43jgjjdub&#xA;oiqzmpJIFCd/HAlJ9WTUk1F5okaW2kgREWMyqyyo0hJYxEGhDr9xwoR+jxXcWmwrdkfWCCzgdubF&#xA;gv8AsQaHAlAa1FdPdOqxu0EkKbqGKs6Ox4n0wW+ye+2/tsUIjSLYQvJ6cbRRUUGvqBXferKkpLLQ&#xA;U/tpgVF38Uk1o8aEgmleNKlQwLAV2qVqN9vHFKG06cvOokbnP9WiEvGpCuhbmGJC8TVhTkAT4bYq&#xA;jLyN5LSeOP7bxsq9typAxVJriRo3mjtxyW5BBREI9J2IpJIoHwFetf2gCa1ABKE+wJdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYV9b1B9RUvwEyPGjuVIT05V5GRnpyDJxdTxY&#xA;BSAKceWFizC1aVrWFpQRKyKZARQ8iBXb54GSDa4XnIJ7420gZh6I9IUUH4SA6sxqtD8/uxVW02Wa&#xA;SOQysz0cBWeMxGhRSfgIBHxE9cVQeqzzNfpai8WxQReqsxCkl+RWnxmnTChvRJ5TPeWz3S3iwFCs&#xA;wABJkBY14kjFQj795Y7G5eJuEqRO0b0rRgpIND13wJS3y5Bd2yz2885nUMZELKVILySBt2eQnkU5&#xA;de+EoCa3LypA7RLycDYUJp4mg3ag3oOvTAlKILub1FKiWSbmwrSUB+LEMDE3wx7dDWgNK0rTChO8&#xA;CWJ30OoXFxc6pDypbyVt4/g+MoaIqkuvFW4BhseXqfcUMqjkSSNZENUcBlPSoIqOuBKQalBZy6nO&#xA;LySbkAjQoJYljEZWlVWRhQl1av8AtYUJjoSgWbcHkeD1GEJmcSMFX4SOSlhTmrU36YEhCa3dend8&#xA;Jbo2sPohkf1PSHPmQepAb4d6fIVFcKC7RLr1LvhFdG6h9Es7+p6o58wB0JC/DvT5ippioTO/vFtL&#xA;czFS26qo6CrGgqTso9zgSlOnXF0+rtJ9ZM1pNVE5CjF1BLKEGyqhBAP2uxH7RKE6uJfRt5ZQvIxo&#xA;z8eleIrTAlJYblFu5XRZXlt5WeRS7nl6gJWMKWKDj6gAp124/awoTebT7CYkzW0UpahYuitWnStR&#xA;gSrqqqoVQAoFABsABirsVdiqnNa20xUzRJKVqFLqGpWlaV8aYq6G3t4aiGJIw3XgoWv3YqvZVZSr&#xA;AMrCjKdwQexxVZDb28NRDEkYbrwULX7sVVMVWiOMO0gUB2oGYAVNOlTiq7FUOdN04kk2sJJ3J9Ne&#xA;30YqrqqqoVQFVRRVGwAHYYqsltbaYgzRJIRsC6hqffiq9ERFCooVVFAoFAB8sVbxV2KtMqspVgGV&#xA;hRlO4IPY4qsjtreNw8cSI4UIGVQDxFKLUdtsVVMVUUsbKN/Ujt40krXmqKDXp1AxVKo9bmkt4irK&#xA;rFVDu3psWYgFiP3iKvenU1r8O25RaaWEsk1jbSyf3kkSO/bdlBPYfqwJQWo3l1E7iP1SykBIoV5V&#xA;QoW5sfTlpVlKjFCOs5Hkt1djyqWCt/MoYhW22+JaHFKD1S+kif0kd4xRAzRopkZp5PSjERk/d7NU&#xA;tUGgpihdpN+1yGBLMAqOpdQrryLI0cnGqF0eNgeO36ypVNUupYIIxFX1ZpFiQig3O/cEb0p0xVRt&#xA;J79dTNpdMrj0Fl5LQDlUKaCgI3r1P3YoTLFLBtD81a0+qLHeO89pM6IpMMUYQyrB6ZJSRnHIysVq&#xA;u/8AxE0xBZzgZJdeTX31t44pI4reKJJHcsEfk7ONyySLxovhiqK0+V5rC2ldxI8kSOzigDFlBJFN&#xA;t8VS3VtbSGZ4YjPyhDLIYbeWUesyo0UZcRSL8Qf9WFFpjY3sN1ExjLFomEcweN4iH4hvsyBW6MDg&#xA;S1ftPwjit5PRlmcIJeIfiAC5+E9ahKfTXFVunTTMJ4J29SW1l9JpqKoeqLKCFUmlFkC7+GKq11cC&#xA;3haUozqv2glKgePxFRQd8VQOmaq9xI0DozSV5sV4ERq68lV6N17Dbce9aKEykkSONpHIVEBZmPQA&#xA;bk4pSabUdQF7GilV5LGxg2+HnIq8ZWbepDbcR16jpUoRdtoenWwHorIrBQpk9WTkQPE8t8CaRsMS&#xA;QxJFGKJGoVASTsooNzUnFVk9sspB5MjUKlkIBKnqpqD9438MVVVVVUKoAUCgA2AAxVB3+lwXr28j&#xA;vJHLbMXieMgEErTcEEGho1COoGKrrDToLFZhEWYzyGWRnPIlmpX8d6Yqq3NrFcIiyg0SRJUIJBDR&#xA;sGG4+VD4jbFXNawm7S7oRMkbRAgkAq7KxqOhoU2J6b+JxVVxVARaNbxlCJG+DhT4YgSEYMAWCBuo&#xA;8cVR+KoVNMsk9WibzMHkNTXkp5A1rWoJ69cVRKIkaKiKERAFVVFAANgABiqWX3l+C8kkZ7iVElkW&#xA;dolELL6iIqBh6kbsPhUd8UUjbOzW2WT9480kr+pLNJx5M1AoqECKKKoGwHTxxS3d2kV1D6Uo+Gqs&#xA;DRTQqaj7QYfhirrS0htYRDEKKCzHYCpYliaKAOp8MVXzRJNC8T14SKUamxowocVWQWcEEjSR8gXA&#xA;VgWLDYk13J3qxriq64hE9vLCWZBKjIXQ0YchSqnscVQNh5e0uwumubaMrIwYbksPip0r8qY2ilra&#xA;vciKWb6uixxSpEQ8jB6vw6qI23HqdAT7YqmcbF41YqULAEo1KivY0JFR88UpZq+stYzQRLHyaVlA&#xA;JpQliQFFSvh17eGKExglE0EcwFBIquAe3IVxSo3V6YWKJH6jqFLEnioDkqvQM1SRQUU4q1ZXwuWk&#xA;QxlJIuPI9UPKv2WIBNOJBqBvtiqrc3MdvEZHDN14oil3YgE0VRuTtiq2K4k9VYpkVJHUvHxYsCFI&#xA;B6qhqOQ7YqrSSJHG0jmiICzHwA3OKoCLVCXiMihY52CJRX2Y/Z+Mji9f8n8RU4qmGKpcdWcyckiI&#xA;hWoIYoHYfEKirhUoV6SUPXaoxQjoZRLCkoBUSKGCsKEVFaEeOKUuuddjivpLOKMyywiMzD41oJTR&#xA;StEYN13ocUWidM1KDULX6xDXiGZDswHJDQ8SwUlfA0xSvvr63soDNMTQUoq0LHfeg70G5piq2w1G&#xA;3vkkeEMBFI0ZDjiTx/ap1oe1cVV5544Y+bmgqFA7lmPFVHuSaYqhLDVVuWZJImt5BJJHGsn7ZjNG&#xA;49P8+ld8VRkkixxtI5oiAsx9gKnFUvXWllMAhgJM7UQOyqxAPxHipdvhFSagffihUk0+dtSW7WcC&#xA;EAc7YqxDEA/Fs4Xl03K9BilHYqlmqaTNeTpIkkQVDGeEsZf4o2Zgahl2q249uuKEdawtBawwswdo&#xA;kVC4FASoArSpp9+KVlzZiZi6uY3KhW2BVgpqvIHfYk/ZIPvirdtaCAs3Mu7KqmoAAVSSAoUDYcj7&#xA;++KuvbRbqBoixRqHhIvVSVK1+5jiqja6asM5lYp0HCOJPTjVhyq/GrfEQ1CfDFUTdQma2mhBCmVG&#xA;QMy8gOQpUrtX5Yqli6JcCKxT1oh9UdXYrCAXoeUgJ5ftsOVR333wopN8CUtbSGEnFZSYWNSzBC6i&#xA;rGgqhV926yVPXepxQj4YhFCkQJYRqFDMak0FKk+OKUrufK+n3N7cXkkkwmuChfhIVAEahQAB7qD8&#xA;8NopFaVpNtpkEkFuWKSSvMebFqM5qQK4Et6jpNjqKBLtC6io+FmQ7gjZlIYdeoOKqltYWtqzmBAn&#xA;PqB0xVfcwtNEUVgrBlZWIqAUYMKioqKjxxVC2Gm3FvMsks6yBY/TCpGUqxKlnNXfduO+Ko2SNJY2&#xA;jkHJHBVlPcEUIxVB/o0JKrwiFQhqhaNnfpTd+Y5fT/DFVI+YdPEPr/vPR5U9Xj8HH+fkfhpvSla1&#xA;2pXGkWmeKVKa5EbcQjSvTkyoASq+JqR9Hc9sVVEdXRXUhlYAqR0IPTFVs8qwwvKwJCKW4jqadhWm&#xA;5xVuKRJYkkQ1R1DKfYioxVZdXMVtA00v2FKjt1Zgo6kDqe+KqFvq1tNMsI2d6hPijepAJ/3W7kbD&#xA;vtiqMxVCw6jDJKkZVozKvOBnoBIKV+GhPbeh3xVFYqhH1S1Sb0250BIaUI3BaVrVqbAcTVvsjuem&#xA;KovFUJfalFaEAxvKx3ZY+PwrRjyPJlHRG99sVRMciSIHQ1Br7EEGhB9wcVQ2oavpunmP67OsHq19&#xA;PlXfjSvQf5QxVdYanYahG8lnMs6I3BytdmoDTf2OKq8sscUTyyMFjjUs7HoFUVJxVCQa1pk8yQRT&#xA;hpZCQi8WFSAWNKgdgcVRuKrJZ4ogDIwWpoP8/DFUnurDUyECp8Efqx1ikBd4naq8lkUKGPEVYGtc&#xA;KE4g9X0I/Wp6vEepTpypv+OBKX3lpdm7eSN5+EioP3JjFApJK/GVPuD7nFCMsoXhtUjc1YVJrTap&#xA;JC7ACi1psMUoTXrKS9shAsbSqXq6I/A7KxU1qvR+J/higqmi2j2lkIGQxIp/dxs3MgcRy35PsX5E&#xA;b4pRF5G7w0QcmV4347AkI4YgV2rQYqgtPt75bgNcmR1UOQ0vD7R4AUCM25ox7AVoMUI+5hE9tLAT&#xA;xEqMhbrTkKVxSkkGlaq95GtxBYxWsLRyLLbxMshZCTRfiNOg6jphQn+BLANZ8teanvL6O0PqWUhH&#xA;1QgsKKwHIELdW425NuUbl1O5rhY0zfTVu1061W9PK8EMYuW23lCjmdtvtVwMkj826LPfyWz2tr6k&#xA;m6zzKsLMEHRSJmSoo77Dx6jCEEJ5p8AgsYIvTWIqg5xrQAMRVulf2q4Eqd5azvd2txEFY2/qVR2K&#xA;15gDqFbFW7O0kjubq5l4iS5KfAh5KqxrQbkKSa1xVZrGnPf26RK/Di5fwqQjBR0bbkRXFVNLPUG1&#xA;BLiZo/SR3ICsSeNGVKLwXfiw5b/wxQj5xKYJBCQJSpEZJoOVNqmh7+2KUns9Amh+rGVo5nVpDdMQ&#xA;AWDkmgZVVmBruHOFFJ3gS7FUPc6jp9oypdXUMDuCUWWRUJA6kBiK4qiAQQCDUHcEYq0zKqlmIVVF&#xA;WY7AAdzirYIIBBqDuCMVdirSSRyLyRg61IqpqKjY9MVbZlVSzEBQKknYADFVkNxBOpaGRZVBoSjB&#xA;gD4bYqvxVQkv7GOX0pLiJJRSsbOob4umxNd+2Kq+KrJZ4IVDTSLGpNAXIUV+nFV+KtMyrTkQKkAV&#xA;23PQYqshubaYuIZUkMZpIEYNxPgadMVXu6Ipd2CoNyzGgH0nFWo5I5EDxsHQ9GUgg026jFV2KqQu&#xA;rVpfREyGWpHphhyqOu1a4qxyW1uHvjeva3H6TEJiQKAYhKSxUibsnxgdO2+FDJ4y5jUuvByAWWta&#xA;HuK98CWOao99DdyMl5Fp7Ncxu0s9OM1uEVQiMQalW5Vj671qK7lCcaTHwtSFQxQtI7W8RUqVjLVA&#xA;4kAivUCmwNO2BKH1dZ3mgiWXhFIVooUE81mj3BPcKSR8q4ob0S4uJjeiVfTWC4aBUC0U8NzIvxNs&#xA;/Lp2xUK+q+p9VBWX0k9RBM1P91swVt6jjSta4pS3S7ULqkcwVIpfRYTIFNShEbr9piR8bmpNa0+e&#xA;FCdXMJmgeMNxZh8LUrRhuDTatD274EpDZpqNxN9YggS3hLQIjIOLLGV5zUqaVWR2DfBv8xhQyLAl&#xA;jKW8TXCSXUkkbWjel9W9Rw8pdf3sqrXmeTtsFG/Gu9RQoZBZRvHZwRyV9RI0V6nkahQDU71wJSPz&#xA;K5SY8J/Qk4o3L1mhJUJOWAK770G3jQ9cIQU400ILSif3fqSlKGo4mVitPanT2wJQnmC3ikgWW5km&#xA;WyiDG4WBPUbsVYoEkYheP7K138K4oKj5a0k2Bun9b11nK8ZQvBSELU4qPh6MKkdTXCVCM1lV+qrJ&#xA;I7rDC4km9MBm4gEbAhvssQ3Su22+BKjpqk3XpxXNzJFbh2mWdBHykmPJf91xlqAt7dMUJriljtlD&#xA;aJFbrGLU72xiWMIJkYFOYoor/MTvhQyLAl2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxViFrf6qLWOC+uXMBYgyxApcyGivQEgrT4xuGG3SvYoZbFKksSSoapIoZSdtiKjY4EpPqr&#xA;TyXFKKY1kSCEMxB9ZlDq+ynb4vnthQmVhJK9onq/3qVjkINQWjYoTWg6la4EqGqXyw+nbryMsrKX&#xA;4VHGLmOZJG4qKhabk9OhIVa0uHhJO8fMWspVokkQxcTvyCoQpA6dRiqIvr1LOD1XUvVlRVXqSxp1&#xA;O334qleiLqM9y2oSSv8AVLgM6ROzVHIrROHIoOFKVXr1FQ2FATa8llitpJIhykUVVeJepr04rvgS&#xA;ldrqFy87cLpLpi1HtuPApQnkgXiJAymm8lBTf5lCdYEpRPe3d1OtvCDHFIAQ61L7MA1SCOBUGp29&#xA;q1xQmsaenGqVLcAF5MasaClSe5xSxXzHqN+dTSwhnQKZ7YRRjnGwZmBDOwHxBWAJFaEbUwhBTvQb&#xA;2a8sPXllSYl3VXjVlBVTxFeVNzSvQYFC/XZ/Q0m5k5cPh48gyofiIXZ3IVevXt4Hpikt6Lci50yC&#xA;YEEMCBRlegVitOSlg1KUr38B0xUIXzPdXNvp6mBjHzk4ySK3AqoRmFGPSrKB79BucIQUm0OV7bVo&#xA;Le3HCCWaRZUUBFKqkvFuHFdz6SGtKjoSa1KoZPqcl1Hpt3JaLyukhka3XbeQISg32+1gSxyacIkk&#xA;thJy1ROTrMTJwn+yyQgNt8QdAKnutDvhQyMaZpw6WsI/55r/AEwJRCqqqFUBVUUVRsAB2GKqUlpB&#xA;I5c8lY/aKO6Vp48CK4qqRxpGgRBRR9PXckk9ScVWm3hacTlaygcQ1T0FabdO5xVUxVbLFFNGY5UW&#xA;SNvtIwDA036HFW444441jjUJGgCoiigAGwAA6AYq3irsVdiqxbeBZGlWNVlbZpAoDH5nriq/FUFd&#xA;aLpd1MZriASSmlWLN+z06HtiqItbS3tYvSt04R1Lcak7nr1JxVue2hnCiQE8G5oVZlIahFQVIPQn&#xA;FXQW0MAYRgjm3NyzMxLUAqSxJ6AYqukjjkQpIodD1VgCD9BxVQs9NsrOpgjox2LszO1KAcQzliF+&#xA;EbdMVROKqCWVskgkVCGUkqOTFVJFKqpPEbeAxVKV1eeS9iiBlRpRGRRAYVMis6oar6h2AqwNOvTi&#xA;RhQnNvN61vFMBxEiK9PDkK4EoO81CeNZGiWkKh0ExVnAkUdSEDEKDsdux6bVVRNjeQ3dsk0Thwdm&#xA;IDLRh1FGAYfTiqF1DUbmG+tbS1jWaWWrzIxZeMQIXmGVX/aYdRiq7StQnuXuobpFiubeVgY05Eek&#xA;WIibkwWvIKT0/qVUc7cUZqV4gmlQOnucVQGiXctzas8jNIQ54u6hSVYB1oAF24sN+/X2xUJhiqWW&#xA;N3eSanOks0T27c/RgRCskXovwPN+Tc/UryHwrTpv1xQmeKWOfpfUZ3WeFpI4n3ijaLjGR1FXdRWv&#xA;fi/Tfbi2FCe2dytzZwXK7LPGkgHs6hu/zwJS3WL3UIJpBbVYJCHCho1HL4ySeSsTsnY4UJpbvK8K&#xA;tLH6Mh+1HUNTfxGBKD1a6u40W3szxup0k9FuIc8kA2AZkWu9ak026HFXaTdXciNb3h5XUCR+s3EI&#xA;eTg7EKzrXatQab9BiqJvneO1d0cx8CrO4oSqBgXO4I2SvbFWrNpCsvNzIqyMqMwUNRaA14hR9oHt&#xA;0xVEYqxnT9WvZobGYX4nMkscV3EIQFV2FXT1AKclOFCcHR7b1llVmTiOKqAlVQ1JRXKmRV36Btu1&#xA;MCUaqqqhVAVVFFUbAAdhiqGuNPSZJIxLJFFLUyRx8QCT1O6kivemKqllZwWdrHbQAiOMbVNSSdyS&#xA;T1JOKqN7pGnXsqS3MPOWOgRwzKQAa0qpFRXqOhxVuw0qwsAwtYvTLgB2LM7EAswqzliaFziqImiW&#xA;WF4mqFkUqSOtCKd8VU7OzjtYvSRmYUUVcgn4EVB0A7JiqviqDttLgt7t7pGYySc+QIQD4359VUMa&#xA;UoKnpiqMxVKZvLGnSzNJylj5NyKo1Bv9oA05AMCRsenTDaKTVESNFjRQqIAqqNgANgBgSgb3Rra7&#xA;uluZHdZEQxrx40AYMrdVJ3DkYqj8VQGo6LaahNBLPJOjW5bh6E8sFQwoQTEyn7j+GKu07RbTT5p5&#xA;YJJ3a4K8/XnlnoFFAAZWY/efwxVFXVuLiB4WdkD7FkpXrXuCPmCKHFVK3sDDcGc3MsjMvGRW9MKz&#xA;bUdgiJ8QC0r4fRRVFYqltjoFlZ09IsVBDFSIwCwoeR4qu9VWvjQV6YopUF9dPJGIrdXilRpUYyEO&#xA;VUrT4eFKtz2q2KUZHIkkayIao4DKelQRUdcVQWqavDYcFMbTTSBmWNCo+FSoZiWI2Bce/wCOKomz&#xA;ukurZZ1UqGqCjbEMrFWB+TA4qo6pqcWnwLLIVHNuI5twGwLdaMe3hiq7Tr+K+t/WjKsK0JRuanYN&#xA;sxC9m8MVWavq1rpdp9ZuG4oXCKTypVvHirnoD2xVBaV5q03Ubz6pDIrSlC68PVOy0rXnHHTrhpFp&#xA;vNKsUTyMCQgrQdT7D3PbAlBrrens/BWYuCOS8WHEd2JIC0HU79N8VtH4qxRvP9uoB+pvQiYj4+0B&#xA;o37PfthpFsksLsXljbXarwFxEkoQ7kB1DU/HAlqW7Im9CGMyS0JYnksa0oaM4VgGPLYYqqwTJNEJ&#xA;FqNypU0qGUlWU0qNmBG2KoS+1KWCX6vbWkl3clPUEaNGg41pUtIy9/CuKoi3nld3jmjEcqcW4q3M&#xA;FW6GtF7gjFXXdw0EBkWMyvVVWMECrOwUbnYbnFVC2vbx7kQXFobfkjOr+org8SoI2/18VRcsiRRP&#xA;I5oiKWY+wFTiqg1zPGpkmg4QAVLBgzqB3ZaUoP8AJY4qhptNeRIYjHC4txxguJPiZV2FChWhqAK/&#xA;EK9dtsUI+CFIII4YxSOJQiD2UUGKUtvdFmnvjcxXPphwqyKQxIClWHDiyjqv7QI+jbFFJhbW0VtA&#xA;kEdeCDqdySdySfEnc4pUdQsEu1QkAtGT8JJAZTQlSRuPiVTUeH0Yq3p1hHZQsidZHMjU6AkBQB32&#xA;Cgb4quvbdp0UKASjE8GJUMGVkI5DcbN1xVD2Gmi2uBIsSQoEZSqSPJUsVNfiC0pxxVGXEImhaMkr&#xA;yHwuKVVhuGFe4O+KoFfL9gjF4+au9RM1a81ZizqQRxUOSeXECp364opMsUsQbyTMVVOFqwQTqHPq&#xA;1b1zUkipA+jrhtFMn0+1NpYW1qSCYIkiJWtPgULtUk02wJQOo6ALy7af1gqMgX0mVmAehBkFHXcj&#xA;iP8AY4UUjdOsvqdsImkM0lSXlbqx6Dx6KAv0YErLmzna6S5gkVWWgZXUmoAcdQRT+8r9AxVVht5F&#xA;mM0sgeQrwoi8FoDXpViT8z8u+KrdQslvLf0SxWjBlO9OS7qSAR0O4360OKoWz0aWG7S5nu3uHjDK&#xA;nLlsG+0N2YUOxO3UDFCYTIZIXQcaupUchyXcU3FRUe1cUqEdlKYlS4uGmUKFdAAqtQU3+0+/f4t/&#xA;liqnd6zY2nxTMRHz9IygVUPQniO7HbooOKo1WVlDKQysKqw3BB7jFVOe7tbenrypHyIChiBUsaD8&#xA;cVVVZWAKkEHoRiqlPdQw7PyJIJ4ojyGg9kDHFWra8t7leULFhQHdWXY1oaMBttiq6e4igUNISOR4&#xA;qACxJoTsFBPQE4qtS8gd1Qc1Ztl5xugJArQFlA6DFVbFUssvMVheXn1SJZRJvxZkIQ8d9mxpFpni&#xA;lSmuYYaCQncV2VmoPE8QaD3OKqoIIqOmKoee+ghf093mpURLTkemwqQK71p4YqrRSpKgdDVem4II&#xA;I2IIO4xV0sqRIXc0UdT+AAA6k4q6KVJUDoaqeh/Agg9CMVU7q7gtYvVmLBegCqzsTQnZUDMdh4Yq&#xA;hrbXNNublbaKR/XYVWN4pYyRx5ftqvbFbRssiRRPK5oiKWY0JoAKnYYqoNqFsqlmEqqBUsYZQAB3&#xA;JK4qg4bRP0fHYy2nrSJRj6yhouYNfUruKcug+17YoTKCJYYI4VJKxqEBPWiimKUHNb6itzLNAYnE&#xA;npislQwRW+KLYUpQkhutT0O2Kq+n281varFKwZlJoF+yik/Ci7DZRsMVUdSiuaxy20bSNy4zIsnp&#xA;Fo6MR8XXZ6dPfFV2mxXCiWS4jMcjsAqF/UIRVAALDr8XI/TirWq2808cSxpzUOfVApy4NG6HjyIF&#xA;asO+KqNta3KvaKI3SOA1l9Qrx2jZB6aq8hXdht0p79VCZ4pY9peliG8t5fSpIpHM+iU4AQsuzcVH&#xA;2jvuS1fAAYUMhwJYdF5f80R+bpb/AOso9iUU+rRQ7BZZH9Dj/qOB6mx7dAMKKZVYRSxWNvFNT1Y4&#xA;kWTj05BQDT2rgSgp7WdL2dwgkhu+FQ0Xqr+7Xao5pTcHtTpihE6XayW9sEk2Y8dqAU4RrH2LDfhX&#xA;ril17FcTPDEorbkn16MVJFKUJBBpvXbqdthvirWn281uZIONLVKC3qxchQKcQzEsRtXfodtxviq+&#xA;/S4KxPAvKSNywGx6xsgNCyVoWFRyGKoTRdPuLVpWuGkkkZVBml4BmPJi20ZYDYr88UI6+R5LK4jj&#xA;Xk7xuqKKCpKkAb0GKUPLZXcyOrzKiyBgUAkagbltUyBT9r+X6NhiqMMsQkERdRIwLKlRyIGxIHhv&#xA;iq7FXYq7FWndI0Z3YIiAszMaAAbkknFXKysoZSGVhVWG4IPcYq3irsVcSACSaAbknFVNbq2Zgqyo&#xA;WNQAGBJoaH8cVVMVdirsVdirsVWySxRIXldUQUqzEACpoNziro5YpUDxOroa0ZSCDQ0O4xVdirsV&#xA;dirQdC5QMOYAJWu4BrQ096HFXnt3rfmI+ZEAidI/WRQnGoVaAMWNabBm4DkP8oVLVLG3oELO8KO6&#xA;8HZQWTwJG4+jAySK6tdOW6u3udKluZ3kEnrRxBwaKvExsTUGigN4n2woTbTYJ4bVVmCq5oTGn2UP&#xA;EAgbDq1T074EofzHcGDR5pAoerRRshXkGWSVUYMKr8JDb+2IQV+hT+tpUDcSoXlGoI4/DG5RTSrd&#xA;QvjikKPmOGWWziWKIyn1QWVQx24Nv8IbEIKX6RbXa39o8tuyFE4vIQ/8rkcqqB0ZR17AewKp5qYJ&#xA;027ABJMMgAAqT8J7YEsdhWI3ERT7ZnsyAJw+yqQ9FA7Hr4nfChleBLHZra6/SMTSwSSOPtzKrEdU&#xA;+yw2HR6fy1HSmxQn9uJVgjEp5ShVEjDu1N/xwJSy8t9UW8lkt+UkUoqoVyCrBAoWjOF4sRvxWvXe&#xA;uFCL0yC5igP1li0rtyK1ZgvwgUHJpD2r1wJQ2vS28UCNdoslpuGieMyq0lVKVQVrsGp2B3xQXaDL&#xA;bywO1oix2mwWJIzEqyVYvRDSmxWvYnfFQjb2WWO3Zoqcqgcm2VQTuxNDSg9vntilA6cqxXhEEwuY&#xA;5lrOwcSMsgH2jxVRQ77nc7AAKNlCZyCQxsImCyEHgzAsoamxKgrUe1Rilhml2mvrrkvxBLkCM3Es&#xA;il1KVAJUBUajcJAKysKnpsCCxf/Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:8433c45a-037a-de48-9e1c-c18c992dfff2</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:8433c45a-037a-de48-9e1c-c18c992dfff2</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:8292d60e-693f-0b47-b826-ad4fb297e6a5</stRef:instanceID>
            <stRef:documentID>xmp.did:8292d60e-693f-0b47-b826-ad4fb297e6a5</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:bc885163-1457-444e-b989-da926bea38ef</stEvt:instanceID>
                  <stEvt:when>2016-06-06T22:16:02+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8433c45a-037a-de48-9e1c-c18c992dfff2</stEvt:instanceID>
                  <stEvt:when>2017-02-20T14:02:53+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>552.000000</stDim:w>
            <stDim:h>792.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 425 CP</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>48</xmpG:red>
                           <xmpG:green>59</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -696 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 696 li
456 696 li
456 0 li
cp
clp
1 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
198.238 15.0117 mo
197.767 14.1113 197.5 13.0869 197.5 12 cv
197.5 8.41016 200.41 1.5 204 1.5 cv
207.59 1.5 210.5 8.41016 210.5 12 cv
210.5 13.0854 210.234 14.1089 209.764 15.0083 cv
false sop
/0 
[/DeviceCMYK] /CSA add_res
.775174 .628168 .559289 .479377 cmyk
@
196.5 14.5977 mo
198.406 15.1538 201.06 15.5 204 15.5 cv
206.94 15.5 209.594 15.1538 211.5 14.5977 cv
@
197.553 11.1421 mo
195.089 11.7285 193.5 13.5381 193.5 14.5 cv
193.5 16.5 li
193.5 19.8135 198.201 22.5 204 22.5 cv
209.799 22.5 214.5 19.8135 214.5 16.5 cv
214.5 14.5 li
214.5 13.5381 212.911 11.7285 210.447 11.1421 cv
@
205 7.5 mo
204 7.5 li
203.448 7.5 203 7.94775 203 8.5 cv
203 8.5 li
203 9.05225 203.448 9.5 204 9.5 cv
204 9.5 li
204.552 9.5 205 9.94775 205 10.5 cv
205 10.5 li
205 11.0522 204.552 11.5 204 11.5 cv
203 11.5 li
@
204 7.5 mo
204 7 li
@
204 11.5 mo
204 12 li
@
243.5 6.5 mo
240.5 6.5 li
240.5 19 li
240.5 19.8286 241.172 20.5 242 20.5 cv
262 20.5 li
262.828 20.5 263.5 19.8286 263.5 19 cv
263.5 3.5 li
243.5 3.5 li
243.5 19 li
243.5 19.8286 242.828 20.5 242 20.5 cv
@
245.5 10.5 mo
245.5 6.5 li
246.5 6.5 li
247.053 6.5 247.5 6.94775 247.5 7.5 cv
247.5 10.5 li
@
251.5 6.5 mo
249.5 6.5 li
249.5 10.5 li
251.5 10.5 li
@
249.5 8.5 mo
251 8.5 li
@
253.5 6.5 mo
253.5 9 li
254.5 10.5 li
255.5 9 li
255.5 6.5 li
@
255.5 6.5 mo
255.5 9 li
256.5 10.5 li
257.5 9 li
257.5 6.5 li
@
261.5 6.5 mo
260.5 6.5 li
259.947 6.5 259.5 6.94775 259.5 7.5 cv
259.5 7.5 li
259.5 8.05225 259.947 8.5 260.5 8.5 cv
260.5 8.5 li
261.053 8.5 261.5 8.94775 261.5 9.5 cv
261.5 9.5 li
261.5 10.0522 261.053 10.5 260.5 10.5 cv
259.5 10.5 li
@
252.5 17.5 mo
245.5 17.5 li
245.5 12.5 li
252.5 12.5 li
252.5 17.5 li
cp
@
254.5 13.5 mo
261.5 13.5 li
@
254.5 15.5 mo
261.5 15.5 li
@
254.5 17.5 mo
261.5 17.5 li
@
98.0439 12.8677 mo
98.3164 12.0508 99.0806 11.5 99.9414 11.5 cv
106.059 11.5 li
106.919 11.5 107.684 12.0508 107.956 12.8677 cv
109.026 16.0776 li
109.34 17.0195 109.5 18.0063 109.5 18.9995 cv
109.5 19 li
109.5 19.8286 108.829 20.5 108 20.5 cv
98 20.5 li
97.1714 20.5 96.5 19.8286 96.5 19 cv
96.5 18.9995 li
96.5 18.0063 96.6602 17.0195 96.9741 16.0776 cv
98.0439 12.8677 li
cp
@
107.128 16.71 mo
106.059 13.5 li
103.5 13.5 li
@
108 20.5 mo
118 20.5 li
118.829 20.5 119.5 19.8286 119.5 19 cv
119.5 18.9995 li
119.5 18.0063 119.34 17.0195 119.026 16.0776 cv
117.956 12.8677 li
117.684 12.0508 116.919 11.5 116.059 11.5 cv
109.941 11.5 li
109.081 11.5 108.316 12.0508 108.044 12.8677 cv
108 13 li
@
117.128 16.71 mo
116.059 13.5 li
113.5 13.5 li
@
114.408 11.5 mo
114.464 11.3428 114.5 11.1763 114.5 11 cv
114.5 10.9995 li
114.5 10.0063 114.34 9.01953 114.026 8.07764 cv
112.956 4.86768 li
112.684 4.05078 111.919 3.5 111.059 3.5 cv
104.941 3.5 li
104.081 3.5 103.316 4.05078 103.044 4.86768 cv
101.974 8.07764 li
101.66 9.01953 101.5 10.0063 101.5 10.9995 cv
101.5 11 li
101.5 11.1763 101.536 11.3428 101.592 11.5 cv
@
112.128 8.70996 mo
111.059 5.5 li
108.5 5.5 li
@
22 21.5 mo
2 21.5 li
1.17139 21.5 .500001 20.8286 .500001 20 cv
.500001 7 li
.500001 6.17139 1.17139 5.5 2 5.5 cv
22 5.5 li
22.8286 5.5 23.5 6.17139 23.5 7 cv
23.5 20 li
23.5 20.8286 22.8286 21.5 22 21.5 cv
cp
@
16.5 5.5 mo
7.5 5.5 li
7.5 4 li
7.5 3.17139 8.17139 2.5 9 2.5 cv
15 2.5 li
15.8286 2.5 16.5 3.17139 16.5 4 cv
16.5 5.5 li
cp
@
.500001 8.43945 mo
11.1875 15.312 li
11.4219 15.4297 11.6992 15.5 11.9985 15.5 cv
12.2979 15.5 12.5752 15.4297 12.8091 15.312 cv
12.812 15.312 li
23.5 8.43945 li
@
12.5 11.999 mo
12.5 12.2754 12.2764 12.499 12 12.499 cv
11.7236 12.499 11.5 12.2754 11.5 11.999 cv
11.5 11.7231 11.7236 11.499 12 11.499 cv
12.2764 11.499 12.5 11.7231 12.5 11.999 cv
cp
@
69 112.5 mo
51 112.5 li
50.1714 112.5 49.5 111.829 49.5 111 cv
49.5 97.5 li
70.5 97.5 li
70.5 111 li
70.5 111.829 69.8286 112.5 69 112.5 cv
cp
@
60.5 118 mo
60.5 118.276 60.2764 118.5 60 118.5 cv
59.7236 118.5 59.5 118.276 59.5 118 cv
59.5 117.724 59.7236 117.5 60 117.5 cv
60.2764 117.5 60.5 117.724 60.5 118 cv
cp
@
60 117.5 mo
60 112.5 li
@
55.5 105.5 mo
52.5 105.5 li
52.5 109.5 li
55.5 109.5 li
55.5 105.5 li
cp
@
61.5 102.5 mo
58.5 102.5 li
58.5 109.5 li
61.5 109.5 li
61.5 102.5 li
cp
@
67.5 100.5 mo
64.5 100.5 li
64.5 109.5 li
67.5 109.5 li
67.5 100.5 li
cp
@
252 675.5 mo
246.543 675.5 242.085 679.07 240.5 684 cv
242.085 688.93 246.543 692.5 252 692.5 cv
257.457 692.5 261.915 688.93 263.5 684 cv
261.915 679.07 257.457 675.5 252 675.5 cv
cp
@
257.5 684 mo
257.5 680.963 255.037 678.5 252 678.5 cv
248.963 678.5 246.5 680.963 246.5 684 cv
246.5 687.037 248.963 689.5 252 689.5 cv
255.037 689.5 257.5 687.037 257.5 684 cv
cp
@
250.5 686.5 mo
252.25 686.5 li
252.94 686.5 253.5 685.94 253.5 685.25 cv
253.5 685.25 li
253.5 684.56 252.94 684 252.25 684 cv
251.75 684 li
251.06 684 250.5 683.44 250.5 682.75 cv
250.5 682.75 li
250.5 682.06 251.06 681.5 251.75 681.5 cv
253.5 681.5 li
@
252 680.5 mo
252 681.5 li
@
252 686.5 mo
252 687.5 li
@
145.5 201.5 mo
145.5 213 li
145.5 213.829 146.171 214.5 147 214.5 cv
165 214.5 li
165.829 214.5 166.5 213.829 166.5 213 cv
166.5 201.5 li
@
158.909 195.5 mo
158.13 194.865 157.457 194.305 157.013 193.912 cv
156.74 193.671 156.396 193.5 156 193.5 cv
155.604 193.5 155.26 193.671 154.988 193.912 cv
154.544 194.305 153.87 194.865 153.091 195.5 cv
@
148.5 199.157 mo
146.82 200.477 145.5 201.5 145.5 201.5 cv
146.229 202.062 152.83 207.191 154.972 209.088 cv
155.244 209.329 155.589 209.5 155.984 209.5 cv
156.38 209.5 156.74 209.329 157.013 209.088 cv
159.155 207.191 165.771 202.062 166.5 201.5 cv
166.5 201.5 165.18 200.477 163.5 199.157 cv
@
163.5 203.838 mo
163.5 197 li
163.5 196.171 162.829 195.5 162 195.5 cv
150 195.5 li
149.171 195.5 148.5 196.171 148.5 197 cv
148.5 203.843 li
@
163.5 199.5 mo
161.291 199.5 159.5 197.709 159.5 195.5 cv
@
152.5 195.5 mo
152.5 197.709 150.709 199.5 148.5 199.5 cv
@
158.5 206.5 mo
158.5 204.75 li
158.5 204.06 157.94 203.5 157.25 203.5 cv
157.25 203.5 li
156.56 203.5 156 204.06 156 204.75 cv
156 205.25 li
156 205.94 155.44 206.5 154.75 206.5 cv
154.75 206.5 li
154.06 206.5 153.5 205.94 153.5 205.25 cv
153.5 203.5 li
@
158.5 205 mo
159.5 205 li
@
153.5 205 mo
152.5 205 li
@
156 200.5 mo
155.724 200.5 155.5 200.276 155.5 200 cv
155.5 199.724 155.724 199.5 156 199.5 cv
156.276 199.5 156.5 199.724 156.5 200 cv
156.5 200.276 156.276 200.5 156 200.5 cv
cp
@
358 260.5 mo
338 260.5 li
337.172 260.5 336.5 259.828 336.5 259 cv
336.5 245 li
336.5 244.172 337.172 243.5 338 243.5 cv
358 243.5 li
358.828 243.5 359.5 244.172 359.5 245 cv
359.5 259 li
359.5 259.828 358.828 260.5 358 260.5 cv
cp
@
357.5 255.5 mo
357.5 248.5 li
355.843 248.5 354.5 247.157 354.5 245.5 cv
341.5 245.5 li
341.5 247.157 340.157 248.5 338.5 248.5 cv
338.5 255.5 li
340.157 255.5 341.5 256.843 341.5 258.5 cv
354.5 258.5 li
354.5 256.843 355.843 255.5 357.5 255.5 cv
cp
@
352.5 252 mo
352.5 254.485 350.485 256.5 348 256.5 cv
345.515 256.5 343.5 254.485 343.5 252 cv
343.5 249.515 345.515 247.5 348 247.5 cv
350.485 247.5 352.5 249.515 352.5 252 cv
cp
@
407.5 12 mo
407.5 18.3511 402.352 23.5 396 23.5 cv
389.648 23.5 384.5 18.3511 384.5 12 cv
384.5 5.64893 389.648 .5 396 .5 cv
402.352 .5 407.5 5.64893 407.5 12 cv
cp
@
404.5 12 mo
404.5 16.6943 400.694 20.5 396 20.5 cv
391.306 20.5 387.5 16.6943 387.5 12 cv
387.5 7.30566 391.306 3.5 396 3.5 cv
400.694 3.5 404.5 7.30566 404.5 12 cv
cp
@
395 7.5 mo
395 8.5 li
@
397 7.5 mo
397 8.5 li
@
395 15.5 mo
395 16.5 li
@
397 15.5 mo
397 16.5 li
@
394.5 15.5 mo
394.5 8.5 li
@
393.5 8.5 mo
396.25 8.5 li
397.217 8.5 398 9.28369 398 10.25 cv
398 10.25 li
398 11.2163 397.217 12 396.25 12 cv
394.5 12 li
396.75 12 li
397.717 12 398.5 12.7837 398.5 13.75 cv
398.5 13.75 li
398.5 14.7163 397.717 15.5 396.75 15.5 cv
393.5 15.5 li
@
432.5 9 mo
432.5 21 li
432.5 21.8286 433.172 22.5 434 22.5 cv
454 22.5 li
454.828 22.5 455.5 21.8286 455.5 21 cv
455.5 9 li
455.5 8.17139 454.828 7.5 454 7.5 cv
441.307 7.5 li
@
455.5 11.5 mo
453.291 11.5 451.5 9.70898 451.5 7.5 cv
@
432.5 18.5 mo
434.709 18.5 436.5 20.291 436.5 22.5 cv
@
451.5 22.5 mo
451.5 20.291 453.291 18.5 455.5 18.5 cv
@
445.5 12.5 mo
443.75 12.5 li
443.06 12.5 442.5 13.0596 442.5 13.75 cv
442.5 13.75 li
442.5 14.4404 443.06 15 443.75 15 cv
444.25 15 li
444.94 15 445.5 15.5596 445.5 16.25 cv
445.5 16.25 li
445.5 16.9404 444.94 17.5 444.25 17.5 cv
442.5 17.5 li
@
444 12.5 mo
444 11.5 li
@
444 17.5 mo
444 18.5 li
@
438.5 15 mo
438.5 15.2764 438.276 15.5 438 15.5 cv
437.724 15.5 437.5 15.2764 437.5 15 cv
437.5 14.7236 437.724 14.5 438 14.5 cv
438.276 14.5 438.5 14.7236 438.5 15 cv
cp
@
450.5 15 mo
450.5 15.2764 450.276 15.5 450 15.5 cv
449.724 15.5 449.5 15.2764 449.5 15 cv
449.5 14.7236 449.724 14.5 450 14.5 cv
450.276 14.5 450.5 14.7236 450.5 15 cv
cp
@
441.5 9 mo
441.5 11.4829 439.483 13.5 437 13.5 cv
434.517 13.5 432.5 11.4829 432.5 9 cv
432.5 8.91504 432.5 8.83057 432.505 8.74609 cv
432.579 6.1626 434 5.50049 434 5.50049 cv
434 5.50049 433.945 7.5 435.5 7.5 cv
435.5 6.71631 435.604 5.74609 435.941 4.76465 cv
436.375 3.5 437.346 2.32568 438.5 1.5 cv
438.5 4.5 441.203 5.00293 441.474 8.51807 cv
441.484 8.67725 441.5 8.83057 441.5 9 cv
cp
@
48.5049 12.4277 mo
59.6807 13.9326 li
59.959 13.9395 60.2427 13.8716 60.498 13.7158 cv
60.7539 13.5596 60.9438 13.3384 61.0649 13.0879 cv
61.0674 13.0864 li
64.813 2.52783 li
@
59.2661 21.5 mo
70.7568 14.8101 li
71.4678 14.396 71.7109 13.48 71.3008 12.7637 cv
65.8535 3.24902 li
65.4434 2.53271 64.5347 2.28711 63.8242 2.70117 cv
49.2432 11.1899 li
48.5327 11.604 48.2891 12.52 48.6992 13.2363 cv
53.4307 21.5 li
@
50.5 21.5 mo
69.5 21.5 li
@
70 70.5 mo
53 70.5 li
52.1714 70.5 51.5 69.8286 51.5 69 cv
51.5 58 li
51.5 57.1714 52.1714 56.5 53 56.5 cv
70 56.5 li
70.8286 56.5 71.5 57.1714 71.5 58 cv
71.5 69 li
71.5 69.8286 70.8286 70.5 70 70.5 cv
cp
@
69.4321 56.5 mo
65.8535 50.249 li
65.4434 49.5327 64.5347 49.2871 63.8242 49.7012 cv
49.2432 58.1899 li
48.5322 58.604 48.2891 59.52 48.6992 60.2363 cv
51.5 65.1284 li
@
62.3394 56.5 mo
64.8125 49.5278 li
@
48.5049 59.4277 mo
51.5 59.8311 li
@
64.5 64.5 mo
68.5 64.5 li
68.5 59.5 li
64.5 59.5 li
64.5 64.5 li
cp
@
54.5 67.5 mo
62.5 67.5 li
@
54.5 64.5 mo
58.5 64.5 li
@
118 164.5 mo
98 164.5 li
97.1714 164.5 96.5 163.829 96.5 163 cv
96.5 149 li
96.5 148.171 97.1714 147.5 98 147.5 cv
118 147.5 li
118.829 147.5 119.5 148.171 119.5 149 cv
119.5 163 li
119.5 163.829 118.829 164.5 118 164.5 cv
cp
@
112.5 155.5 mo
116.5 155.5 li
116.5 150.5 li
112.5 150.5 li
112.5 155.5 li
cp
@
99.5 161.5 mo
107.5 161.5 li
@
99.5 158.5 mo
103.5 158.5 li
@
205.5 63.5 mo
205.5 60.7388 207.739 58.5 210.5 58.5 cv
213.261 58.5 215.5 60.7388 215.5 63.5 cv
215.5 66.2612 213.261 68.5 210.5 68.5 cv
207.739 68.5 205.5 66.2612 205.5 63.5 cv
cp
@
212.5 62.5 mo
212.5 63.6045 211.604 64.5 210.5 64.5 cv
209.396 64.5 208.5 63.6045 208.5 62.5 cv
208.5 61.3955 209.396 60.5 210.5 60.5 cv
211.604 60.5 212.5 61.3955 212.5 62.5 cv
cp
@
213.898 67.1489 mo
213.823 67.083 213.751 67.0127 213.666 66.9624 cv
212.927 66.5269 211.771 66 210.5 66 cv
209.229 66 208.073 66.5269 207.334 66.9624 cv
207.249 67.0127 207.177 67.083 207.102 67.1489 cv
@
193.002 51.8877 mo
200.805 58.291 li
201.006 58.4219 201.244 58.5 201.5 58.5 cv
201.756 58.5 201.994 58.4219 202.195 58.291 cv
202.197 58.291 li
209.998 51.8877 li
@
210.5 58.5 mo
210.5 53 li
210.5 52.1714 209.829 51.5 209 51.5 cv
194 51.5 li
193.171 51.5 192.5 52.1714 192.5 53 cv
192.5 63 li
192.5 63.8286 193.171 64.5 194 64.5 cv
205.601 64.5 li
@
147.5 109.5 mo
147.5 99 li
147.5 98.1714 148.171 97.5 149 97.5 cv
163 97.5 li
163.829 97.5 164.5 98.1714 164.5 99 cv
164.5 109.5 li
@
166.5 109.5 mo
163 109.5 li
162.171 109.5 161.5 110.171 161.5 111 cv
161.5 111 li
161.5 111.829 160.829 112.5 160 112.5 cv
152 112.5 li
151.171 112.5 150.5 111.829 150.5 111 cv
150.5 111 li
150.5 110.171 149.829 109.5 149 109.5 cv
145.5 109.5 li
145.5 117 li
145.5 117.829 146.171 118.5 147 118.5 cv
165 118.5 li
165.829 118.5 166.5 117.829 166.5 117 cv
166.5 109.5 li
cp
@
164.5 106.5 mo
166.5 109.5 li
@
145.5 109.5 mo
147.5 106.5 li
@
151.255 103.289 mo
153.789 100.755 li
153.952 100.592 154.173 100.5 154.404 100.5 cv
157.596 100.5 li
157.827 100.5 158.048 100.592 158.211 100.755 cv
160.745 103.289 li
160.908 103.452 161 103.673 161 103.904 cv
161 107.096 li
161 107.327 160.908 107.548 160.745 107.711 cv
158.211 110.245 li
158.048 110.408 157.827 110.5 157.596 110.5 cv
154.404 110.5 li
154.173 110.5 153.952 110.408 153.789 110.245 cv
151.255 107.711 li
151.092 107.548 151 107.327 151 107.096 cv
151 103.904 li
151 103.673 151.092 103.452 151.255 103.289 cv
cp
@
156 102.5 mo
156 106.5 li
@
156.5 108.5 mo
156.5 108.776 156.276 109 156 109 cv
155.724 109 155.5 108.776 155.5 108.5 cv
155.5 108.224 155.724 108 156 108 cv
156.276 108 156.5 108.224 156.5 108.5 cv
cp
f
339.5 59.5 mo
339.5 65.5 li
@
349.5 59.5 mo
349.5 65.5 li
@
356.5 59.5 mo
356.5 65.5 li
@
342.5 59.5 mo
342.5 62.5 li
@
344.5 59.5 mo
344.5 62.5 li
@
346.5 59.5 mo
346.5 62.5 li
@
351.5 59.5 mo
351.5 62.5 li
@
354.5 59.5 mo
354.5 62.5 li
@
354.5 64.5 mo
354.5 65.5 li
@
351.5 64.5 mo
351.5 65.5 li
@
346.5 64.5 mo
346.5 65.5 li
@
344.5 64.5 mo
344.5 65.5 li
@
342.5 64.5 mo
342.5 65.5 li
@
359.5 54.5 mo
359.5 53 li
359.5 52.1714 358.828 51.5 358 51.5 cv
356.5 51.5 li
@
339.5 51.5 mo
338 51.5 li
337.172 51.5 336.5 52.1714 336.5 53 cv
336.5 54.5 li
@
356.5 68.5 mo
358 68.5 li
358.828 68.5 359.5 67.8286 359.5 67 cv
359.5 65.5 li
@
336.5 65.5 mo
336.5 67 li
336.5 67.8286 337.172 68.5 338 68.5 cv
339.5 68.5 li
@
336.5 59.5 mo
359.5 59.5 li
@
339.5 54.5 mo
339.5 57.5 li
@
342.5 54.5 mo
342.5 57.5 li
@
344.5 54.5 mo
344.5 57.5 li
@
346.5 54.5 mo
346.5 57.5 li
@
349.5 54.5 mo
349.5 57.5 li
@
351.5 54.5 mo
351.5 57.5 li
@
354.5 54.5 mo
354.5 57.5 li
@
356.5 54.5 mo
356.5 57.5 li
@
310.5 54.5 mo
289.5 54.5 li
289.5 69 li
289.5 69.8286 290.172 70.5 291 70.5 cv
309 70.5 li
309.828 70.5 310.5 69.8286 310.5 69 cv
310.5 54.5 li
cp
@
295.5 56.5 mo
295.5 51 li
295.5 50.1714 296.172 49.5 297 49.5 cv
303 49.5 li
303.828 49.5 304.5 50.1714 304.5 51 cv
304.5 56.5 li
@
289.5 66.5 mo
310.5 66.5 li
@
100 68 mo
101.875 69.875 104.542 69.0415 106 70.5 cv
107.542 68.9585 116.958 59.5415 118.5 58 cv
117.042 56.5415 117.875 53.875 116 52 cv
114.125 50.125 111.458 50.9585 110 49.5 cv
108.458 51.0415 99.0415 60.4585 97.5 62 cv
98.9585 63.4585 98.125 66.125 100 68 cv
cp
@
101.5 58 mo
105.7 62.2002 104.3 63.7998 108.5 68 cv
@
107.5 52 mo
111.546 56.0464 110.454 57.9536 114.5 62 cv
@
385.5 50.5 mo
386.875 50.5 li
387.542 50.5 388.128 50.9399 388.315 51.5801 cv
391.5 62.5 li
389.743 64.6958 li
389.586 64.8926 389.5 65.1372 389.5 65.3896 cv
389.5 65.3896 li
389.5 66.0029 389.997 66.5 390.61 66.5 cv
404.5 66.5 li
@
391.5 62.5 mo
401.548 62.5 li
402.129 62.5 402.658 62.1646 402.905 61.6387 cv
406.395 54.2246 li
406.464 54.0767 406.5 53.915 406.5 53.752 cv
406.5 53.6104 li
406.5 52.9971 406.003 52.5 405.39 52.5 cv
401.311 52.5 li
@
393.311 52.5 mo
388.583 52.5 li
@
392.5 70 mo
392.5 69.1714 391.828 68.5 391 68.5 cv
390.172 68.5 389.5 69.1714 389.5 70 cv
389.5 70.8286 390.172 71.5 391 71.5 cv
391.828 71.5 392.5 70.8286 392.5 70 cv
cp
@
404.5 70 mo
404.5 69.1714 403.828 68.5 403 68.5 cv
402.172 68.5 401.5 69.1714 401.5 70 cv
401.5 70.8286 402.172 71.5 403 71.5 cv
403.828 71.5 404.5 70.8286 404.5 70 cv
cp
@
397.311 58.5 mo
400.811 56.8696 401.311 55.7554 401.311 52.4131 cv
401.311 49.8042 li
397.311 48.5 li
393.311 49.8042 li
393.311 52.4131 li
393.311 55.7554 393.811 56.8696 397.311 58.5 cv
cp
@
399.311 53.5 mo
399.24 54.9434 398.885 55.4697 397.311 56.2773 cv
397.311 53.5 li
399.311 53.5 li
cp
@
395.311 53.5 mo
395.311 51.2559 li
397.311 50.6035 li
397.311 53.5 li
395.311 53.5 li
cp
@
432.5 56.5 mo
455.5 56.5 li
@
433.5 56.5 mo
436.531 65.1606 li
436.813 65.9629 437.569 66.5 438.419 66.5 cv
439 66.5 li
@
449 66.5 mo
449.581 66.5 li
450.431 66.5 451.188 65.9629 451.469 65.1606 cv
454.5 56.5 li
@
442.5 48.5 mo
437 56.5 li
@
445.5 48.5 mo
451 56.5 li
@
439 66.5 mo
439 63.7388 441.238 61.5 444 61.5 cv
446.762 61.5 449 63.7388 449 66.5 cv
449 69.2612 446.762 71.5 444 71.5 cv
441.238 71.5 439 69.2612 439 66.5 cv
cp
@
442 66.5 mo
446 66.5 li
@
444 64.5 mo
444 68.5 li
@
111 200.5 mo
111 202.157 109.657 203.5 108 203.5 cv
106.343 203.5 105 202.157 105 200.5 cv
105 198.843 106.343 197.5 108 197.5 cv
109.657 197.5 111 198.843 111 200.5 cv
cp
@
108 205.5 mo
105.935 205.5 104.056 206.252 102.855 206.875 cv
102.025 207.306 101.5 208.163 101.5 209.105 cv
101.5 209.563 li
101.5 210.08 101.916 210.5 102.429 210.5 cv
113.571 210.5 li
114.084 210.5 114.5 210.08 114.5 209.563 cv
114.5 209.105 li
114.5 208.163 113.975 207.306 113.145 206.875 cv
111.944 206.252 110.065 205.5 108 205.5 cv
cp
@
119.5 204 mo
119.5 210.351 114.351 215.5 108 215.5 cv
101.649 215.5 96.5 210.351 96.5 204 cv
96.5 197.649 101.649 192.5 108 192.5 cv
114.351 192.5 119.5 197.649 119.5 204 cv
cp
@
22.8682 63.5 mo
19.6206 63.5 15.5 65.8516 15.5 68.7642 cv
15.5 69.418 15.7461 70.0649 16.3403 70.6597 cv
16.9351 71.2539 17.582 71.5 18.2358 71.5 cv
21.1484 71.5 23.5 67.3794 23.5 64.1318 cv
23.5 63.7827 23.2173 63.5 22.8682 63.5 cv
cp
@
21.5 65.5 mo
18.6875 66.7085 16.5688 68.0405 15.5 71.5 cv
@
16.5 54 mo
16.5 57.0376 14.0376 59.5 11 59.5 cv
7.9624 59.5 5.5 57.0376 5.5 54 cv
5.5 50.9624 7.9624 48.5 11 48.5 cv
14.0376 48.5 16.5 50.9624 16.5 54 cv
cp
@
19.8936 64.0732 mo
19.7104 63.9351 19.5186 63.8066 19.3101 63.6997 cv
17.3711 62.7041 14.3359 61.5 11 61.5 cv
7.66406 61.5 4.62891 62.7041 2.68945 63.6997 cv
1.34766 64.3887 .500001 65.7598 .500001 67.2681 cv
.500001 68 li
.500001 68.8286 1.17139 69.5 2 69.5 cv
15.6245 69.5 li
@
356 110.5 mo
352.5 119.5 li
356 118.5 li
359.5 119.5 li
356 110.5 li
cp
@
352.5 102 mo
352.5 105.038 350.037 107.5 347 107.5 cv
343.963 107.5 341.5 105.038 341.5 102 cv
341.5 98.9624 343.963 96.5 347 96.5 cv
350.037 96.5 352.5 98.9624 352.5 102 cv
cp
@
355.491 111.809 mo
355.43 111.773 355.373 111.732 355.311 111.7 cv
353.371 110.704 350.336 109.5 347 109.5 cv
343.664 109.5 340.629 110.704 338.689 111.7 cv
337.348 112.389 336.5 113.76 336.5 115.268 cv
336.5 116 li
336.5 116.829 337.172 117.5 338 117.5 cv
353.277 117.5 li
@
102 111.5 mo
103.5 108.5 li
105.5 109.5 li
103 103.5 li
96.5 103.5 li
98.5 105.5 li
96.6802 109.14 li
96.1382 110.224 96.9268 111.5 98.1392 111.5 cv
105.5 111.5 li
105.5 117.5 li
103.072 117.5 li
102.087 117.5 101.166 117.017 100.605 116.208 cv
97 111 li
@
111.5 117.5 mo
112.928 117.5 li
113.913 117.5 114.834 117.017 115.395 116.208 cv
119 111 li
@
115 111.5 mo
112.5 107.5 li
117 105 li
119.32 109.14 li
119.862 110.224 119.073 111.5 117.861 111.5 cv
111.5 111.5 li
@
108.5 100 mo
106 103.5 li
100.5 100.5 li
102.641 97.645 li
103.8 96.1001 106.133 96.1479 107.228 97.7397 cv
110.5 102.5 li
108.5 103.5 li
114 104.5 li
116.5 98.5 li
114.5 99.5 li
113.094 97.3906 li
112.723 96.834 112.098 96.5 111.43 96.5 cv
105.5 96.5 li
@
111.5 117.5 mo
111.5 119.5 li
107.5 115 li
111.5 109.5 li
111.5 111.5 li
@
253 110 mo
251 110 li
251 106 li
253 106 li
@
247 110 mo
247 106 li
248 106 li
248.553 106 249 106.448 249 107 cv
249 107 li
249 107.552 248.553 108 248 108 cv
247 108 li
@
251 108 mo
252.5 108 li
@
254.5 106 mo
257.5 106 li
@
256 106 mo
256 110 li
@
252.5 96.5254 mo
249.458 99.5415 li
248.171 97.1709 li
@
241.805 113.309 mo
245.945 114.43 li
244.536 116.731 li
@
261.692 114.173 mo
260.596 110.028 li
263.293 110.098 li
@
241.805 113.309 mo
243.724 116.986 247.565 119.5 252 119.5 cv
254.978 119.5 257.683 118.358 259.725 116.501 cv
@
252.5 96.5254 mo
252.333 96.5181 252.169 96.5 252 96.5 cv
245.648 96.5 240.5 101.648 240.5 108 cv
240.5 108.839 240.596 109.656 240.767 110.444 cv
@
261.692 114.173 mo
262.831 112.388 263.5 110.274 263.5 108 cv
263.5 102.87 260.139 98.5273 255.5 97.0464 cv
@
446 157.5 mo
447.487 158.166 452.183 160.443 452.183 160.443 cv
452.626 160.596 453.127 160.438 453.37 160.017 cv
453.614 159.595 453.5 159.083 453.146 158.775 cv
453.146 158.775 449.099 156.033 447.778 155.078 cv
445.5 152 li
445.5 151.936 444.963 145.316 444.963 145.316 cv
444.874 144.855 444.487 144.5 444 144.5 cv
443.513 144.5 443.126 144.855 443.037 145.316 cv
443.037 145.316 442.5 151.936 442.5 152 cv
440.222 155.078 li
438.901 156.033 434.854 158.775 434.854 158.775 cv
434.5 159.083 434.386 159.595 434.63 160.017 cv
434.873 160.438 435.374 160.596 435.817 160.443 cv
435.817 160.443 440.513 158.166 442 157.5 cv
446 157.5 li
cp
@
444.5 155 mo
444.5 155.276 444.276 155.5 444 155.5 cv
443.724 155.5 443.5 155.276 443.5 155 cv
443.5 154.724 443.724 154.5 444 154.5 cv
444.276 154.5 444.5 154.724 444.5 155 cv
cp
@
443 157.5 mo
441.5 167.5 li
446.5 167.5 li
445 157.5 li
@
356.5 147.5 mo
339.5 147.5 li
339.5 146 li
339.5 145.171 340.172 144.5 341 144.5 cv
355 144.5 li
355.828 144.5 356.5 145.171 356.5 146 cv
356.5 147.5 li
cp
@
343.287 167.382 mo
343.464 167.456 343.655 167.5 343.857 167.5 cv
352.143 167.5 li
352.913 167.5 353.559 166.916 353.635 166.149 cv
355.5 147.5 li
340.5 147.5 li
341.906 161.56 li
@
345.5 164.5 mo
345.5 162.843 344.157 161.5 342.5 161.5 cv
340.843 161.5 339.5 162.843 339.5 164.5 cv
339.5 166.157 340.843 167.5 342.5 167.5 cv
344.157 167.5 345.5 166.157 345.5 164.5 cv
cp
@
343 164.5 mo
343 164.776 342.776 165 342.5 165 cv
342.224 165 342 164.776 342 164.5 cv
342 164.224 342.224 164 342.5 164 cv
342.776 164 343 164.224 343 164.5 cv
cp
f
344.5 156 mo
344.5 154.067 346.067 152.5 348 152.5 cv
349.208 152.5 350.273 153.112 350.902 154.043 cv
@
351.5 156 mo
351.5 157.933 349.933 159.5 348 159.5 cv
346.792 159.5 345.727 158.888 345.098 157.957 cv
@
344.5 156 mo
346.25 154.833 li
@
351.5 156 mo
349.75 157.167 li
@
405 112.5 mo
387 112.5 li
386.172 112.5 385.5 111.829 385.5 111 cv
385.5 105 li
385.5 104.171 386.172 103.5 387 103.5 cv
405 103.5 li
405.828 103.5 406.5 104.171 406.5 105 cv
406.5 111 li
406.5 111.829 405.828 112.5 405 112.5 cv
cp
@
400.5 99 mo
400.5 117 li
400.5 117.829 399.828 118.5 399 118.5 cv
393 118.5 li
392.172 118.5 391.5 117.829 391.5 117 cv
391.5 99 li
391.5 98.1714 392.172 97.5 393 97.5 cv
399 97.5 li
399.828 97.5 400.5 98.1714 400.5 99 cv
cp
@
394.5 106 mo
394.5 106.276 394.276 106.5 394 106.5 cv
393.724 106.5 393.5 106.276 393.5 106 cv
393.5 105.724 393.724 105.5 394 105.5 cv
394.276 105.5 394.5 105.724 394.5 106 cv
cp
@
398.5 106 mo
398.5 106.276 398.276 106.5 398 106.5 cv
397.724 106.5 397.5 106.276 397.5 106 cv
397.5 105.724 397.724 105.5 398 105.5 cv
398.276 105.5 398.5 105.724 398.5 106 cv
cp
@
394.5 110 mo
394.5 110.276 394.276 110.5 394 110.5 cv
393.724 110.5 393.5 110.276 393.5 110 cv
393.5 109.724 393.724 109.5 394 109.5 cv
394.276 109.5 394.5 109.724 394.5 110 cv
cp
@
398.5 110 mo
398.5 110.276 398.276 110.5 398 110.5 cv
397.724 110.5 397.5 110.276 397.5 110 cv
397.5 109.724 397.724 109.5 398 109.5 cv
398.276 109.5 398.5 109.724 398.5 110 cv
cp
@
396.5 108 mo
396.5 108.276 396.276 108.5 396 108.5 cv
395.724 108.5 395.5 108.276 395.5 108 cv
395.5 107.724 395.724 107.5 396 107.5 cv
396.276 107.5 396.5 107.724 396.5 108 cv
cp
@
215 104.499 mo
212.5 100 li
206.5 103.67 li
206.5 96.5 li
201.5 96.5 li
201.5 103.67 li
195.5 100 li
193 104.373 li
199 108 li
193 111.497 li
195.5 116 li
201.5 112.33 li
201.5 119.5 li
206.5 119.5 li
206.5 112.33 li
212.5 116 li
215 111.499 li
209 108 li
215 104.499 li
cp
@
151.5 48.5 mo
151.5 54.5 li
@
148.499 58.5 mo
163.5 58.5 li
@
148.499 67.5 mo
163.5 67.5 li
@
152.5 61.5 mo
159.5 61.5 li
@
152.5 64.5 mo
159.5 64.5 li
@
162 54.5 mo
150 54.5 li
149.171 54.5 148.5 53.8286 148.5 53 cv
148.5 50 li
148.5 49.1714 149.171 48.5 150 48.5 cv
162 48.5 li
162.829 48.5 163.5 49.1714 163.5 50 cv
163.5 53 li
163.5 53.8286 162.829 54.5 162 54.5 cv
cp
@
150.5 54.5 mo
149.379 55.6211 li
148.816 56.1841 148.5 56.9468 148.5 57.7427 cv
148.5 70 li
148.5 70.8286 149.171 71.5 150 71.5 cv
162 71.5 li
162.829 71.5 163.5 70.8286 163.5 70 cv
163.5 57.7427 li
163.5 56.9468 163.184 56.1841 162.621 55.6211 cv
161.5 54.5 li
@
154.5 48.5 mo
154.5 54.5 li
@
157.5 48.5 mo
157.5 54.5 li
@
160.5 48.5 mo
160.5 54.5 li
@
444 100.5 mo
448.143 100.5 451.5 103.858 451.5 108 cv
451.5 112.142 448.143 115.5 444 115.5 cv
439.857 115.5 436.5 112.142 436.5 108 cv
@
444 113.5 mo
440.963 113.5 438.5 111.038 438.5 108 cv
438.5 104.962 440.963 102.5 444 102.5 cv
447.037 102.5 449.5 104.962 449.5 108 cv
@
453 97.5 mo
452.347 97.5 li
452.173 97.7935 451.866 98 451.5 98 cv
451.134 98 450.827 97.7935 450.653 97.5 cv
449.347 97.5 li
449.173 97.7935 448.866 98 448.5 98 cv
448.134 98 447.827 97.7935 447.653 97.5 cv
446.347 97.5 li
446.173 97.7935 445.866 98 445.5 98 cv
445.134 98 444.827 97.7935 444.653 97.5 cv
443.347 97.5 li
443.173 97.7935 442.866 98 442.5 98 cv
442.134 98 441.827 97.7935 441.653 97.5 cv
440.347 97.5 li
440.173 97.7935 439.866 98 439.5 98 cv
439.134 98 438.827 97.7935 438.653 97.5 cv
437.347 97.5 li
437.173 97.7935 436.866 98 436.5 98 cv
436.134 98 435.827 97.7935 435.653 97.5 cv
435 97.5 li
434.172 97.5 433.5 98.1714 433.5 99 cv
433.5 117 li
433.5 117.829 434.172 118.5 435 118.5 cv
435.653 118.5 li
435.827 118.207 436.134 118 436.5 118 cv
436.866 118 437.173 118.207 437.347 118.5 cv
438.653 118.5 li
438.827 118.207 439.134 118 439.5 118 cv
439.866 118 440.173 118.207 440.347 118.5 cv
441.653 118.5 li
441.827 118.207 442.134 118 442.5 118 cv
442.866 118 443.173 118.207 443.347 118.5 cv
444.653 118.5 li
444.827 118.207 445.134 118 445.5 118 cv
445.866 118 446.173 118.207 446.347 118.5 cv
447.653 118.5 li
447.827 118.207 448.134 118 448.5 118 cv
448.866 118 449.173 118.207 449.347 118.5 cv
450.653 118.5 li
450.827 118.207 451.134 118 451.5 118 cv
451.866 118 452.173 118.207 452.347 118.5 cv
453 118.5 li
453.828 118.5 454.5 117.829 454.5 117 cv
454.5 99 li
454.5 98.1714 453.828 97.5 453 97.5 cv
cp
@
3.5 159.5 mo
16.9395 145.939 li
17.2109 145.668 17.5859 145.5 18 145.5 cv
18.4141 145.5 18.7891 145.668 19.0605 145.939 cv
22.0605 148.939 li
22.332 149.211 22.5 149.586 22.5 150 cv
22.5 150.414 22.332 150.789 22.0605 151.061 cv
8.5 164.5 li
1.5 166.5 li
3.5 159.5 li
cp
@
19.5024 153.596 mo
14.4043 148.498 li
@
8.5 164.5 mo
8.5 162.5 li
6.5 161.5 li
5.5 159.5 li
3.5 159.5 li
@
5.4624 165.368 mo
2.62695 162.533 li
@
17 151 mo
6.5 161.5 li
@
6.98438 155.984 mo
1.5 150.5 li
6.5 145.5 li
11.9619 150.962 li
@
17.0381 156.038 mo
22.5 161.5 li
17.5 166.5 li
12.0156 161.016 li
@
15.5 164.5 mo
17.5 162.5 li
@
13.5 162.5 mo
15.5 160.5 li
@
5.5 154.5 mo
7.5 152.5 li
@
3.5 152.5 mo
5.5 150.5 li
@
145.5 166.5 mo
154.833 157.167 154.896 159.104 161.5 152.5 cv
@
166.5 145.5 mo
163.387 148.613 160.52 149.855 158.011 150.966 cv
157.5 152.5 li
157.5 152.5 157.377 151.956 157.096 151.378 cv
155.638 152.045 154.319 152.752 153.159 153.861 cv
153.147 154.323 153.222 154.877 153.5 155.5 cv
153.019 155.534 152.565 155.283 152.176 154.952 cv
149.646 158.232 149.5 162.5 149.5 162.5 cv
149.5 162.5 153.183 164.317 160 157.5 cv
166.817 150.683 166.5 145.5 166.5 145.5 cv
cp
@
167.5 12 mo
167.5 18.3511 162.351 23.5 156 23.5 cv
149.649 23.5 144.5 18.3511 144.5 12 cv
144.5 5.64893 149.649 .5 156 .5 cv
162.351 .5 167.5 5.64893 167.5 12 cv
cp
@
4 ml
156 .5 mo
156.333 .5 156.66 .562012 156.978 .681152 cv
@
[1.82323 2.73484 ] 0 dsh
159.041 2.41553 mo
160.523 4.47607 161.5 7.99951 161.5 12 cv
161.5 16.7681 160.112 20.8589 158.135 22.6016 cv
@
[] 0 dsh
156.978 23.3188 mo
156.66 23.438 156.333 23.5 156 23.5 cv
@
10 ml
156 23.5 mo
152.962 23.5 150.5 18.3511 150.5 12 cv
150.5 5.64893 152.962 .5 156 .5 cv
@
4 ml
144.5 12 mo
144.5 11.6665 144.562 11.3398 144.681 11.0225 cv
@
[1.82323 2.73484 ] 0 dsh
146.416 8.95947 mo
148.476 7.47705 152 6.5 156 6.5 cv
160.769 6.5 164.859 7.8877 166.602 9.86523 cv
@
[] 0 dsh
167.319 11.0225 mo
167.438 11.3398 167.5 11.6665 167.5 12 cv
@
10 ml
167.5 12 mo
167.5 15.0376 162.351 17.5 156 17.5 cv
149.649 17.5 144.5 15.0376 144.5 12 cv
@
68.4443 149.192 mo
66.3438 146.922 63.3384 145.5 60.001 145.5 cv
56.6328 145.5 53.603 146.948 51.5 149.255 cv
@
68.501 146.5 mo
68.501 149.5 li
65.501 149.5 li
@
49.5 150.5 mo
49.5 166.5 li
57.5 158.5 li
49.5 150.5 li
cp
@
70.5 150.5 mo
70.5 166.5 li
62.5015 158.501 li
70.5 150.5 li
cp
@
4 ml
60 166.5 mo
60 165.5 li
@
[1.77778 2.66667 ] 0 dsh
60 162.833 mo
60 150.833 li
@
[] 0 dsh
60 149.5 mo
60 148.5 li
@
10 ml
210 167.5 mo
198 167.5 li
197.171 167.5 196.5 166.829 196.5 166 cv
196.5 146 li
196.5 145.171 197.171 144.5 198 144.5 cv
210 144.5 li
210.829 144.5 211.5 145.171 211.5 146 cv
211.5 166 li
211.5 166.829 210.829 167.5 210 167.5 cv
cp
@
203.5 146.5 mo
204.5 146.5 li
@
202.5 165.5 mo
205.5 165.5 li
@
210 146.5 mo
210 146.776 209.776 147 209.5 147 cv
209.224 147 209 146.776 209 146.5 cv
209 146.224 209.224 146 209.5 146 cv
209.776 146 210 146.224 210 146.5 cv
cp
f
196.5 163.5 mo
211.5 163.5 li
@
303 164.5 mo
307.694 164.5 311.5 160.694 311.5 156 cv
311.5 151.306 307.694 147.5 303 147.5 cv
298.548 147.5 294.901 150.924 294.536 155.282 cv
@
302.431 157.658 mo
302.438 157.656 li
301.453 154.203 li
301.441 154.207 li
301.314 153.801 300.948 153.5 300.5 153.5 cv
300.231 153.5 289.27 157.033 289.221 157.056 cv
288.808 157.179 288.5 157.547 288.5 158 cv
288.5 158.079 288.527 158.149 288.545 158.223 cv
288.526 158.229 li
289.52 161.694 li
289.538 161.688 li
289.629 162.147 290.015 162.5 290.5 162.5 cv
290.656 162.5 301.73 158.967 301.779 158.944 cv
302.192 158.821 302.5 158.453 302.5 158 cv
302.5 157.879 302.471 157.766 302.431 157.658 cv
cp
@
299.5 157 mo
299.5 157.552 299.053 158 298.5 158 cv
297.947 158 297.5 157.552 297.5 157 cv
297.5 156.448 297.947 156 298.5 156 cv
299.053 156 299.5 156.448 299.5 157 cv
cp
@
254.5 60 mo
254.5 61.3809 253.381 62.5 252 62.5 cv
250.619 62.5 249.5 61.3809 249.5 60 cv
249.5 58.6191 250.619 57.5 252 57.5 cv
253.381 57.5 254.5 58.6191 254.5 60 cv
cp
@
244.998 56.5 mo
243.065 56.5 241.498 54.9331 241.498 53 cv
241.498 51.0669 243.065 49.5 244.998 49.5 cv
246.931 49.5 248.498 51.0669 248.498 53 cv
@
255.498 53 mo
255.498 51.0669 257.065 49.5 258.998 49.5 cv
260.931 49.5 262.498 51.0669 262.498 53 cv
262.498 54.9331 260.931 56.5 258.998 56.5 cv
@
258.998 63.5 mo
260.931 63.5 262.498 65.0669 262.498 67 cv
262.498 68.9331 260.931 70.5 258.998 70.5 cv
257.065 70.5 255.498 68.9331 255.498 67 cv
@
248.498 67 mo
248.498 68.9331 246.931 70.5 244.998 70.5 cv
243.065 70.5 241.498 68.9331 241.498 67 cv
241.498 65.0669 243.065 63.5 244.998 63.5 cv
@
258.498 67.5 mo
258.498 67.5 255.998 64.5 251.998 64.5 cv
247.998 64.5 245.498 67.5 245.498 67.5 cv
244.498 66.5 li
244.498 66.5 247.498 64 247.498 60 cv
247.498 56 244.498 53.5 244.498 53.5 cv
245.498 52.5 li
245.498 52.5 247.998 55.5 251.998 55.5 cv
255.998 55.5 258.498 52.5 258.498 52.5 cv
259.498 53.5 li
259.498 53.5 256.498 56 256.498 60 cv
256.498 64 259.498 66.5 259.498 66.5 cv
258.498 67.5 li
cp
@
343.5 293.5 mo
344 288.5 li
351 288.5 li
351.5 293.5 li
@
343.5 306.5 mo
344 311.5 li
351 311.5 li
351.5 306.5 li
@
352 306.5 mo
343 306.5 li
342.172 306.5 341.5 305.828 341.5 305 cv
341.5 295 li
341.5 294.172 342.172 293.5 343 293.5 cv
352 293.5 li
352.828 293.5 353.5 294.172 353.5 295 cv
353.5 305 li
353.5 305.828 352.828 306.5 352 306.5 cv
cp
@
353.5 301.5 mo
354 301.5 li
354 304.5 li
353.5 304.5 li
@
354.5 298.5 mo
353.5 298.5 li
353.5 296.5 li
354.5 296.5 li
354.5 298.5 li
cp
@
293 115.5 mo
293 115.5 li
291.619 115.5 290.5 114.381 290.5 113 cv
290.5 103 li
290.5 101.619 291.619 100.5 293 100.5 cv
293 100.5 li
294.381 100.5 295.5 101.619 295.5 103 cv
295.5 113 li
295.5 114.381 294.381 115.5 293 115.5 cv
cp
@
293.5 104 mo
293.5 104.276 293.276 104.5 293 104.5 cv
292.724 104.5 292.5 104.276 292.5 104 cv
292.5 103.724 292.724 103.5 293 103.5 cv
293.276 103.5 293.5 103.724 293.5 104 cv
cp
@
291.435 114.935 mo
293.169 117.704 296.408 119.5 299.5 119.5 cv
304.747 119.5 309.5 114.351 309.5 108 cv
309.5 101.648 304.747 96.5 299.5 96.5 cv
296.408 96.5 293.169 98.2964 291.435 101.065 cv
@
294.135 100.784 mo
295.445 99.3638 297.644 98.5 299.5 98.5 cv
303.636 98.5 307.5 102.762 307.5 108 cv
307.5 113.238 303.636 117.5 299.5 117.5 cv
297.644 117.5 295.445 116.636 294.135 115.216 cv
@
293 107.5 mo
292.724 107.5 292.5 107.724 292.5 108 cv
292.5 111.5 li
292.5 111.776 292.724 112 293 112 cv
293.276 112 293.5 111.776 293.5 111.5 cv
293.5 108 li
293.5 107.724 293.276 107.5 293 107.5 cv
cp
@
66 195.5 mo
54 195.5 li
53.1714 195.5 52.5 196.171 52.5 197 cv
52.5 214 li
52.5 214.829 53.1714 215.5 54 215.5 cv
66 215.5 li
66.8286 215.5 67.5 214.829 67.5 214 cv
67.5 197 li
67.5 196.171 66.8286 195.5 66 195.5 cv
cp
@
63.5332 192.529 mo
56.5 192.529 li
56.5 195.5 li
63.5332 195.5 li
63.5332 192.529 li
cp
@
65.5 213.5 mo
54.5 213.5 li
54.5 197.5 li
65.5 197.5 li
65.5 213.5 li
cp
@
54.5 205.5 mo
65.5 205.5 li
@
54.5 201.5 mo
65.5 201.5 li
@
54.5 209.5 mo
65.5 209.5 li
@
7.27783 203.056 mo
8.6377 205.729 10.2715 207.353 12.9443 208.722 cv
15.2207 207.003 li
15.4756 206.749 15.8535 206.664 16.1841 206.777 cv
17.2417 207.126 18.3843 207.315 19.5557 207.315 cv
20.0752 207.315 20.5 207.74 20.5 208.259 cv
20.5 211.556 li
20.5 212.075 20.0752 212.5 19.5557 212.5 cv
10.687 212.5 3.5 205.313 3.5 196.444 cv
3.5 195.925 3.92481 195.5 4.44434 195.5 cv
7.75 195.5 li
8.26953 195.5 8.69434 195.925 8.69434 196.444 cv
8.69434 197.625 8.8833 198.758 9.23291 199.816 cv
9.33643 200.146 9.26123 200.515 8.99658 200.779 cv
7.27783 203.056 li
cp
@
19 116.5 mo
5 116.5 li
4.17139 116.5 3.5 115.829 3.5 115 cv
3.5 101 li
3.5 100.171 4.17139 99.5 5 99.5 cv
19 99.5 li
19.8286 99.5 20.5 100.171 20.5 101 cv
20.5 115 li
20.5 115.829 19.8286 116.5 19 116.5 cv
cp
@
6 99.5 mo
6 97.5 li
@
9 99.5 mo
9 97.5 li
@
12 99.5 mo
12 97.5 li
@
15 99.5 mo
15 97.5 li
@
18 99.5 mo
18 97.5 li
@
6 118.5 mo
6 116.5 li
@
9 118.5 mo
9 116.5 li
@
12 118.5 mo
12 116.5 li
@
15 118.5 mo
15 116.5 li
@
18 118.5 mo
18 116.5 li
@
20.5 102 mo
22.5 102 li
@
20.5 105 mo
22.5 105 li
@
20.5 108 mo
22.5 108 li
@
20.5 111 mo
22.5 111 li
@
20.5 114 mo
22.5 114 li
@
1.5 102 mo
3.5 102 li
@
1.5 105 mo
3.5 105 li
@
1.5 108 mo
3.5 108 li
@
1.5 111 mo
3.5 111 li
@
1.5 114 mo
3.5 114 li
@
18.5 114.5 mo
5.5 114.5 li
5.5 101.5 li
18.5 101.5 li
18.5 114.5 li
cp
@
199.5 199.5 mo
198.948 199.5 198.5 199.948 198.5 200.5 cv
198.5 205.767 li
198.5 206.912 198.718 208.046 199.144 209.109 cv
200.5 212.5 li
207.5 212.5 li
208.856 209.109 li
209.282 208.046 209.5 206.912 209.5 205.767 cv
209.5 200.5 li
209.5 199.948 209.052 199.5 208.5 199.5 cv
@
202.5 212.5 mo
202.5 215.5 li
@
205.5 212.5 mo
205.5 215.5 li
@
208.5 199.5 mo
199.5 199.5 li
199.5 192.5 li
208.5 192.5 li
208.5 199.5 li
cp
@
202.5 196.5 mo
201.5 196.5 li
201.5 194.5 li
202.5 194.5 li
202.5 196.5 li
cp
@
206.5 196.5 mo
205.5 196.5 li
205.5 194.5 li
206.5 194.5 li
206.5 196.5 li
cp
@
290 4.5 mo
310 4.5 li
310.828 4.5 311.5 5.17139 311.5 6 cv
311.5 18 li
311.5 18.8286 310.828 19.5 310 19.5 cv
290 19.5 li
289.172 19.5 288.5 18.8286 288.5 18 cv
288.5 6 li
288.5 5.17139 289.172 4.5 290 4.5 cv
cp
@
293 10.0796 mo
293 10.0796 li
293 10.2168 293.013 10.3535 293.038 10.4878 cv
293.762 14.3281 li
293.945 15.3003 294.749 16 295.684 16 cv
304.316 16 li
305.251 16 306.055 15.3003 306.238 14.3281 cv
306.962 10.4878 li
306.987 10.3535 307 10.2168 307 10.0796 cv
307 10.0796 li
307 8.93115 306.123 8 305.04 8 cv
294.96 8 li
293.877 8 293 8.93115 293 10.0796 cv
cp
@
291.5 12 mo
291.5 12.2764 291.276 12.5 291 12.5 cv
290.724 12.5 290.5 12.2764 290.5 12 cv
290.5 11.7236 290.724 11.5 291 11.5 cv
291.276 11.5 291.5 11.7236 291.5 12 cv
cp
@
309.5 12 mo
309.5 12.2764 309.276 12.5 309 12.5 cv
308.724 12.5 308.5 12.2764 308.5 12 cv
308.5 11.7236 308.724 11.5 309 11.5 cv
309.276 11.5 309.5 11.7236 309.5 12 cv
cp
@
296 10 mo
296 10.2764 295.776 10.5 295.5 10.5 cv
295.224 10.5 295 10.2764 295 10 cv
295 9.72363 295.224 9.5 295.5 9.5 cv
295.776 9.5 296 9.72363 296 10 cv
cp
f
298 10 mo
298 10.2764 297.776 10.5 297.5 10.5 cv
297.224 10.5 297 10.2764 297 10 cv
297 9.72363 297.224 9.5 297.5 9.5 cv
297.776 9.5 298 9.72363 298 10 cv
cp
f
300 10 mo
300 10.2764 299.776 10.5 299.5 10.5 cv
299.224 10.5 299 10.2764 299 10 cv
299 9.72363 299.224 9.5 299.5 9.5 cv
299.776 9.5 300 9.72363 300 10 cv
cp
f
302 10 mo
302 10.2764 301.776 10.5 301.5 10.5 cv
301.224 10.5 301 10.2764 301 10 cv
301 9.72363 301.224 9.5 301.5 9.5 cv
301.776 9.5 302 9.72363 302 10 cv
cp
f
304 10 mo
304 10.2764 303.776 10.5 303.5 10.5 cv
303.224 10.5 303 10.2764 303 10 cv
303 9.72363 303.224 9.5 303.5 9.5 cv
303.776 9.5 304 9.72363 304 10 cv
cp
f
296 14 mo
296 14.2764 295.776 14.5 295.5 14.5 cv
295.224 14.5 295 14.2764 295 14 cv
295 13.7236 295.224 13.5 295.5 13.5 cv
295.776 13.5 296 13.7236 296 14 cv
cp
f
298 14 mo
298 14.2764 297.776 14.5 297.5 14.5 cv
297.224 14.5 297 14.2764 297 14 cv
297 13.7236 297.224 13.5 297.5 13.5 cv
297.776 13.5 298 13.7236 298 14 cv
cp
f
300 14 mo
300 14.2764 299.776 14.5 299.5 14.5 cv
299.224 14.5 299 14.2764 299 14 cv
299 13.7236 299.224 13.5 299.5 13.5 cv
299.776 13.5 300 13.7236 300 14 cv
cp
f
302 14 mo
302 14.2764 301.776 14.5 301.5 14.5 cv
301.224 14.5 301 14.2764 301 14 cv
301 13.7236 301.224 13.5 301.5 13.5 cv
301.776 13.5 302 13.7236 302 14 cv
cp
f
304 14 mo
304 14.2764 303.776 14.5 303.5 14.5 cv
303.224 14.5 303 14.2764 303 14 cv
303 13.7236 303.224 13.5 303.5 13.5 cv
303.776 13.5 304 13.7236 304 14 cv
cp
f
297 12 mo
297 12.2764 296.776 12.5 296.5 12.5 cv
296.224 12.5 296 12.2764 296 12 cv
296 11.7236 296.224 11.5 296.5 11.5 cv
296.776 11.5 297 11.7236 297 12 cv
cp
f
299 12 mo
299 12.2764 298.776 12.5 298.5 12.5 cv
298.224 12.5 298 12.2764 298 12 cv
298 11.7236 298.224 11.5 298.5 11.5 cv
298.776 11.5 299 11.7236 299 12 cv
cp
f
301 12 mo
301 12.2764 300.776 12.5 300.5 12.5 cv
300.224 12.5 300 12.2764 300 12 cv
300 11.7236 300.224 11.5 300.5 11.5 cv
300.776 11.5 301 11.7236 301 12 cv
cp
f
303 12 mo
303 12.2764 302.776 12.5 302.5 12.5 cv
302.224 12.5 302 12.2764 302 12 cv
302 11.7236 302.224 11.5 302.5 11.5 cv
302.776 11.5 303 11.7236 303 12 cv
cp
f
305 12 mo
305 12.2764 304.776 12.5 304.5 12.5 cv
304.224 12.5 304 12.2764 304 12 cv
304 11.7236 304.224 11.5 304.5 11.5 cv
304.776 11.5 305 11.7236 305 12 cv
cp
f
260.924 206.457 mo
262.378 206.25 263.5 205.012 263.5 203.5 cv
263.5 201.843 262.157 200.5 260.5 200.5 cv
@
261.483 200.679 mo
261.316 197.792 258.929 195.5 256 195.5 cv
253.835 195.5 251.968 196.754 251.07 198.572 cv
@
257.5 204.5 mo
259.709 204.5 261.5 206.291 261.5 208.5 cv
261.5 210.709 259.709 212.5 257.5 212.5 cv
245.5 212.5 li
242.738 212.5 240.5 210.261 240.5 207.5 cv
240.5 204.739 242.738 202.5 245.5 202.5 cv
246.417 202.5 247.276 202.747 248.015 203.178 cv
@
258.964 204.786 mo
258.605 201.255 255.625 198.5 252 198.5 cv
249.202 198.5 246.795 200.146 245.674 202.518 cv
@
164.48 345.608 mo
164.289 341.637 161.019 338.5 157 338.5 cv
153.723 338.5 150.956 340.57 149.936 343.5 cv
@
161.501 353.501 mo
163.5 353.5 li
165.709 353.5 167.5 351.709 167.5 349.5 cv
167.5 347.291 165.709 345.5 163.5 345.5 cv
@
152.5 344.5 mo
151.668 343.882 150.616 343.5 149.5 343.5 cv
146.739 343.5 144.5 345.738 144.5 348.5 cv
144.5 351.262 146.739 353.5 149.5 353.5 cv
151.5 353.5 li
@
160.833 350.5 mo
156.5 350.5 li
155.5 349.5 li
152.167 349.5 li
151.798 349.5 151.5 349.799 151.5 350.167 cv
151.5 350.167 li
151.5 356.833 li
151.5 357.201 151.798 357.5 152.167 357.5 cv
160.833 357.5 li
161.202 357.5 161.5 357.201 161.5 356.833 cv
161.5 351.167 li
161.5 350.799 161.202 350.5 160.833 350.5 cv
cp
@
199.5 256.5 mo
199.5 253.738 201.739 251.5 204.5 251.5 cv
207.261 251.5 209.5 253.738 209.5 256.5 cv
209.5 259.262 207.261 261.5 204.5 261.5 cv
201.739 261.5 199.5 259.262 199.5 256.5 cv
cp
@
202 257 mo
203.5 258.5 li
207 255 li
@
212.48 249.608 mo
212.289 245.637 209.019 242.5 205 242.5 cv
201.723 242.5 198.956 244.57 197.936 247.5 cv
@
209.399 257.5 mo
211.5 257.5 li
213.709 257.5 215.5 255.709 215.5 253.5 cv
215.5 251.291 213.709 249.5 211.5 249.5 cv
@
200.5 248.5 mo
199.668 247.882 198.616 247.5 197.5 247.5 cv
194.739 247.5 192.5 249.738 192.5 252.5 cv
192.5 255.262 194.739 257.5 197.5 257.5 cv
199.601 257.5 li
@
394.5 146.5 mo
394.5 149.5 li
396.5 149.5 li
396.5 146.5 li
394.5 146.5 li
cp
@
402.5 157.506 mo
402.5 148 li
399 144.5 li
386 144.5 li
385.172 144.5 384.5 145.171 384.5 146 cv
384.5 161 li
384.5 161.829 385.172 162.5 386 162.5 cv
397.563 162.5 li
@
398.5 144.5 mo
398.5 150 li
398.5 150.829 397.828 151.5 397 151.5 cv
390 151.5 li
389.172 151.5 388.5 150.829 388.5 150 cv
388.5 144.5 li
@
399.5 158.575 mo
399.5 153.5 li
387.5 153.5 li
387.5 162.5 li
@
397.5 162.5 mo
397.5 159.739 399.738 157.5 402.5 157.5 cv
405.262 157.5 407.5 159.739 407.5 162.5 cv
407.5 165.261 405.262 167.5 402.5 167.5 cv
399.738 167.5 397.5 165.261 397.5 162.5 cv
cp
@
402.5 159.5 mo
402.5 162.5 li
404 164 li
@
402.408 252.592 mo
402.5 252.5 li
395.5 245.5 li
386.914 254.086 li
386.009 254.991 385.5 256.22 385.5 257.5 cv
385.5 257.671 li
385.5 260.338 387.662 262.5 390.328 262.5 cv
390.5 262.5 li
391.78 262.5 393.009 261.991 393.914 261.086 cv
396.592 258.408 li
@
400.5 241.5 mo
406.5 247.5 li
402 252 li
396 246 li
400.5 241.5 li
cp
@
400.5 244.5 mo
401 245 li
399.5 246.5 li
399 246 li
399 246 400.5 244.438 400.5 244.5 cv
cp
@
403.001 247.001 mo
403.501 247.501 li
402.001 249.001 li
401.501 248.501 li
401.501 248.501 403.001 246.938 403.001 247.001 cv
cp
@
393.5 257.484 mo
393.5 255.836 392.164 254.5 390.516 254.5 cv
388.867 254.5 387.531 255.836 387.531 257.484 cv
387.531 259.133 388.867 260.469 390.516 260.469 cv
392.164 260.469 393.5 259.133 393.5 257.484 cv
cp
@
396.5 257.5 mo
396.5 254.738 398.738 252.5 401.5 252.5 cv
404.262 252.5 406.5 254.738 406.5 257.5 cv
406.5 260.262 404.262 262.5 401.5 262.5 cv
398.738 262.5 396.5 260.262 396.5 257.5 cv
cp
@
397.965 253.965 mo
405.035 261.035 li
@
453.5 210.5 mo
453.5 212.158 452.156 213.501 450.5 213.501 cv
448.843 213.501 447.499 212.158 447.499 210.5 cv
447.499 208.843 448.843 207.5 450.5 207.5 cv
452.156 207.5 453.5 208.843 453.5 210.5 cv
cp
@
452.619 212.62 mo
455.5 215.5 li
@
453.498 210.48 mo
454.76 208.635 455.5 206.404 455.5 204 cv
455.5 197.649 450.352 192.5 444 192.5 cv
437.648 192.5 432.5 197.649 432.5 204 cv
432.5 210.351 437.648 215.5 444 215.5 cv
446.404 215.5 448.634 214.76 450.479 213.499 cv
@
448.5 204 mo
448.5 206.485 446.485 208.5 444 208.5 cv
441.515 208.5 439.5 206.485 439.5 204 cv
439.5 201.515 441.515 199.5 444 199.5 cv
446.485 199.5 448.5 201.515 448.5 204 cv
cp
@
444.5 204 mo
444.5 203.724 444.276 203.5 444 203.5 cv
443.724 203.5 443.5 203.724 443.5 204 cv
443.5 204.276 443.724 204.5 444 204.5 cv
444.276 204.5 444.5 204.276 444.5 204 cv
cp
@
437.979 198 mo
439.519 196.456 441.647 195.5 444 195.5 cv
@
356.5 8 mo
356.5 8.27637 356.276 8.5 356 8.5 cv
355.724 8.5 355.5 8.27637 355.5 8 cv
355.5 7.72363 355.724 7.5 356 7.5 cv
356.276 7.5 356.5 7.72363 356.5 8 cv
cp
@
358 4.5 mo
354.828 4.5 li
354.298 4.5 353.789 4.28906 353.414 3.91406 cv
351.586 2.08594 li
351.211 1.71094 350.702 1.5 350.172 1.5 cv
345.828 1.5 li
345.298 1.5 344.789 1.71094 344.414 2.08594 cv
342.586 3.91406 li
342.211 4.28906 341.702 4.5 341.172 4.5 cv
338 4.5 li
337.172 4.5 336.5 5.17139 336.5 6 cv
336.5 19 li
336.5 19.8286 337.172 20.5 338 20.5 cv
358 20.5 li
358.828 20.5 359.5 19.8286 359.5 19 cv
359.5 6 li
359.5 5.17139 358.828 4.5 358 4.5 cv
cp
@
346.623 9.5 mo
354 9.5 li
@
345.139 11.9565 mo
348.835 5.55371 li
@
346.524 14.4434 mo
342.835 8.05371 li
@
349.294 14.5 mo
342 14.5 li
@
350.85 12.0649 mo
347.165 18.4463 li
@
349.464 9.53613 mo
353.165 15.9463 li
@
354.5 12 mo
354.5 15.5898 351.59 18.5 348 18.5 cv
344.41 18.5 341.5 15.5898 341.5 12 cv
341.5 8.41016 344.41 5.5 348 5.5 cv
351.59 5.5 354.5 8.41016 354.5 12 cv
cp
@
308.5 243 mo
308.5 243.828 304.694 244.5 300 244.5 cv
295.306 244.5 291.5 243.828 291.5 243 cv
291.5 242.172 295.306 241.5 300 241.5 cv
304.694 241.5 308.5 242.172 308.5 243 cv
cp
@
309.456 253.974 mo
308.747 254.658 308.594 256.063 308.5 258 cv
308.46 258.827 304.694 259.5 300 259.5 cv
295.306 259.5 291.54 258.827 291.5 258 cv
291.406 256.063 291.253 254.658 290.544 253.974 cv
@
292.134 242.433 mo
290.5 242.918 289.5 243.553 289.5 244.25 cv
289.5 245.769 294.201 247 300 247 cv
305.799 247 310.5 245.769 310.5 244.25 cv
310.5 243.553 309.5 242.918 307.866 242.433 cv
@
289.5 244.25 mo
289.5 252.75 li
289.5 254.269 294.201 255.5 300 255.5 cv
305.799 255.5 310.5 254.269 310.5 252.75 cv
310.5 244.25 li
@
307.5 258.699 mo
307.5 258.699 307.5 259.042 307.5 260.5 cv
307.5 261.958 303.792 262.5 300 262.5 cv
296.208 262.5 292.5 261.958 292.5 260.5 cv
292.5 259.042 292.5 258.699 292.5 258.699 cv
@
433.5 255.5 mo
433.5 259.366 436.634 262.5 440.5 262.5 cv
440.5 258.5 li
433.5 251.5 li
433.5 255.5 li
cp
@
445.5 259.5 mo
445.5 252.5 li
447.709 252.5 449.5 250.709 449.5 248.5 cv
449.5 241.5 li
446.5 244 li
444 241.5 li
441.5 244 li
438.5 241.5 li
438.5 248.5 li
438.5 250.709 440.291 252.5 442.5 252.5 cv
442.5 262.5 li
447.5 262.5 li
451.366 262.5 454.5 259.366 454.5 255.5 cv
454.5 251.5 li
445.5 259.5 li
cp
@
112.5 347 mo
112.5 349.485 110.485 351.5 108 351.5 cv
105.515 351.5 103.5 349.485 103.5 347 cv
103.5 344.515 105.515 342.5 108 342.5 cv
110.485 342.5 112.5 344.515 112.5 347 cv
cp
@
116.5 343 mo
116.5 343.276 116.276 343.5 116 343.5 cv
115.724 343.5 115.5 343.276 115.5 343 cv
115.5 342.724 115.724 342.5 116 342.5 cv
116.276 342.5 116.5 342.724 116.5 343 cv
cp
@
117 340.5 mo
114.622 340.5 li
114.224 340.5 113.842 340.342 113.561 340.061 cv
111.439 337.939 li
111.158 337.658 110.776 337.5 110.379 337.5 cv
105.622 337.5 li
105.224 337.5 104.842 337.658 104.561 337.939 cv
102.439 340.061 li
102.158 340.342 101.776 340.5 101.379 340.5 cv
99 340.5 li
98.1714 340.5 97.5 341.172 97.5 342 cv
97.5 353 li
97.5 353.828 98.1714 354.5 99 354.5 cv
104 354.5 li
108 358.5 li
112 354.5 li
117 354.5 li
117.829 354.5 118.5 353.828 118.5 353 cv
118.5 342 li
118.5 341.172 117.829 340.5 117 340.5 cv
cp
@
166 644.5 mo
146 644.5 li
145.171 644.5 144.5 643.828 144.5 643 cv
144.5 629 li
144.5 628.172 145.171 627.5 146 627.5 cv
166 627.5 li
166.829 627.5 167.5 628.172 167.5 629 cv
167.5 643 li
167.5 643.828 166.829 644.5 166 644.5 cv
cp
@
149.5 633 mo
149.5 631.619 150.619 630.5 152 630.5 cv
153.381 630.5 154.5 631.619 154.5 633 cv
154.5 634.381 153.381 635.5 152 635.5 cv
150.619 635.5 149.5 634.381 149.5 633 cv
cp
@
144.565 643.436 mo
150 638 li
153.5 641.5 li
@
152.5 640.5 mo
159 634 li
167.5 642.5 li
@
356.5 200.5 mo
356.5 199 li
356.5 198.171 355.828 197.5 355 197.5 cv
345.5 197.5 li
343.5 195.5 li
338 195.5 li
337.172 195.5 336.5 196.171 336.5 197 cv
336.5 211 li
336.5 211.196 336.54 211.382 336.608 211.554 cv
@
336.609 211.557 mo
336.831 212.109 337.369 212.5 338 212.5 cv
355 212.5 li
355.704 212.5 356.291 212.013 356.452 211.358 cv
@
345.5 209.5 mo
350 205 li
356.457 211.358 li
359.428 202.46 li
359.423 202.454 li
359.469 202.31 359.5 202.159 359.5 202 cv
359.5 201.171 358.828 200.5 358 200.5 cv
341 200.5 li
340.285 200.5 339.688 201.001 339.539 201.671 cv
339.537 201.673 li
336.607 211.557 li
@
346.5 204 mo
346.5 204.829 345.828 205.5 345 205.5 cv
344.172 205.5 343.5 204.829 343.5 204 cv
343.5 203.171 344.172 202.5 345 202.5 cv
345.828 202.5 346.5 203.171 346.5 204 cv
cp
@
338.5 212.5 mo
338.625 212.438 343.5 207.5 343.5 207.5 cv
346 210 li
@
65.5 248.5 mo
65.5 247 li
65.5 246.172 64.8286 245.5 64 245.5 cv
50.5908 245.5 li
49.436 245.5 48.5 247.857 48.5 252 cv
48.5 256.143 49.436 258.5 50.5908 258.5 cv
64 258.5 li
64.8286 258.5 65.5 257.828 65.5 257 cv
65.5 255.5 li
71.5 258.5 li
71.5 245.5 li
65.5 248.5 li
cp
@
101.5 241.5 mo
108 246.5 li
114.5 241.5 li
@
117 246.5 mo
99 246.5 li
98.1714 246.5 97.5 247.172 97.5 248 cv
97.5 260 li
97.5 260.828 98.1714 261.5 99 261.5 cv
99 261.5 li
99 262.5 li
117 262.5 li
117 261.5 li
117 261.5 li
117.829 261.5 118.5 260.828 118.5 260 cv
118.5 248 li
118.5 247.172 117.829 246.5 117 246.5 cv
cp
@
116.671 254.5 mo
116.671 256.995 116.433 258.518 116.253 259.31 cv
116.158 259.731 115.759 260.052 115.239 260.116 cv
114.055 260.265 111.612 260.5 108.085 260.5 cv
104.559 260.5 102.117 260.265 100.932 260.116 cv
100.413 260.052 100.014 259.731 99.918 259.31 cv
99.7388 258.518 99.5 256.995 99.5 254.5 cv
99.5 252.005 99.7388 250.482 99.918 249.69 cv
100.014 249.269 100.413 248.948 100.932 248.884 cv
102.117 248.735 104.559 248.5 108.085 248.5 cv
111.612 248.5 114.055 248.735 115.239 248.884 cv
115.759 248.948 116.158 249.269 116.253 249.69 cv
116.433 250.482 116.671 252.005 116.671 254.5 cv
cp
@
23.5 252 mo
23.5 258.352 18.3511 263.5 12 263.5 cv
5.64893 263.5 .500001 258.352 .500001 252 cv
.500001 245.648 5.64893 240.5 12 240.5 cv
18.3511 240.5 23.5 245.648 23.5 252 cv
cp
@
14.5 246 mo
14.5 247.381 13.3809 248.5 12 248.5 cv
10.6191 248.5 9.5 247.381 9.5 246 cv
9.5 244.619 10.6191 243.5 12 243.5 cv
13.3809 243.5 14.5 244.619 14.5 246 cv
cp
@
7.06641 247.769 mo
8.3794 248.195 9.09815 249.605 8.67139 250.918 cv
8.24463 252.231 6.83447 252.95 5.521 252.523 cv
4.20801 252.097 3.48926 250.687 3.91602 249.373 cv
4.34277 248.061 5.75293 247.342 7.06641 247.769 cv
cp
@
6.45069 255.385 mo
7.26221 254.268 8.82568 254.02 9.94287 254.832 cv
11.0596 255.644 11.3076 257.207 10.4956 258.323 cv
9.68408 259.44 8.12061 259.688 7.00391 258.877 cv
5.88672 258.065 5.63916 256.502 6.45069 255.385 cv
cp
@
13.5044 258.323 mo
12.6924 257.207 12.9404 255.644 14.0571 254.832 cv
15.1743 254.02 16.7378 254.268 17.5493 255.385 cv
18.3608 256.502 18.1133 258.065 16.9961 258.877 cv
15.8794 259.688 14.3159 259.44 13.5044 258.323 cv
cp
@
18.479 252.523 mo
17.1655 252.95 15.7554 252.231 15.3286 250.918 cv
14.9019 249.605 15.6206 248.195 16.9336 247.769 cv
18.2471 247.342 19.6572 248.061 20.084 249.373 cv
20.5107 250.687 19.792 252.097 18.479 252.523 cv
cp
@
12.5 252 mo
12.5 251.724 12.2764 251.5 12 251.5 cv
11.7236 251.5 11.5 251.724 11.5 252 cv
11.5 252.276 11.7236 252.5 12 252.5 cv
12.2764 252.5 12.5 252.276 12.5 252 cv
cp
@
14.2876 247.003 mo
13.5903 246.683 12.8174 246.5 12 246.5 cv
11.1826 246.5 10.4097 246.683 9.7124 247.003 cv
@
7.21094 254.699 mo
7.98389 256.067 9.32324 257.072 10.9126 257.392 cv
@
7.95557 248.282 mo
7.05469 249.262 6.5 250.564 6.5 252 cv
6.5 252.214 6.51514 252.424 6.53906 252.632 cv
@
17.4609 252.632 mo
17.4849 252.424 17.5 252.214 17.5 252 cv
17.5 250.564 16.9453 249.262 16.0444 248.282 cv
@
13.0874 257.392 mo
14.6772 257.072 16.0161 256.067 16.7891 254.699 cv
@
16.6392 262.58 mo
18.7349 263.205 21.0596 263.499 23.4985 263.499 cv
@
7.01514 254.823 mo
7.57422 256.324 8.56836 257.707 9.90186 258.906 cv
@
248.5 493.5 mo
248.5 492.396 249.396 491.5 250.5 491.5 cv
251.604 491.5 252.5 492.396 252.5 493.5 cv
252.5 494.604 251.604 495.5 250.5 495.5 cv
249.396 495.5 248.5 494.604 248.5 493.5 cv
cp
@
261 481.5 mo
257.5 483.5 li
257.5 484.5 li
253.725 488.275 li
252.999 487.8 252.219 487.501 251.5 487.501 cv
251.5 487.5 li
247.708 487.5 249.438 491.499 246.5 491.499 cv
246.5 491.5 li
243.463 491.5 241.5 492.963 241.5 496 cv
241.5 499.037 244.963 502.5 248 502.5 cv
251.037 502.5 252.5 500.537 252.5 497.5 cv
252.5 494.563 256.499 496.292 256.499 492.5 cv
256.499 491.781 256.2 491.001 255.725 490.275 cv
259.5 486.5 li
260.5 486.5 li
262.5 483 li
261 481.5 li
cp
@
245.5 496.5 mo
247.5 498.5 li
@
114.992 307.817 mo
117.14 305.895 118.5 303.109 118.5 300 cv
118.5 294.201 113.799 289.5 108 289.5 cv
102.201 289.5 97.5 294.201 97.5 300 cv
97.5 303.286 99.0117 306.218 101.375 308.143 cv
@
102.974 309.22 mo
104.467 310.035 106.179 310.5 108 310.5 cv
109.997 310.5 111.856 309.933 113.445 308.965 cv
@
107 289.5 mo
107 288.947 107.448 288.5 108 288.5 cv
108.552 288.5 109 288.947 109 289.5 cv
@
109 310.5 mo
109 311.053 108.552 311.5 108 311.5 cv
107.448 311.5 107 311.053 107 310.5 cv
@
99.8682 293.282 mo
99.4775 292.892 99.4775 292.259 99.8682 291.868 cv
100.259 291.478 100.892 291.478 101.283 291.868 cv
@
115.223 308.386 mo
115.542 308.451 115.884 308.379 116.132 308.132 cv
116.522 307.741 116.522 307.108 116.132 306.718 cv
@
97.5 301 mo
96.9478 301 96.5 300.553 96.5 300 cv
96.5 299.447 96.9478 299 97.5 299 cv
@
118.5 299 mo
119.052 299 119.5 299.447 119.5 300 cv
119.5 300.553 119.052 301 118.5 301 cv
@
101.283 308.132 mo
100.892 308.522 100.259 308.522 99.8682 308.132 cv
99.4775 307.741 99.4775 307.108 99.8682 306.718 cv
@
114.717 291.868 mo
115.108 291.478 115.741 291.478 116.132 291.868 cv
116.522 292.259 116.522 292.892 116.132 293.282 cv
@
115.923 310.115 mo
115.746 309.69 112.458 301.429 111.068 298.799 cv
111.439 298.534 111.605 298.054 111.423 297.615 cv
111.21 297.105 110.51 296.287 110 296.5 cv
109.49 296.713 109.364 297.875 109.577 298.385 cv
109.747 298.792 110.155 299.016 110.572 298.985 cv
111.174 301.923 113.899 310.459 114.077 310.885 cv
114.289 311.395 114.875 311.636 115.384 311.423 cv
115.894 311.211 116.135 310.625 115.923 310.115 cv
cp
@
100.577 310.115 mo
100.754 309.69 104.042 301.429 105.432 298.799 cv
105.061 298.534 104.895 298.054 105.077 297.615 cv
105.29 297.105 105.99 296.287 106.5 296.5 cv
107.01 296.712 107.136 297.875 106.923 298.385 cv
106.753 298.792 106.345 299.016 105.928 298.984 cv
105.326 301.923 102.601 310.459 102.423 310.885 cv
102.211 311.395 101.625 311.636 101.116 311.423 cv
100.606 311.21 100.365 310.625 100.577 310.115 cv
cp
@
60 311.5 mo
63.5415 311.5 69.5 298.708 69.5 295 cv
69.5 292.958 67.9165 288.5 60 288.5 cv
52.0835 288.5 50.5 292.958 50.5 295 cv
50.5 298.708 56.4585 311.5 60 311.5 cv
cp
@
58.5 301 mo
58.5 301.276 58.0522 301.5 57.5 301.5 cv
56.9478 301.5 56.5 301.276 56.5 301 cv
56.5 300.724 56.9478 300.5 57.5 300.5 cv
58.0522 300.5 58.5 300.724 58.5 301 cv
cp
@
63.5 300 mo
63.5 300.276 63.0522 300.5 62.5 300.5 cv
61.9478 300.5 61.5 300.276 61.5 300 cv
61.5 299.724 61.9478 299.5 62.5 299.5 cv
63.0522 299.5 63.5 299.724 63.5 300 cv
cp
@
63.5 300 mo
63.5 294.5 li
58.5 295.5 li
58.5 301 li
@
149.03 294.736 mo
149.864 295.801 151.137 296.5 152 296.5 cv
153.381 296.5 154.5 294.709 154.5 292.5 cv
154.5 290.291 153.381 288.5 152 288.5 cv
148.031 288.5 146.5 293.656 146.5 297.5 cv
146.5 306.5 li
146.5 307.053 146.948 307.5 147.5 307.5 cv
148.5 307.5 li
149.052 307.5 149.5 307.053 149.5 306.5 cv
149.5 297.5 li
149.5 296.719 149.513 296.473 149.917 295.706 cv
@
162.97 294.736 mo
162.136 295.801 160.863 296.5 160 296.5 cv
158.619 296.5 157.5 294.709 157.5 292.5 cv
157.5 290.291 158.619 288.5 160 288.5 cv
163.969 288.5 165.5 293.656 165.5 297.5 cv
165.5 306.5 li
165.5 307.053 165.052 307.5 164.5 307.5 cv
163.5 307.5 li
162.948 307.5 162.5 307.053 162.5 306.5 cv
162.5 297.5 li
162.5 296.719 162.487 296.473 162.083 295.706 cv
@
148 309.5 mo
148 311.5 li
@
148.5 307.5 mo
147.5 307.5 li
147.5 309.5 li
148.5 309.5 li
148.5 307.5 li
cp
@
164 309.5 mo
164 311.5 li
@
164.5 307.5 mo
163.5 307.5 li
163.5 309.5 li
164.5 309.5 li
164.5 307.5 li
cp
@
153 692.5 mo
146 692.5 li
145.171 692.5 144.5 691.828 144.5 691 cv
144.5 677 li
144.5 676.172 145.171 675.5 146 675.5 cv
153 675.5 li
153.829 675.5 154.5 676.172 154.5 677 cv
154.5 691 li
154.5 691.828 153.829 692.5 153 692.5 cv
cp
@
152.5 686.5 mo
152.5 688.157 151.157 689.5 149.5 689.5 cv
147.843 689.5 146.5 688.157 146.5 686.5 cv
146.5 684.843 147.843 683.5 149.5 683.5 cv
151.157 683.5 152.5 684.843 152.5 686.5 cv
cp
@
151.5 679.5 mo
151.5 680.604 150.604 681.5 149.5 681.5 cv
148.396 681.5 147.5 680.604 147.5 679.5 cv
147.5 678.396 148.396 677.5 149.5 677.5 cv
150.604 677.5 151.5 678.396 151.5 679.5 cv
cp
@
166 692.5 mo
159 692.5 li
158.171 692.5 157.5 691.828 157.5 691 cv
157.5 677 li
157.5 676.172 158.171 675.5 159 675.5 cv
166 675.5 li
166.829 675.5 167.5 676.172 167.5 677 cv
167.5 691 li
167.5 691.828 166.829 692.5 166 692.5 cv
cp
@
165.5 686.5 mo
165.5 688.157 164.157 689.5 162.5 689.5 cv
160.843 689.5 159.5 688.157 159.5 686.5 cv
159.5 684.843 160.843 683.5 162.5 683.5 cv
164.157 683.5 165.5 684.843 165.5 686.5 cv
cp
@
164.5 679.5 mo
164.5 680.604 163.604 681.5 162.5 681.5 cv
161.396 681.5 160.5 680.604 160.5 679.5 cv
160.5 678.396 161.396 677.5 162.5 677.5 cv
163.604 677.5 164.5 678.396 164.5 679.5 cv
cp
@
150 686.5 mo
150 686.776 149.776 687 149.5 687 cv
149.224 687 149 686.776 149 686.5 cv
149 686.224 149.224 686 149.5 686 cv
149.776 686 150 686.224 150 686.5 cv
cp
@
163 686.5 mo
163 686.776 162.776 687 162.5 687 cv
162.224 687 162 686.776 162 686.5 cv
162 686.224 162.224 686 162.5 686 cv
162.776 686 163 686.224 163 686.5 cv
cp
@
248.5 304 mo
248.5 304.828 247.828 305.5 247 305.5 cv
245 305.5 li
243.067 305.5 241.5 306.619 241.5 308 cv
241.5 309.381 243.067 310.5 245 310.5 cv
246.933 310.5 248.5 309.381 248.5 308 cv
248.5 291.5 li
262.5 289.5 li
262.5 306 li
262.5 307.381 260.933 308.5 259 308.5 cv
257.067 308.5 255.5 307.381 255.5 306 cv
255.5 304.619 257.067 303.5 259 303.5 cv
261 303.5 li
261.828 303.5 262.5 302.828 262.5 302 cv
@
248.5 295.5 mo
262.5 293.5 li
@
290.319 299.5 mo
309.681 299.5 li
310.686 299.5 311.5 300.314 311.5 301.319 cv
311.5 301.319 li
311.5 301.439 311.488 301.56 311.465 301.677 cv
309.741 310.294 li
309.601 310.995 308.985 311.5 308.271 311.5 cv
291.729 311.5 li
291.015 311.5 290.399 310.995 290.259 310.294 cv
288.535 301.677 li
288.512 301.56 288.5 301.439 288.5 301.319 cv
288.5 301.319 li
288.5 300.314 289.314 299.5 290.319 299.5 cv
cp
@
295.952 297.786 mo
295.952 298.067 296.19 298.795 296.673 299.5 cv
302.851 299.5 li
303.333 298.795 303.571 298.067 303.571 297.786 cv
304.211 297.786 304.523 295.583 304.523 295.253 cv
304.523 294.924 304.357 294.2 303.807 294.2 cv
304.11 293.932 304.523 293.213 304.523 292.299 cv
305 291.877 li
305 290.329 303.254 288.5 300.238 288.5 cv
298.095 288.5 297.381 289.344 297.381 289.344 cv
296.785 289.344 295.477 290.241 295.477 291.455 cv
295.477 292.369 295.413 293.932 295.717 294.2 cv
295.166 294.2 295 294.924 295 295.253 cv
295 295.583 295.313 297.786 295.952 297.786 cv
cp
@
290.319 299.5 mo
309.681 299.5 li
310.686 299.5 311.5 300.314 311.5 301.319 cv
311.5 301.319 li
311.5 301.439 311.488 301.56 311.465 301.677 cv
309.741 310.294 li
309.601 310.995 308.985 311.5 308.271 311.5 cv
291.729 311.5 li
291.015 311.5 290.399 310.995 290.259 310.294 cv
288.535 301.677 li
288.512 301.56 288.5 301.439 288.5 301.319 cv
288.5 301.319 li
288.5 300.314 289.314 299.5 290.319 299.5 cv
cp
@
301.563 306.441 mo
301.563 306.092 301.882 305.799 302.318 305.697 cv
302.014 305.352 301.567 305.167 301.293 305.167 cv
300.844 305.167 300.446 305.362 300.073 305.362 cv
299.701 305.362 299.303 305.167 298.854 305.167 cv
298.406 305.167 297.5 305.657 297.5 306.539 cv
297.5 307.422 298.389 308.5 298.99 308.5 cv
299.591 308.5 299.769 308.304 300.073 308.304 cv
300.378 308.304 300.556 308.5 301.157 308.5 cv
301.608 308.5 302.223 307.892 302.5 307.215 cv
301.972 307.162 301.563 306.838 301.563 306.441 cv
cp
@
301.389 303.5 mo
300.775 303.5 300.277 303.873 300.277 304.333 cv
300.892 304.333 301.389 303.96 301.389 303.5 cv
cp
@
399.999 203.878 mo
399.999 199.889 401.959 196.065 404.499 193.378 cv
402.959 192.612 400.836 192.378 398.999 192.378 cv
392.647 192.378 387.499 197.526 387.499 203.878 cv
387.499 210.229 392.647 215.378 398.999 215.378 cv
400.836 215.378 402.959 215.144 404.499 214.378 cv
401.959 211.691 399.999 207.867 399.999 203.878 cv
cp
@
393.499 202.378 mo
393.499 203.482 392.827 204.378 391.999 204.378 cv
391.171 204.378 390.499 203.482 390.499 202.378 cv
390.499 201.273 391.171 200.378 391.999 200.378 cv
392.827 200.378 393.499 201.273 393.499 202.378 cv
cp
@
393.403 207.878 mo
393.639 208.706 393.425 209.378 392.925 209.378 cv
392.426 209.378 391.83 208.706 391.595 207.878 cv
391.359 207.049 391.573 206.378 392.072 206.378 cv
392.572 206.378 393.168 207.049 393.403 207.878 cv
cp
@
436 299.5 mo
434.067 299.5 432.5 301.067 432.5 303 cv
432.5 304.933 434.067 306.5 436 306.5 cv
441 306.5 li
@
446.489 298.265 mo
447.207 297.782 448.07 297.5 449 297.5 cv
451.485 297.5 453.5 299.515 453.5 302 cv
453.5 304.485 451.485 306.5 449 306.5 cv
445.5 306.5 li
@
435.018 299.657 mo
435.196 296.228 438.026 293.5 441.5 293.5 cv
444.291 293.5 446.664 295.263 447.585 297.732 cv
@
443.776 293.928 mo
444.438 291.941 446.291 290.5 448.5 290.5 cv
451.262 290.5 453.5 292.738 453.5 295.5 cv
453.5 296.789 452.999 297.951 452.198 298.838 cv
@
455.5 295.5 mo
453.5 295.5 li
@
444.965 291.965 mo
443.55 290.55 li
@
448.5 290.5 mo
448.5 288.5 li
@
452.035 291.965 mo
453.45 290.55 li
@
432.938 309.695 mo
432.938 309.695 li
434.5 308.5 li
434.5 310.5 li
434.5 311.052 434.053 311.5 433.5 311.5 cv
432.947 311.5 432.5 311.052 432.5 310.5 cv
432.5 310.161 432.68 309.876 432.938 309.695 cv
cp
@
436.938 307.695 mo
436.938 307.695 li
438.5 306.5 li
438.5 308.5 li
438.5 309.052 438.053 309.5 437.5 309.5 cv
436.947 309.5 436.5 309.052 436.5 308.5 cv
436.5 308.161 436.68 307.876 436.938 307.695 cv
cp
@
445.938 309.695 mo
445.938 309.695 li
447.5 308.5 li
447.5 310.5 li
447.5 311.053 447.053 311.5 446.5 311.5 cv
445.947 311.5 445.5 311.052 445.5 310.5 cv
445.5 310.161 445.68 309.876 445.938 309.695 cv
cp
@
444 300.5 mo
447 301.5 li
445 308 li
443 307 li
440 311.5 li
441.5 304 li
443.5 305 li
444 300.5 li
cp
@
61.9878 642.5 mo
67.4878 642.5 66 641.5 71.5 641.5 cv
@
48.5 641.5 mo
54 641.5 52.5088 642.5 58.0088 642.5 cv
@
60 645.5 mo
60 638.5 li
@
58 640.5 mo
60 638.5 li
62 640.5 li
@
67.5938 641.803 mo
68.1689 640.657 68.5 639.369 68.5 638 cv
68.5 633.306 64.6943 629.5 60 629.5 cv
55.3057 629.5 51.5 633.306 51.5 638 cv
51.5 639.369 51.8311 640.658 52.4063 641.803 cv
@
60 626.5 mo
60 629.5 li
@
51.8682 629.868 mo
53.9897 631.989 li
@
48.5 638 mo
51.5 638 li
@
71.5 638 mo
68.5 638 li
@
68.1318 629.868 mo
66.0103 631.989 li
@
66.5 343 mo
66.5 346.59 63.5898 349.5 60 349.5 cv
56.4102 349.5 53.5 346.59 53.5 343 cv
53.5 339.41 56.4102 336.5 60 336.5 cv
63.5898 336.5 66.5 339.41 66.5 343 cv
cp
@
65.1172 347.057 mo
65.1172 347.057 67.5078 355.5 67.5078 358.5 cv
66.1743 357.167 64.0078 356.5 64.0078 356.5 cv
61.5078 359.5 li
61.5078 359.5 61.3828 350.875 60.0078 349.5 cv
@
54.8984 347.057 mo
54.8984 347.057 52.5078 355.5 52.5078 358.5 cv
53.8408 357.167 56.0078 356.5 56.0078 356.5 cv
58.5078 359.5 li
58.5078 359.5 58.6328 350.875 60.0078 349.5 cv
@
58.2964 343.687 mo
55.7617 341.514 li
59.0117 341.152 li
60.0083 338.496 li
61.0044 341.152 li
64.2544 341.514 li
61.7197 343.687 li
62.4082 346.783 li
60.0083 345.068 li
57.6079 346.783 li
58.2964 343.687 li
cp
@
17 337.5 mo
17.8286 337.5 18.5 338.172 18.5 339 cv
18.5 339.5 li
18.5 342.5 17.5 352.5 12 352.5 cv
6.5 352.5 5.5 342.5 5.5 339.5 cv
5.5 339 li
5.5 338.172 6.17139 337.5 7 337.5 cv
17 337.5 li
cp
@
5.5 339.5 mo
3.06641 339.5 li
2.20117 339.5 1.5 340.201 1.5 341.066 cv
1.5 341.35 1.57715 341.629 1.72315 341.872 cv
2.30225 342.837 li
3.37354 344.622 4.89551 346.064 6.67871 347.097 cv
@
17.3213 347.097 mo
19.1045 346.064 20.6265 344.622 21.6978 342.837 cv
22.2769 341.872 li
22.4229 341.629 22.5 341.35 22.5 341.066 cv
22.5 340.201 21.7988 339.5 20.9336 339.5 cv
18.5 339.5 li
@
10.5 352.221 mo
10.5 355 li
10.5 355.828 9.82861 356.5 9 356.5 cv
9 356.5 li
8.17139 356.5 7.5 357.172 7.5 358 cv
7.5 358.5 li
16.5 358.5 li
16.5 358 li
16.5 357.172 15.8286 356.5 15 356.5 cv
15 356.5 li
14.1714 356.5 13.5 355.828 13.5 355 cv
13.5 352.221 li
@
201 349 mo
201 349.276 200.776 349.5 200.5 349.5 cv
200.224 349.5 200 349.276 200 349 cv
200 348.724 200.224 348.5 200.5 348.5 cv
200.776 348.5 201 348.724 201 349 cv
cp
@
208 349 mo
208 349.276 207.776 349.5 207.5 349.5 cv
207.224 349.5 207 349.276 207 349 cv
207 348.724 207.224 348.5 207.5 348.5 cv
207.776 348.5 208 348.724 208 349 cv
cp
@
211.5 348.5 mo
211.5 345.208 206.5 342.5 206.5 342.5 cv
206.5 342.5 196.5 345.208 196.5 348.5 cv
195.738 348.831 195.5 349.479 195.5 350.5 cv
195.5 351.375 196.509 353.5 197.625 353.5 cv
198.061 354.352 200.019 358.5 204 358.5 cv
207.981 358.5 209.939 354.352 210.375 353.5 cv
211.491 353.5 212.5 351.375 212.5 350.5 cv
212.5 349.479 212.262 348.831 211.5 348.5 cv
cp
@
196.104 352.253 mo
194.692 354.106 193.5 356.403 193.5 357.5 cv
194.104 356.896 195.5 356.5 195.5 356.5 cv
195.5 356.5 195.417 359.5 196.5 359.5 cv
196.5 359.5 196.979 356.348 197.667 353.582 cv
197.653 353.556 197.636 353.522 197.625 353.5 cv
@
210.375 353.5 mo
210.364 353.522 210.347 353.556 210.333 353.582 cv
211.021 356.348 211.5 359.5 211.5 359.5 cv
212.583 359.5 212.5 356.5 212.5 356.5 cv
212.5 356.5 213.896 356.896 214.5 357.5 cv
214.5 356.403 213.308 354.106 211.896 352.253 cv
@
212.5 350.5 mo
212.5 350.5 212.5 347.354 212.5 346 cv
212.5 341.875 209.563 336.5 204 336.5 cv
203.5 337 li
197.938 337 195.5 341.875 195.5 346 cv
195.5 347.688 195.5 350.5 195.5 350.5 cv
@
200.5 348.5 mo
199.5 348.5 li
@
207.5 348.5 mo
208.5 348.5 li
@
105 589 mo
105 589.276 104.776 589.5 104.5 589.5 cv
104.224 589.5 104 589.276 104 589 cv
104 588.724 104.224 588.5 104.5 588.5 cv
104.776 588.5 105 588.724 105 589 cv
cp
@
112 589 mo
112 589.276 111.776 589.5 111.5 589.5 cv
111.224 589.5 111 589.276 111 589 cv
111 588.724 111.224 588.5 111.5 588.5 cv
111.776 588.5 112 588.724 112 589 cv
cp
@
100.5 587.5 mo
100.479 587.829 100.5 588.146 100.5 588.5 cv
99.7827 588.831 99.5 589.479 99.5 590.5 cv
99.5 591.375 100.45 593.5 101.5 593.5 cv
101.91 594.352 104.253 598.5 108 598.5 cv
111.747 598.5 114.09 594.352 114.5 593.5 cv
115.55 593.5 116.5 591.375 116.5 590.5 cv
116.5 589.479 116.217 588.831 115.5 588.5 cv
115.5 588.146 115.521 587.829 115.5 587.5 cv
@
109.5 585 mo
109.5 585.828 108.829 586.5 108 586.5 cv
107.171 586.5 106.5 585.828 106.5 585 cv
106.5 584.172 107.171 583.5 108 583.5 cv
108.829 583.5 109.5 584.172 109.5 585 cv
cp
@
111.328 586.029 mo
113.537 586.622 115.5 587.5 115.5 587.5 cv
115.097 581.458 li
115.03 580.454 114.47 579.551 113.595 579.053 cv
112.354 578.345 110.374 577.5 108 577.5 cv
105.626 577.5 103.646 578.345 102.405 579.053 cv
101.53 579.551 100.97 580.454 100.903 581.458 cv
100.5 587.5 li
100.5 587.5 102.463 586.622 104.672 586.029 cv
@
111.5 585 mo
111.5 586.933 109.933 588.5 108 588.5 cv
106.067 588.5 104.5 586.933 104.5 585 cv
104.5 583.067 106.067 581.5 108 581.5 cv
109.933 581.5 111.5 583.067 111.5 585 cv
cp
@
114.5 593.5 mo
114.5 593.5 111 591.5 108 591.5 cv
105 591.5 101.5 593.5 101.5 593.5 cv
@
257 242 mo
257 242.828 254.761 243.5 252 243.5 cv
249.238 243.5 246.999 242.828 246.999 242 cv
246.999 241.172 249.238 240.5 252 240.5 cv
254.761 240.5 257 241.172 257 242 cv
cp
@
256.999 242 mo
257.999 246.5 li
257.999 247.604 255.313 248.5 251.999 248.5 cv
248.686 248.5 245.999 247.604 245.999 246.5 cv
246.999 242 li
@
249.5 245.5 mo
249.5 245.5 251.999 245.729 251.999 246.5 cv
@
254.5 245.5 mo
254.5 245.5 251.999 245.729 251.999 246.5 cv
@
255.236 262.451 mo
261.611 262.252 263.5 261.5 263.5 261.5 cv
261.813 258.188 260.5 256.125 260.5 252 cv
260.5 249.631 259.525 246.854 257.646 244.915 cv
@
246.348 244.931 mo
244.403 246.729 243.5 249.499 243.5 252 cv
243.5 256.125 242.188 258.188 240.5 261.5 cv
240.5 261.5 242.389 262.252 248.764 262.451 cv
@
253.281 248.453 mo
251.082 250.968 246.491 253.5 244.5 253.5 cv
243.738 253.831 243.5 254.479 243.5 255.5 cv
243.5 256.375 244.509 258.5 245.625 258.5 cv
246.061 259.352 248.019 263.5 252 263.5 cv
255.981 263.5 257.939 259.352 258.375 258.5 cv
259.491 258.5 260.5 256.375 260.5 255.5 cv
260.5 254.479 260.262 253.831 259.5 253.5 cv
257.742 253.5 255.744 250.829 254.906 248.249 cv
@
249 254 mo
249 254.276 248.776 254.5 248.5 254.5 cv
248.224 254.5 248 254.276 248 254 cv
248 253.724 248.224 253.5 248.5 253.5 cv
248.776 253.5 249 253.724 249 254 cv
cp
@
256 254 mo
256 254.276 255.776 254.5 255.5 254.5 cv
255.224 254.5 255 254.276 255 254 cv
255 253.724 255.224 253.5 255.5 253.5 cv
255.776 253.5 256 253.724 256 254 cv
cp
@
255.5 253.5 mo
256.5 253.5 li
@
248.5 253.5 mo
247.5 253.5 li
@
307.5 204.5 mo
307 200.5 303.5 198.5 301.5 198.5 cv
301.5 198.5 299.5 200 297 200 cv
294.001 200 292.5 203 292.5 204.5 cv
292.28 204.602 292.113 204.744 291.971 204.907 cv
291.866 204.567 291.5 203.287 291.5 202 cv
291.5 200 292 194 299.5 194 cv
300 193.5 li
307.5 193.5 308.5 200 308.5 202 cv
308.5 203.287 308.134 204.567 308.029 204.907 cv
307.887 204.744 307.72 204.602 307.5 204.5 cv
cp
@
292.5 204.5 mo
291.783 204.831 291.5 205.479 291.5 206.5 cv
291.5 207.375 292.449 209.5 293.5 209.5 cv
293.91 210.351 295 214.5 300 214.5 cv
305 214.5 306.09 210.351 306.5 209.5 cv
307.551 209.5 308.5 207.375 308.5 206.5 cv
308.5 205.479 308.217 204.831 307.5 204.5 cv
@
297 205 mo
297 205.276 296.776 205.5 296.5 205.5 cv
296.224 205.5 296 205.276 296 205 cv
296 204.724 296.224 204.5 296.5 204.5 cv
296.776 204.5 297 204.724 297 205 cv
cp
@
304 205 mo
304 205.276 303.776 205.5 303.5 205.5 cv
303.224 205.5 303 205.276 303 205 cv
303 204.724 303.224 204.5 303.5 204.5 cv
303.776 204.5 304 204.724 304 205 cv
cp
@
301 210.5 mo
299 210.5 li
@
306.5 209.5 mo
307.5 208.5 307.5 204.5 307.5 204.5 cv
306.896 206.309 305.202 208.477 303.403 209.917 cv
303.152 209.099 302.4 208.5 301.5 208.5 cv
300 208.5 li
298.5 208.5 li
297.6 208.5 296.848 209.099 296.597 209.917 cv
294.798 208.477 293.104 206.309 292.5 204.5 cv
292.5 204.5 292.5 208.5 293.5 209.5 cv
@
300 337.5 mo
296.5 337.5 293.5 338.5 293 339 cv
291.5 343.5 li
291.5 343.5 294.5 342.5 300 342.5 cv
@
300 342.5 mo
300 350.5 li
300 351.053 299.553 351.5 299 351.5 cv
298.408 351.5 li
297.271 351.5 296.23 350.861 295.726 349.841 cv
294.701 347.771 292.867 344.5 291.5 344.5 cv
@
294.464 347.514 mo
293.706 346.347 293 345.5 291 345.5 cv
289 345.5 288.5 348 288.5 350 cv
288.5 354 298 353.5 300 353.5 cv
@
288.5 351.5 mo
311.5 351.5 li
@
292.5 349 mo
292.5 349.553 292.053 350 291.5 350 cv
290.947 350 290.5 349.553 290.5 349 cv
290.5 348.447 290.947 348 291.5 348 cv
292.053 348 292.5 348.447 292.5 349 cv
cp
@
289.5 343 mo
289.5 343.276 289.276 343.5 289 343.5 cv
288.724 343.5 288.5 343.276 288.5 343 cv
288.5 342.724 288.724 342.5 289 342.5 cv
289.276 342.5 289.5 342.724 289.5 343 cv
cp
@
289.5 343 mo
291.5 343.5 li
291.5 345.5 li
@
289.5 351.884 mo
289.5 355.5 li
289.5 356.053 289.947 356.5 290.5 356.5 cv
291.053 356.5 291.5 356.053 291.5 355.5 cv
291.5 352.828 li
@
300 337.5 mo
303.5 337.5 306.5 338.5 307 339 cv
308.5 343.5 li
308.5 343.5 305.5 342.5 300 342.5 cv
@
300 350.5 mo
300 351.053 300.447 351.5 301 351.5 cv
301.592 351.5 li
302.729 351.5 303.77 350.861 304.274 349.841 cv
305.299 347.771 307.133 344.5 308.5 344.5 cv
@
305.536 347.514 mo
306.294 346.347 307 345.5 309 345.5 cv
311 345.5 311.5 348 311.5 350 cv
311.5 354 302 353.5 300 353.5 cv
@
307.5 349 mo
307.5 349.553 307.947 350 308.5 350 cv
309.053 350 309.5 349.553 309.5 349 cv
309.5 348.447 309.053 348 308.5 348 cv
307.947 348 307.5 348.447 307.5 349 cv
cp
@
310.5 343 mo
310.5 343.276 310.724 343.5 311 343.5 cv
311.276 343.5 311.5 343.276 311.5 343 cv
311.5 342.724 311.276 342.5 311 342.5 cv
310.724 342.5 310.5 342.724 310.5 343 cv
cp
@
310.5 343 mo
308.5 343.5 li
308.5 345.5 li
@
308.5 352.828 mo
308.5 355.5 li
308.5 356.053 308.947 356.5 309.5 356.5 cv
310.053 356.5 310.5 356.053 310.5 355.5 cv
310.5 351.884 li
@
344.5 350.5 mo
344.5 352.709 342.709 354.5 340.5 354.5 cv
338.291 354.5 336.5 352.709 336.5 350.5 cv
336.5 348.291 338.291 346.5 340.5 346.5 cv
342.709 346.5 344.5 348.291 344.5 350.5 cv
cp
@
359.5 350.5 mo
359.5 352.709 357.709 354.5 355.5 354.5 cv
353.291 354.5 351.5 352.709 351.5 350.5 cv
351.5 348.291 353.291 346.5 355.5 346.5 cv
357.709 346.5 359.5 348.291 359.5 350.5 cv
cp
@
355.5 350.5 mo
352 343.5 li
345.395 343.5 li
340.5 350.5 li
347.5 351.5 li
352 343.5 li
@
347.5 351.5 mo
344.868 341.5 li
@
348.5 351.5 mo
348.5 352.053 348.053 352.5 347.5 352.5 cv
346.947 352.5 346.5 352.053 346.5 351.5 cv
346.5 350.947 346.947 350.5 347.5 350.5 cv
348.053 350.5 348.5 350.947 348.5 351.5 cv
cp
@
352 343.5 mo
351 341.5 li
354.5 341.5 li
355.053 341.5 355.5 341.947 355.5 342.5 cv
355.5 342.5 li
355.5 343.053 355.053 343.5 354.5 343.5 cv
354 343.5 li
@
343 341.5 mo
346.5 341.5 li
@
445.708 347.51 mo
449.5 351.5 li
451.5 350.5 li
449.955 344.446 li
@
447.582 339.996 mo
446.93 340.391 446.48 340.729 445.5 341.5 cv
436 341.5 li
434.296 343.25 li
440.754 345.417 li
439.576 346.442 438.426 347.468 437.41 348.384 cv
437.437 348.359 li
433.577 346.865 li
432.5 348 li
434.727 350.832 li
434.729 350.83 li
434.697 350.859 434.657 350.896 434.628 350.923 cv
434.249 351.272 434.237 351.868 434.601 352.233 cv
434.854 352.488 435.229 352.568 435.563 352.438 cv
437.27 351.774 442.571 349.625 446.146 347.227 cv
450.454 344.334 452.609 342.165 453.327 341.442 cv
454.045 340.72 454.764 339.273 454.404 338.912 cv
454.045 338.55 451.173 337.827 447.582 339.996 cv
cp
@
440.5 357.5 mo
455.5 357.5 li
@
.971825 lw
60 384.5 mo
55.3057 384.5 51.5 393.529 51.5 398.5 cv
51.5 402.135 53.5391 405.792 56.4683 407.5 cv
63.5317 407.5 li
66.4609 405.792 68.5 402.135 68.5 398.5 cv
68.5 393.529 64.6943 384.5 60 384.5 cv
cp
@
51.5 398.5 mo
68.5 398.5 li
@
60.5 401 mo
60.5 401.276 60.2764 401.5 60 401.5 cv
59.7236 401.5 59.5 401.276 59.5 401 cv
59.5 400.724 59.7236 400.5 60 400.5 cv
60.2764 400.5 60.5 400.724 60.5 401 cv
cp
@
60 395.5 mo
60 396.5 li
@
55.5 395.5 mo
55.5 396.5 li
@
64.5 395.5 mo
64.5 396.5 li
@
1 lw
19.3467 397.585 mo
19.4438 397.071 19.5 396.542 19.5 396 cv
19.5 391.306 15.6943 387.5 11 387.5 cv
6.30567 387.5 2.5 391.306 2.5 396 cv
2.5 400.694 6.30567 404.5 11 404.5 cv
11.9692 404.5 12.8965 404.33 13.7642 404.031 cv
@
4.7334 401.729 mo
3.5 405.5 li
6.07813 402.922 li
@
4.5 384.5 mo
2.29102 384.5 .500001 386.291 .500001 388.5 cv
.500001 389.604 .947755 390.604 1.67139 391.328 cv
7.32861 385.672 li
6.60449 384.947 5.60449 384.5 4.5 384.5 cv
cp
@
17.5 384.5 mo
19.709 384.5 21.5 386.291 21.5 388.5 cv
21.5 389.604 21.0522 390.604 20.3286 391.328 cv
14.6714 385.672 li
15.3955 384.947 16.3955 384.5 17.5 384.5 cv
cp
@
11.5 396 mo
11.5 395.724 11.2764 395.5 11 395.5 cv
10.7236 395.5 10.5 395.724 10.5 396 cv
10.5 396.276 10.7236 396.5 11 396.5 cv
11.2764 396.5 11.5 396.276 11.5 396 cv
cp
@
11 390.5 mo
11 396 li
14.0005 399 li
@
13.5 402.5 mo
13.5 399.738 15.7388 397.5 18.5 397.5 cv
21.2612 397.5 23.5 399.738 23.5 402.5 cv
23.5 405.262 21.2612 407.5 18.5 407.5 cv
15.7388 407.5 13.5 405.262 13.5 402.5 cv
cp
@
14.9644 398.965 mo
22.0356 406.035 li
@
210.5 392.5 mo
210.5 389.5 li
206.5 385.5 li
199 385.5 li
198.171 385.5 197.5 386.172 197.5 387 cv
197.5 392.5 li
@
206.5 385.5 mo
206.5 388 li
206.5 388.828 207.171 389.5 208 389.5 cv
210.5 389.5 li
@
206.5 406 mo
206.5 406 206 402.563 206 400.5 cv
@
209 405.5 mo
209 405.5 208 402.375 208 400.5 cv
@
210 400.5 mo
210 402 211.5 404.5 211.5 404.5 cv
@
204 406.5 mo
204 406.5 204 402.75 204 400.5 cv
@
201.5 406 mo
201.5 406 202 402.563 202 400.5 cv
@
199 405.5 mo
199 405.5 200 402.375 200 400.5 cv
@
198 400.5 mo
198 402 196.5 404.5 196.5 404.5 cv
@
212.5 395 mo
212.5 395.276 212.276 395.5 212 395.5 cv
211.724 395.5 211.5 395.276 211.5 395 cv
211.5 394.724 211.724 394.5 212 394.5 cv
212.276 394.5 212.5 394.724 212.5 395 cv
cp
@
213 400.5 mo
213.829 400.5 214.5 399.828 214.5 399 cv
214.5 394 li
214.5 393.172 213.829 392.5 213 392.5 cv
195 392.5 li
194.171 392.5 193.5 393.172 193.5 394 cv
193.5 399 li
193.5 399.828 194.171 400.5 195 400.5 cv
213 400.5 li
cp
@
113 394.5 mo
103 394.5 li
102.171 394.5 101.5 395.172 101.5 396 cv
101.5 406 li
101.5 406.828 102.171 407.5 103 407.5 cv
113 407.5 li
113.829 407.5 114.5 406.828 114.5 406 cv
114.5 396 li
114.5 395.172 113.829 394.5 113 394.5 cv
cp
@
112.5 394.5 mo
103.5 394.5 li
103.5 392.5 li
112.5 392.5 li
112.5 394.5 li
cp
@
110.5 392.5 mo
110.5 392.5 110 386.5 108.5 384.5 cv
107.5 384.5 li
106 386.5 105.5 392.5 105.5 392.5 cv
@
110.5 402 mo
110.5 403.381 109.381 404.5 108 404.5 cv
106.619 404.5 105.5 403.381 105.5 402 cv
105.5 400 108 397.5 108 397.5 cv
108 397.5 110.5 400 110.5 402 cv
cp
@
166.5 387.5 mo
166.5 389.157 162.247 390.5 157 390.5 cv
151.753 390.5 147.5 389.157 147.5 387.5 cv
147.5 385.843 151.753 384.5 157 384.5 cv
162.247 384.5 166.5 385.843 166.5 387.5 cv
cp
@
147.513 387.582 mo
147.504 387.582 li
149.513 405.326 li
149.647 406.533 152.943 407.5 157 407.5 cv
161.057 407.5 164.353 406.533 164.487 405.326 cv
166.496 387.582 li
166.487 387.582 li
@
153.5 399 mo
153.5 397.067 155.067 395.5 157 395.5 cv
158.208 395.5 159.273 396.112 159.902 397.043 cv
@
160.5 399 mo
160.5 400.933 158.933 402.5 157 402.5 cv
155.792 402.5 154.727 401.888 154.098 400.957 cv
@
153.5 399 mo
155.25 397.833 li
@
160.5 399 mo
158.75 400.167 li
@
308.48 585.608 mo
308.289 581.637 305.02 578.5 301 578.5 cv
297.723 578.5 294.956 580.57 293.936 583.5 cv
@
307 597.5 mo
293 597.5 li
292.172 597.5 291.5 596.828 291.5 596 cv
291.5 594 li
291.5 593.172 292.172 592.5 293 592.5 cv
307 592.5 li
307.828 592.5 308.5 593.172 308.5 594 cv
308.5 596 li
308.5 596.828 307.828 597.5 307 597.5 cv
cp
@
293.5 594.5 mo
293.5 595.5 li
@
295.5 594.5 mo
295.5 595.5 li
@
297.5 594.5 mo
297.5 595.5 li
@
306.5 595 mo
306.5 595.276 306.276 595.5 306 595.5 cv
305.724 595.5 305.5 595.276 305.5 595 cv
305.5 594.724 305.724 594.5 306 594.5 cv
306.276 594.5 306.5 594.724 306.5 595 cv
cp
@
303.5 595 mo
303.5 595.276 303.276 595.5 303 595.5 cv
302.724 595.5 302.5 595.276 302.5 595 cv
302.5 594.724 302.724 594.5 303 594.5 cv
303.276 594.5 303.5 594.724 303.5 595 cv
cp
@
296.5 584.5 mo
295.668 583.882 294.616 583.5 293.5 583.5 cv
290.738 583.5 288.5 585.738 288.5 588.5 cv
288.5 590.652 289.867 592.472 291.775 593.176 cv
@
308.358 593.402 mo
310.154 593.01 311.5 591.414 311.5 589.5 cv
311.5 587.572 310.136 585.964 308.32 585.586 cv
308.255 585.576 li
308.01 585.529 307.759 585.5 307.5 585.5 cv
@
291.844 593.044 mo
295.9 588.214 li
296.28 587.762 296.841 587.5 297.432 587.5 cv
302.568 587.5 li
303.159 587.5 303.72 587.762 304.1 588.214 cv
308.156 593.044 li
@
261 401.5 mo
247 401.5 li
246.172 401.5 245.5 400.828 245.5 400 cv
245.5 398 li
245.5 397.172 246.172 396.5 247 396.5 cv
261 396.5 li
261.828 396.5 262.5 397.172 262.5 398 cv
262.5 400 li
262.5 400.828 261.828 401.5 261 401.5 cv
cp
@
247.5 398.5 mo
247.5 399.5 li
@
249.5 398.5 mo
249.5 399.5 li
@
251.5 398.5 mo
251.5 399.5 li
@
260.5 399 mo
260.5 399.276 260.276 399.5 260 399.5 cv
259.724 399.5 259.5 399.276 259.5 399 cv
259.5 398.724 259.724 398.5 260 398.5 cv
260.276 398.5 260.5 398.724 260.5 399 cv
cp
@
257.5 399 mo
257.5 399.276 257.276 399.5 257 399.5 cv
256.724 399.5 256.5 399.276 256.5 399 cv
256.5 398.724 256.724 398.5 257 398.5 cv
257.276 398.5 257.5 398.724 257.5 399 cv
cp
@
261 406.5 mo
247 406.5 li
246.172 406.5 245.5 405.828 245.5 405 cv
245.5 403 li
245.5 402.172 246.172 401.5 247 401.5 cv
261 401.5 li
261.828 401.5 262.5 402.172 262.5 403 cv
262.5 405 li
262.5 405.828 261.828 406.5 261 406.5 cv
cp
@
247.5 403.5 mo
247.5 404.5 li
@
249.5 403.5 mo
249.5 404.5 li
@
251.5 403.5 mo
251.5 404.5 li
@
260.5 404 mo
260.5 404.276 260.276 404.5 260 404.5 cv
259.724 404.5 259.5 404.276 259.5 404 cv
259.5 403.724 259.724 403.5 260 403.5 cv
260.276 403.5 260.5 403.724 260.5 404 cv
cp
@
257.5 404 mo
257.5 404.276 257.276 404.5 257 404.5 cv
256.724 404.5 256.5 404.276 256.5 404 cv
256.5 403.724 256.724 403.5 257 403.5 cv
257.276 403.5 257.5 403.724 257.5 404 cv
cp
@
246.782 396.521 mo
246.61 396.045 246.5 395.537 246.5 395 cv
246.5 392.515 248.515 390.5 251 390.5 cv
253.485 390.5 255.5 392.515 255.5 395 cv
255.5 395.529 255.392 396.028 255.225 396.5 cv
@
260.5 396.5 mo
260.5 393.1 li
258.148 392.512 li
258.052 392.233 257.944 391.963 257.817 391.699 cv
259.061 389.626 li
256.374 386.938 li
254.301 388.183 li
254.037 388.056 253.767 387.948 253.488 387.852 cv
252.9 385.5 li
249.1 385.5 li
248.512 387.852 li
248.233 387.948 247.963 388.056 247.699 388.183 cv
245.626 386.938 li
242.939 389.626 li
244.183 391.699 li
244.056 391.963 243.948 392.233 243.852 392.512 cv
241.5 393.1 li
241.5 396.9 li
243.852 397.488 li
243.948 397.767 244.056 398.037 244.183 398.301 cv
242.939 400.374 li
245.506 402.941 li
@
261 401.5 mo
247 401.5 li
246.172 401.5 245.5 400.828 245.5 400 cv
245.5 398 li
245.5 397.172 246.172 396.5 247 396.5 cv
261 396.5 li
261.828 396.5 262.5 397.172 262.5 398 cv
262.5 400 li
262.5 400.828 261.828 401.5 261 401.5 cv
cp
@
261 406.5 mo
247 406.5 li
246.172 406.5 245.5 405.828 245.5 405 cv
245.5 403 li
245.5 402.172 246.172 401.5 247 401.5 cv
261 401.5 li
261.828 401.5 262.5 402.172 262.5 403 cv
262.5 405 li
262.5 405.828 261.828 406.5 261 406.5 cv
cp
@
396 337.5 mo
385.5 346.5 li
387.5 346.5 li
388.386 357.125 li
388.45 357.902 389.1 358.5 389.88 358.5 cv
402.12 358.5 li
402.9 358.5 403.55 357.902 403.614 357.125 cv
404.5 346.5 li
406.5 346.5 li
396 337.5 li
cp
@
392.5 358.5 mo
391.947 352.975 li
391.708 350.579 393.59 348.5 395.997 348.5 cv
396.003 348.5 li
398.41 348.5 400.292 350.579 400.053 352.975 cv
399.5 358.5 li
@
396 342.752 mo
396.152 342.752 396.306 342.797 396.434 342.889 cv
396.633 343.033 396.736 343.247 396.746 343.465 cv
396.754 343.634 396.857 343.788 397.01 343.861 cv
397.344 344.021 397.56 344.383 397.485 344.794 cv
397.425 345.126 397.161 345.4 396.832 345.477 cv
396.594 345.532 396.377 345.485 396.2 345.377 cv
396.138 345.338 396.069 345.317 396 345.313 cv
395.931 345.317 395.862 345.338 395.8 345.377 cv
395.623 345.485 395.406 345.532 395.168 345.477 cv
394.839 345.4 394.575 345.126 394.515 344.794 cv
394.44 344.383 394.656 344.021 394.99 343.861 cv
395.143 343.788 395.246 343.634 395.254 343.465 cv
395.264 343.247 395.367 343.033 395.566 342.889 cv
395.694 342.797 395.848 342.752 396 342.752 cv
cp
@
0 lc
0 lj
398.37 343.011 mo
398.214 343.167 397.982 343.188 397.852 343.058 cv
397.722 342.927 397.742 342.695 397.898 342.539 cv
398.054 342.384 398.286 342.362 398.416 342.493 cv
398.546 342.623 398.525 342.854 398.37 343.011 cv
cp
@
397.228 341.645 mo
397.156 341.854 396.957 341.975 396.783 341.915 cv
396.608 341.856 396.525 341.639 396.596 341.431 cv
396.667 341.222 396.866 341.101 397.04 341.16 cv
397.214 341.219 397.298 341.437 397.228 341.645 cv
cp
@
393.635 343.018 mo
393.791 343.173 394.022 343.194 394.153 343.063 cv
394.283 342.934 394.263 342.702 394.106 342.546 cv
393.95 342.39 393.719 342.369 393.589 342.499 cv
393.458 342.63 393.479 342.861 393.635 343.018 cv
cp
@
394.777 341.651 mo
394.849 341.86 395.048 341.981 395.222 341.922 cv
395.396 341.862 395.479 341.646 395.409 341.437 cv
395.338 341.229 395.139 341.107 394.965 341.166 cv
394.79 341.226 394.707 341.442 394.777 341.651 cv
cp
@
1 lc
1 lj
303 443.5 mo
297 443.5 li
296.724 443.5 296.5 443.276 296.5 443 cv
296.5 439 li
296.5 438.724 296.724 438.5 297 438.5 cv
303 438.5 li
303.276 438.5 303.5 438.724 303.5 439 cv
303.5 443 li
303.5 443.276 303.276 443.5 303 443.5 cv
cp
@
296.5 439 mo
299.683 441.428 li
299.774 441.486 299.883 441.521 300 441.521 cv
300.117 441.521 300.226 441.486 300.317 441.428 cv
300.318 441.428 li
303.5 439 li
@
296.5 455.5 mo
296.5 446.5 li
303.5 446.5 li
303.5 455.5 li
@
300 432.5 mo
290.5 438.5 li
291.5 438.5 li
291.5 454 li
291.5 454.828 292.172 455.5 293 455.5 cv
307 455.5 li
307.828 455.5 308.5 454.828 308.5 454 cv
308.5 438.5 li
309.5 438.5 li
300 432.5 li
cp
@
407.5 390.5 mo
389.5 390.5 li
389.5 389 li
389.5 388.172 390.172 387.5 391 387.5 cv
406 387.5 li
406.828 387.5 407.5 388.172 407.5 389 cv
407.5 390.5 li
cp
@
394.5 404.5 mo
394.5 401 li
394.5 400.172 395.172 399.5 396 399.5 cv
401 399.5 li
401.828 399.5 402.5 400.172 402.5 401 cv
402.5 404.5 li
@
387.5 398.5 mo
384.5 398.5 li
384.5 393.5 li
387.5 393.5 li
387.5 398.5 li
cp
@
386 398.5 mo
386 404.5 li
@
402.5 393.5 mo
403.5 394.5 li
@
399.5 393.5 mo
403.5 397.5 li
@
406.5 390.5 mo
406.5 404.5 li
@
394.5 402.5 mo
402.5 402.5 li
@
390.5 404.5 mo
390.5 390.5 li
@
446.5 399.5 mo
439.5 399.5 li
439.5 402.5 li
439.5 403.604 438.604 404.5 437.5 404.5 cv
434 404.5 li
433.172 404.5 432.5 403.828 432.5 403 cv
432.5 403 li
432.5 402.172 433.172 401.5 434 401.5 cv
436.5 401.5 li
435.072 399.002 li
434.697 398.346 434.5 397.603 434.5 396.846 cv
434.5 396.846 li
434.5 394.445 436.445 392.5 438.846 392.5 cv
445.469 392.5 li
446.695 392.5 447.799 393.247 448.254 394.386 cv
451.295 401.986 li
451.428 402.32 451.453 402.688 451.366 403.036 cv
451.324 403.205 li
451.134 403.966 450.449 404.5 449.665 404.5 cv
449.658 404.5 li
448.959 404.5 448.33 404.074 448.07 403.425 cv
446.5 399.5 li
cp
@
439.5 399.5 mo
439.5 392.5 li
@
439.5 399.5 mo
435.5 399.5 li
@
455.5 391.5 mo
455.5 393.709 453.709 395.5 451.5 395.5 cv
449.291 395.5 447.5 393.709 447.5 391.5 cv
447.5 389.291 449.291 387.5 451.5 387.5 cv
453.709 387.5 455.5 389.291 455.5 391.5 cv
cp
@
391.5 453.5 mo
391.5 454.604 390.604 455.5 389.5 455.5 cv
388.396 455.5 387.5 454.604 387.5 453.5 cv
387.5 452.396 388.396 451.5 389.5 451.5 cv
390.604 451.5 391.5 452.396 391.5 453.5 cv
cp
@
401.5 453.5 mo
401.5 454.604 400.604 455.5 399.5 455.5 cv
398.396 455.5 397.5 454.604 397.5 453.5 cv
397.5 452.396 398.396 451.5 399.5 451.5 cv
400.604 451.5 401.5 452.396 401.5 453.5 cv
cp
@
404.5 442.5 mo
404.5 441 li
404.5 440.172 405.172 439.5 406 439.5 cv
406 439.5 li
406.828 439.5 407.5 440.172 407.5 441 cv
407.5 441.5 li
@
394.5 442.5 mo
394.5 432.5 li
388.978 432.5 384.5 436.978 384.5 442.5 cv
384.5 448.022 388.978 452.5 394.5 452.5 cv
400.022 452.5 404.5 448.022 404.5 442.5 cv
384.5 442.5 li
@
387.5 435.5 mo
394.5 442.5 li
@
437 435.5 mo
447.687 432.545 li
447.801 432.516 447.922 432.5 448.045 432.5 cv
448.849 432.5 449.5 433.157 449.5 433.967 cv
449.5 435.434 li
@
451 455.5 mo
437 455.5 li
436.172 455.5 435.5 454.828 435.5 454 cv
435.5 437 li
435.5 436.172 436.172 435.5 437 435.5 cv
451 435.5 li
451.828 435.5 452.5 436.172 452.5 437 cv
452.5 454 li
452.5 454.828 451.828 455.5 451 455.5 cv
cp
@
446.5 446 mo
444.567 446 443 444.433 443 442.5 cv
443 442.195 443.051 441.905 443.124 441.624 cv
441.617 442.015 440.5 443.371 440.5 445 cv
440.5 446.933 442.067 448.5 444 448.5 cv
445.629 448.5 446.985 447.383 447.376 445.876 cv
447.095 445.949 446.805 446 446.5 446 cv
cp
@
355.649 438.81 mo
356.547 433.5 li
352.235 436.727 li
349.964 434.689 li
356.547 433.5 li
358.5 439.898 li
355.649 438.81 li
cp
@
352.235 436.727 mo
355.649 438.81 li
@
353.942 437.768 mo
352 440.499 li
@
349.5 440.5 mo
350.5 445.5 li
352 442.5 li
353 447.5 li
354.5 440.5 li
@
345.5 452 mo
345.5 452.276 345.276 452.5 345 452.5 cv
344.724 452.5 344.5 452.276 344.5 452 cv
344.5 451.724 344.724 451.5 345 451.5 cv
345.276 451.5 345.5 451.724 345.5 452 cv
cp
f
346.5 453 mo
346.5 453.276 346.276 453.5 346 453.5 cv
345.724 453.5 345.5 453.276 345.5 453 cv
345.5 452.724 345.724 452.5 346 452.5 cv
346.276 452.5 346.5 452.724 346.5 453 cv
cp
f
347.5 452 mo
347.5 452.276 347.276 452.5 347 452.5 cv
346.724 452.5 346.5 452.276 346.5 452 cv
346.5 451.724 346.724 451.5 347 451.5 cv
347.276 451.5 347.5 451.724 347.5 452 cv
cp
f
347.5 440.5 mo
348.399 438.172 li
347.213 437.024 li
349 436.787 li
347.425 435.457 li
348.763 435 li
@
345.5 440.5 mo
344.499 435 li
342 433.5 li
@
343.5 440.5 mo
343.5 438.843 342.157 437.5 340.5 437.5 cv
338.843 437.5 337.5 438.843 337.5 440.5 cv
337.5 441.834 338.376 442.951 339.58 443.341 cv
@
340.556 440.5 mo
339.884 441.63 339.5 442.972 339.5 444.5 cv
339.5 449.471 343.529 454.5 348.5 454.5 cv
353.471 454.5 357.5 449.471 357.5 444.5 cv
357.5 442.972 357.116 441.63 356.444 440.5 cv
340.556 440.5 li
cp
@
353 404.5 mo
340 404.5 li
339.172 404.5 338.5 403.828 338.5 403 cv
338.5 389.5 li
354.5 389.5 li
354.5 403 li
354.5 403.828 353.828 404.5 353 404.5 cv
cp
@
354.5 389.5 mo
338.5 389.5 li
337.947 389.5 337.5 389.053 337.5 388.5 cv
337.5 388.5 li
337.5 387.947 337.947 387.5 338.5 387.5 cv
354.5 387.5 li
355.053 387.5 355.5 387.947 355.5 388.5 cv
355.5 388.5 li
355.5 389.053 355.053 389.5 354.5 389.5 cv
cp
@
354.5 391 mo
357 391 li
357.828 391 358.5 391.672 358.5 392.5 cv
358.5 397 li
358.5 399.209 356.709 401 354.5 401 cv
354.5 401 li
@
340.5 391.5 mo
340.5 401.5 li
@
0 lc
263.5 444 mo
263.5 450.352 258.352 455.5 252 455.5 cv
245.648 455.5 240.5 450.352 240.5 444 cv
240.5 437.648 245.648 432.5 252 432.5 cv
258.352 432.5 263.5 437.648 263.5 444 cv
cp
@
250.573 438.992 mo
248.048 438.479 245.021 438.36 242.007 438.322 cv
@
244.554 452.754 mo
245.287 450.019 247.456 445.689 251.222 441.026 cv
@
253.908 438.081 mo
255.011 436.833 256.075 435.319 257.105 433.707 cv
@
249.624 432.749 mo
250.382 434.207 251.125 435.834 251.816 437.628 cv
@
254.465 439.845 mo
257.654 440.345 260.519 440.488 262.918 440.403 cv
@
253.023 441.422 mo
254.26 445.117 256.853 449.355 258.967 453.135 cv
@
251.222 441.026 mo
247.456 445.689 245.287 450.019 244.554 452.754 cv
@
254.5 439.5 mo
254.5 440.604 253.604 441.5 252.5 441.5 cv
251.396 441.5 250.5 440.604 250.5 439.5 cv
250.5 438.396 251.396 437.5 252.5 437.5 cv
253.604 437.5 254.5 438.396 254.5 439.5 cv
cp
@
1 lc
164.5 444.15 mo
164.5 454.5 li
159.5 454.5 li
159.5 445.5 li
152.5 445.5 li
152.5 454.5 li
147.5 454.5 li
147.5 444.15 li
@
156 433.5 mo
144.5 443.5 li
146 445.5 li
156 436.5 li
166 445.5 li
167.5 443.5 li
156 433.5 li
cp
@
164.5 440.892 mo
164.5 435.5 li
161.5 435.5 li
161.5 438.282 li
@
200.5 436 mo
200.5 436.828 199.829 437.5 199 437.5 cv
198.171 437.5 197.5 436.828 197.5 436 cv
197.5 435.172 198.171 434.5 199 434.5 cv
199.829 434.5 200.5 435.172 200.5 436 cv
cp
@
205.5 439 mo
205.5 435.41 202.59 432.5 199 432.5 cv
195.41 432.5 192.5 435.41 192.5 439 cv
192.5 441.261 193.655 443.25 195.407 444.415 cv
195 445.5 li
196.5 445.5 li
196.5 446.5 li
197.5 447.5 li
196.5 448.5 li
197.5 449.5 li
196.5 450.5 li
197.5 451.5 li
196.5 452.5 li
196.5 453.5 li
199 455.5 li
201.5 453.5 li
201.5 445.5 li
203 445.5 li
202.593 444.415 li
204.345 443.25 205.5 441.261 205.5 439 cv
cp
@
203 444.107 mo
203 449.5 li
206.5 449.5 li
206.5 443.5 li
210.5 443.5 li
210.5 449.5 li
214 449.5 li
214 442.5 li
215.5 442.5 li
208.5 436.5 li
205.495 439.075 li
@
107.5 440.5 mo
108.5 443.5 li
109.75 444.5 li
111.5 444.5 li
111.5 445.9 li
113.5 447.5 li
116.5 452 li
116.5 443.5 li
119.5 443.5 li
108 433.5 li
103.568 437.354 li
107.5 440.5 li
cp
@
112.5 449.5 mo
111.5 448.833 li
111.5 454.5 li
116.5 454.5 li
116.5 452.7 li
112.5 449.5 li
cp
@
104.5 442.5 mo
100.447 440.068 li
96.5 443.5 li
99.5 443.5 li
99.5 454.5 li
104.5 454.5 li
104.5 444.5 li
105.833 444.5 li
104.5 442.5 li
cp
@
2.5 446.592 mo
1.23926 446.993 .500001 447.478 .500001 448 cv
.500001 449.381 5.64893 452.5 12 452.5 cv
18.3511 452.5 23.5 449.381 23.5 448 cv
23.5 447.478 22.7607 446.993 21.5 446.592 cv
@
8.55469 437.156 mo
5.01221 438.534 2.5 441.97 2.5 446 cv
2.5 447.5 li
2.5 447.5 5.5 449.5 12 449.5 cv
18.5 449.5 21.5 447.5 21.5 447.5 cv
21.5 446 li
21.5 441.971 18.9883 438.535 15.4468 437.157 cv
@
10.5 445.5 mo
10.5 437 li
10.5 436.172 11.1714 435.5 12 435.5 cv
12 435.5 li
12.8286 435.5 13.5 436.172 13.5 437 cv
13.5 445.5 li
@
10.5918 436.5 mo
8.5 436.5 li
9 442.5 li
@
15 442.5 mo
15.5 436.5 li
13.4082 436.5 li
@
6.5 501.5 mo
.500001 501.5 li
.500001 487.5 li
6.5 487.5 li
6.5 501.5 li
cp
@
4.5 485.5 mo
1.5 485.5 li
.947755 485.5 .500001 485.053 .500001 484.5 cv
.500001 484.5 li
.500001 483.947 .947755 483.5 1.5 483.5 cv
4.5 483.5 li
5.05225 483.5 5.5 483.947 5.5 484.5 cv
5.5 484.5 li
5.5 485.053 5.05225 485.5 4.5 485.5 cv
cp
@
1.5 485.5 mo
1.5 487.5 li
@
4.5 485.5 mo
4.5 487.5 li
@
6.5 490.5 mo
6 490.5 li
5.17139 490.5 4.5 491.172 4.5 492 cv
4.5 496 li
4.5 496.828 5.17139 497.5 6 497.5 cv
6.5 497.5 li
@
6.5 488.5 mo
6.5 488.5 li
7.79981 488.5 9.06641 488.912 10.1177 489.677 cv
11.9492 491.009 li
13.2822 491.978 14.8877 492.5 16.5356 492.5 cv
20 492.5 li
21.9331 492.5 23.5 494.067 23.5 496 cv
23.5 501.5 li
6.5 501.5 li
@
19 498.5 mo
12.5 498.5 li
11.6714 498.5 11 497.828 11 497 cv
11 497 li
11 496.172 11.6714 495.5 12.5 495.5 cv
19 495.5 li
19.8286 495.5 20.5 496.172 20.5 497 cv
20.5 497 li
20.5 497.828 19.8286 498.5 19 498.5 cv
cp
@
11.3945 490.605 mo
11.6978 490.302 12.0571 489.943 12.5 489.5 cv
15.5 486.5 17 487 19 485.5 cv
20.6309 484.276 21.2647 483.386 21.4429 483.099 cv
21.481 483.037 21.5 482.967 21.5 482.894 cv
21.5 482.677 21.3237 482.5 21.106 482.5 cv
20.1538 482.5 19.23 482.813 18.4688 483.385 cv
18.1709 483.608 17.8355 483.832 17.5 484 cv
16.5 484.5 12.75 485.25 11 487 cv
10.1855 487.814 9.48731 488.513 8.96533 489.035 cv
@
9.5 492 mo
9.5 492.276 9.27637 492.5 9 492.5 cv
8.72363 492.5 8.5 492.276 8.5 492 cv
8.5 491.724 8.72363 491.5 9 491.5 cv
9.27637 491.5 9.5 491.724 9.5 492 cv
cp
@
71.5 444 mo
70.1948 446.517 li
71.2139 446.56 li
69.3809 448.724 li
70.3628 448.992 li
68.0938 450.691 li
68.9902 451.172 li
66.4004 452.323 li
67.1694 452.992 li
64.3882 453.541 li
64.9907 454.363 li
62.1572 454.279 li
62.5596 455.214 li
59.8169 454.499 li
60 455.5 li
57.4829 454.195 li
57.4399 455.214 li
55.2769 453.381 li
55.0078 454.362 li
53.3086 452.094 li
52.8281 452.99 li
51.6763 450.4 li
51.0078 451.17 li
50.4595 448.389 li
49.6367 448.99 li
49.7207 446.157 li
48.7861 446.56 li
49.5005 443.816 li
48.5 444 li
49.8052 441.483 li
48.7861 441.44 li
50.6191 439.276 li
49.6372 439.008 li
51.9063 437.309 li
51.0098 436.828 li
53.5996 435.677 li
52.8306 435.008 li
55.6118 434.459 li
55.0093 433.637 li
57.8428 433.721 li
57.4404 432.786 li
60.1831 433.501 li
60 432.5 li
62.5171 433.805 li
62.5601 432.786 li
64.7231 434.619 li
64.9922 433.638 li
66.6914 435.906 li
67.1719 435.01 li
68.3237 437.6 li
68.9922 436.83 li
69.5405 439.611 li
70.3633 439.01 li
70.2793 441.843 li
71.2139 441.44 li
70.4995 444.184 li
71.5 444 li
cp
@
64.5 444 mo
64.5 446.485 62.4854 448.5 60 448.5 cv
57.5146 448.5 55.5 446.485 55.5 444 cv
55.5 441.515 57.5146 439.5 60 439.5 cv
62.4854 439.5 64.5 441.515 64.5 444 cv
cp
@
60.5 444 mo
60.5 444.276 60.2764 444.5 60 444.5 cv
59.7236 444.5 59.5 444.276 59.5 444 cv
59.5 443.724 59.7236 443.5 60 443.5 cv
60.2764 443.5 60.5 443.724 60.5 444 cv
cp
@
60.5 441.5 mo
60.5 441.776 60.2764 442 60 442 cv
59.7236 442 59.5 441.776 59.5 441.5 cv
59.5 441.224 59.7236 441 60 441 cv
60.2764 441 60.5 441.224 60.5 441.5 cv
cp
f
60.5 446.5 mo
60.5 446.776 60.2764 447 60 447 cv
59.7236 447 59.5 446.776 59.5 446.5 cv
59.5 446.224 59.7236 446 60 446 cv
60.2764 446 60.5 446.224 60.5 446.5 cv
cp
f
58.5859 441.879 mo
58.7813 442.074 58.7813 442.391 58.5859 442.586 cv
58.3906 442.781 58.0737 442.781 57.8789 442.586 cv
57.6836 442.391 57.6836 442.074 57.8789 441.879 cv
58.0737 441.684 58.3906 441.684 58.5859 441.879 cv
cp
f
62.1211 445.414 mo
62.3164 445.609 62.3164 445.926 62.1211 446.121 cv
61.9263 446.316 61.6094 446.316 61.4141 446.121 cv
61.2188 445.926 61.2188 445.609 61.4141 445.414 cv
61.6094 445.219 61.9263 445.219 62.1211 445.414 cv
cp
f
57.5 443.5 mo
57.7764 443.5 58 443.724 58 444 cv
58 444.276 57.7764 444.5 57.5 444.5 cv
57.2236 444.5 57 444.276 57 444 cv
57 443.724 57.2236 443.5 57.5 443.5 cv
cp
f
62.5 443.5 mo
62.7764 443.5 63 443.724 63 444 cv
63 444.276 62.7764 444.5 62.5 444.5 cv
62.2236 444.5 62 444.276 62 444 cv
62 443.724 62.2236 443.5 62.5 443.5 cv
cp
f
57.8789 445.414 mo
58.0737 445.219 58.3906 445.219 58.5859 445.414 cv
58.7813 445.609 58.7813 445.926 58.5859 446.121 cv
58.3906 446.316 58.0737 446.316 57.8789 446.121 cv
57.6836 445.926 57.6836 445.609 57.8789 445.414 cv
cp
f
61.4141 441.879 mo
61.6094 441.684 61.9263 441.684 62.1211 441.879 cv
62.3164 442.074 62.3164 442.391 62.1211 442.586 cv
61.9263 442.781 61.6094 442.781 61.4141 442.586 cv
61.2188 442.391 61.2188 442.074 61.4141 441.879 cv
cp
f
67 503.5 mo
53 503.5 li
52.1714 503.5 51.5 502.828 51.5 502 cv
51.5 489.5 li
68.5 489.5 li
68.5 502 li
68.5 502.828 67.8286 503.5 67 503.5 cv
cp
@
64.5 489.5 mo
64.5 487 li
64.5 484.515 62.4854 482.5 60 482.5 cv
57.5146 482.5 55.5 484.515 55.5 487 cv
55.5 487.5 li
53.5 487.5 li
53.5 487 li
53.5 483.41 56.4102 480.5 60 480.5 cv
63.5898 480.5 66.5 483.41 66.5 487 cv
66.5 489.5 li
@
61.5 495 mo
61.5 494.172 60.8286 493.5 60 493.5 cv
59.1714 493.5 58.5 494.172 58.5 495 cv
58.5 495.595 58.8486 496.104 59.3506 496.347 cv
59 499.5 li
61 499.5 li
60.6494 496.347 li
61.1514 496.104 61.5 495.595 61.5 495 cv
cp
@
112 480.5 mo
107.858 480.5 104.5 483.857 104.5 488 cv
104.5 488.649 104.591 489.276 104.746 489.877 cv
103.5 490.5 li
104.5 491.5 li
103.5 492.5 li
102.5 492.5 li
102.5 493.5 li
101.5 494.5 li
100.5 494.5 li
100.5 495.5 li
99.5 496.5 li
98.5 496.5 li
98.5 497.5 li
96.5 499.5 li
96.5 503.5 li
100.5 503.5 li
108.5 495.5 li
109.5 496.5 li
110.123 495.254 li
110.724 495.409 111.351 495.5 112 495.5 cv
116.142 495.5 119.5 492.143 119.5 488 cv
119.5 483.857 116.142 480.5 112 480.5 cv
cp
@
116.5 485.5 mo
116.5 486.604 115.604 487.5 114.5 487.5 cv
113.396 487.5 112.5 486.604 112.5 485.5 cv
112.5 484.396 113.396 483.5 114.5 483.5 cv
115.604 483.5 116.5 484.396 116.5 485.5 cv
cp
@
99.5 500.5 mo
106.5 493.5 li
@
215.5 492.5 mo
213.5 489 210 486.5 205.5 486.5 cv
202.5 486.5 198 489 197 490 cv
196 489 192.5 487.5 192.5 487.5 cv
192.5 487.5 193.5 491 193.5 492.5 cv
193.5 494 192.5 497.5 192.5 497.5 cv
192.5 497.5 196 496 197 495 cv
198 496 202.5 498.5 205.5 498.5 cv
210 498.5 213.5 496 215.5 492.5 cv
cp
@
205.5 486.5 mo
204 485 200.5 484.5 200.5 484.5 cv
200.5 484.5 201.35 486.786 201.35 487.505 cv
@
202.586 497.951 mo
201.818 499.298 201.391 499.5 200.204 499.5 cv
199.469 499.5 198.5 498.5 198.5 497.5 cv
198.5 496.5 199.028 496.378 199.028 496.378 cv
@
211.5 491 mo
211.5 491.276 211.276 491.5 211 491.5 cv
210.724 491.5 210.5 491.276 210.5 491 cv
210.5 490.724 210.724 490.5 211 490.5 cv
211.276 490.5 211.5 490.724 211.5 491 cv
cp
@
207 489.5 mo
207 489.5 206 491 206 492.5 cv
206 494 207 495.5 207 495.5 cv
@
23.5 540 mo
23.5 540.985 22.3877 541.811 22.145 542.719 cv
21.8936 543.659 22.437 544.929 21.9609 545.751 cv
21.4775 546.586 20.1021 546.747 19.4248 547.425 cv
18.7471 548.103 18.5859 549.478 17.7515 549.961 cv
16.9282 550.437 15.6587 549.894 14.7188 550.145 cv
13.8105 550.388 12.9849 551.5 12 551.5 cv
11.0151 551.5 10.1895 550.388 9.28125 550.145 cv
8.34131 549.894 7.07178 550.437 6.24854 549.961 cv
5.41406 549.478 5.25293 548.102 4.5752 547.425 cv
3.89795 546.747 2.52246 546.586 2.03955 545.751 cv
1.56348 544.929 2.10645 543.658 1.85547 542.719 cv
1.61279 541.811 .500001 540.985 .500001 540 cv
.500001 539.015 1.61279 538.189 1.85547 537.281 cv
2.10645 536.341 1.56348 535.071 2.03955 534.249 cv
2.52246 533.414 3.89844 533.253 4.57568 532.575 cv
5.25293 531.897 5.41455 530.522 6.24902 530.039 cv
7.07178 529.563 8.34131 530.106 9.28125 529.855 cv
10.1895 529.612 11.0151 528.5 12 528.5 cv
12.9849 528.5 13.8105 529.612 14.7192 529.855 cv
15.6587 530.106 16.9287 529.563 17.7515 530.039 cv
18.5864 530.522 18.7476 531.898 19.4248 532.575 cv
20.1021 533.253 21.478 533.414 21.9609 534.249 cv
22.437 535.071 21.8936 536.342 22.145 537.281 cv
22.3877 538.189 23.5 539.015 23.5 540 cv
cp
@
11.9995 540 mo
13.5161 540 13.5396 541.58 13.8848 542 cv
14.4824 542.728 15.4854 543.219 15.5 544.25 cv
15.5117 545.096 14.9561 545.5 14.1538 545.5 cv
13.1328 545.5 12.9038 544.865 11.9995 544.865 cv
12 544.865 li
11.0957 544.865 10.8672 545.5 9.84619 545.5 cv
9.04395 545.5 8.48828 545.096 8.5 544.25 cv
8.51465 543.219 9.51758 542.728 10.1152 542 cv
10.4605 541.58 10.4834 540 12 540 cv
11.9995 540 li
cp
@
17.458 540 mo
17.4863 539.852 17.5 539.707 17.5 539.571 cv
17.5005 538.952 17.2202 538.5 16.7861 538.5 cv
16.2573 538.5 15.7002 539.172 15.542 540 cv
15.5137 540.148 15.5 540.293 15.5 540.429 cv
15.4995 541.048 15.7798 541.5 16.2139 541.5 cv
16.7432 541.5 17.2998 540.828 17.458 540 cv
cp
@
15.459 536.25 mo
15.4834 536.116 15.4966 535.986 15.4995 535.861 cv
15.5186 535.082 15.1421 534.5 14.5669 534.5 cv
13.8989 534.5 13.2158 535.283 13.041 536.25 cv
13.0171 536.384 13.0039 536.514 13.001 536.639 cv
12.9819 537.418 13.3579 538 13.9336 538 cv
14.6011 538 15.2842 537.217 15.459 536.25 cv
cp
@
6.54199 540 mo
6.51367 539.852 6.5 539.707 6.5 539.571 cv
6.49951 538.952 6.77979 538.5 7.21387 538.5 cv
7.74317 538.5 8.29981 539.172 8.45801 540 cv
8.48633 540.148 8.5 540.293 8.5 540.429 cv
8.50049 541.048 8.22022 541.5 7.78613 541.5 cv
7.25733 541.5 6.7002 540.828 6.54199 540 cv
cp
@
8.54102 536.25 mo
8.51709 536.116 8.50391 535.986 8.50098 535.861 cv
8.48193 535.082 8.85791 534.5 9.43359 534.5 cv
10.1011 534.5 10.7842 535.283 10.959 536.25 cv
10.9834 536.384 10.9966 536.514 10.9995 536.639 cv
11.0186 537.418 10.6421 538 10.0669 538 cv
9.39893 538 8.71582 537.217 8.54102 536.25 cv
cp
@
151 497 mo
152.516 497 152.54 498.58 152.885 499 cv
153.482 499.728 154.485 500.219 154.5 501.25 cv
154.512 502.096 153.956 502.5 153.154 502.5 cv
152.133 502.5 151.904 501.865 151 501.865 cv
151 501.865 li
150.096 501.865 149.867 502.5 148.846 502.5 cv
148.044 502.5 147.488 502.096 147.5 501.25 cv
147.515 500.219 148.518 499.728 149.115 499 cv
149.46 498.58 149.483 497 151 497 cv
151 497 li
cp
@
156.458 497 mo
156.486 496.852 156.5 496.707 156.5 496.571 cv
156.5 495.952 156.22 495.5 155.786 495.5 cv
155.257 495.5 154.7 496.172 154.542 497 cv
154.514 497.148 154.5 497.293 154.5 497.429 cv
154.5 498.048 154.78 498.5 155.214 498.5 cv
155.743 498.5 156.3 497.828 156.458 497 cv
cp
@
154.459 493.25 mo
154.483 493.116 154.497 492.986 154.5 492.861 cv
154.519 492.082 154.142 491.5 153.567 491.5 cv
152.899 491.5 152.216 492.283 152.041 493.25 cv
152.017 493.384 152.004 493.514 152.001 493.639 cv
151.982 494.418 152.358 495 152.934 495 cv
153.601 495 154.284 494.217 154.459 493.25 cv
cp
@
145.542 497 mo
145.514 496.852 145.5 496.707 145.5 496.571 cv
145.5 495.952 145.78 495.5 146.214 495.5 cv
146.743 495.5 147.3 496.172 147.458 497 cv
147.486 497.148 147.5 497.293 147.5 497.429 cv
147.5 498.048 147.22 498.5 146.786 498.5 cv
146.257 498.5 145.7 497.828 145.542 497 cv
cp
@
147.541 493.25 mo
147.517 493.116 147.504 492.986 147.501 492.861 cv
147.482 492.082 147.858 491.5 148.434 491.5 cv
149.101 491.5 149.784 492.283 149.959 493.25 cv
149.983 493.384 149.997 493.514 150 493.639 cv
150.019 494.418 149.642 495 149.067 495 cv
148.399 495 147.716 494.217 147.541 493.25 cv
cp
@
161 487 mo
162.516 487 162.54 488.58 162.885 489 cv
163.482 489.728 164.485 490.219 164.5 491.25 cv
164.512 492.096 163.956 492.5 163.154 492.5 cv
162.133 492.5 161.904 491.865 161 491.865 cv
161 491.865 li
160.096 491.865 159.867 492.5 158.846 492.5 cv
158.044 492.5 157.488 492.096 157.5 491.25 cv
157.515 490.219 158.518 489.728 159.115 489 cv
159.46 488.58 159.483 487 161 487 cv
161 487 li
cp
@
166.458 487 mo
166.486 486.852 166.5 486.707 166.5 486.571 cv
166.5 485.952 166.22 485.5 165.786 485.5 cv
165.257 485.5 164.7 486.172 164.542 487 cv
164.514 487.148 164.5 487.293 164.5 487.429 cv
164.5 488.048 164.78 488.5 165.214 488.5 cv
165.743 488.5 166.3 487.828 166.458 487 cv
cp
@
164.459 483.25 mo
164.483 483.116 164.497 482.986 164.5 482.861 cv
164.519 482.082 164.142 481.5 163.567 481.5 cv
162.899 481.5 162.216 482.283 162.041 483.25 cv
162.017 483.384 162.004 483.514 162.001 483.639 cv
161.982 484.418 162.358 485 162.934 485 cv
163.601 485 164.284 484.217 164.459 483.25 cv
cp
@
155.542 487 mo
155.514 486.852 155.5 486.707 155.5 486.571 cv
155.5 485.952 155.78 485.5 156.214 485.5 cv
156.743 485.5 157.3 486.172 157.458 487 cv
157.486 487.148 157.5 487.293 157.5 487.429 cv
157.5 488.048 157.22 488.5 156.786 488.5 cv
156.257 488.5 155.7 487.828 155.542 487 cv
cp
@
157.541 483.25 mo
157.517 483.116 157.504 482.986 157.501 482.861 cv
157.482 482.082 157.858 481.5 158.434 481.5 cv
159.101 481.5 159.784 482.283 159.959 483.25 cv
159.983 483.384 159.997 483.514 160 483.639 cv
160.019 484.418 159.642 485 159.067 485 cv
158.399 485 157.716 484.217 157.541 483.25 cv
cp
@
407.5 492 mo
407.5 498.352 402.352 503.5 396 503.5 cv
389.648 503.5 384.5 498.352 384.5 492 cv
384.5 485.648 389.648 480.5 396 480.5 cv
402.352 480.5 407.5 485.648 407.5 492 cv
cp
@
396 480.5 mo
394.779 480.5 393.604 480.693 392.5 481.047 cv
392.5 483 li
392.5 483.828 393.172 484.5 394 484.5 cv
398 484.5 li
398.828 484.5 399.5 483.828 399.5 483 cv
399.5 481.047 li
398.396 480.693 397.221 480.5 396 480.5 cv
cp
@
396 503.5 mo
397.221 503.5 398.396 503.307 399.5 502.953 cv
399.5 501 li
399.5 500.172 398.828 499.5 398 499.5 cv
394 499.5 li
393.172 499.5 392.5 500.172 392.5 501 cv
392.5 502.953 li
393.604 503.307 394.779 503.5 396 503.5 cv
cp
@
386.041 486.25 mo
385.431 487.308 385.011 488.422 384.764 489.555 cv
386.456 490.531 li
387.173 490.945 388.091 490.699 388.505 489.982 cv
390.505 486.518 li
390.919 485.801 390.673 484.883 389.956 484.469 cv
388.264 483.492 li
387.406 484.272 386.651 485.192 386.041 486.25 cv
cp
@
405.959 497.75 mo
406.569 496.692 406.989 495.578 407.236 494.445 cv
405.544 493.469 li
404.827 493.055 403.909 493.301 403.495 494.018 cv
401.495 497.482 li
401.081 498.199 401.327 499.117 402.044 499.531 cv
403.736 500.508 li
404.594 499.728 405.349 498.808 405.959 497.75 cv
cp
@
386.041 497.75 mo
386.651 498.808 387.406 499.728 388.264 500.508 cv
389.956 499.531 li
390.673 499.117 390.919 498.199 390.505 497.482 cv
388.505 494.018 li
388.091 493.301 387.173 493.055 386.456 493.469 cv
384.764 494.445 li
385.011 495.578 385.431 496.692 386.041 497.75 cv
cp
@
405.959 486.25 mo
405.349 485.192 404.594 484.272 403.736 483.492 cv
402.044 484.469 li
401.327 484.883 401.081 485.801 401.495 486.518 cv
403.495 489.982 li
403.909 490.699 404.827 490.945 405.544 490.531 cv
407.236 489.555 li
406.989 488.422 406.569 487.308 405.959 486.25 cv
cp
@
401.5 492 mo
401.5 495.037 399.037 497.5 396 497.5 cv
392.963 497.5 390.5 495.037 390.5 492 cv
390.5 488.963 392.963 486.5 396 486.5 cv
399.037 486.5 401.5 488.963 401.5 492 cv
cp
@
397.5 489.5 mo
395.75 489.5 li
395.06 489.5 394.5 490.06 394.5 490.75 cv
394.5 490.75 li
394.5 491.44 395.06 492 395.75 492 cv
396.25 492 li
396.94 492 397.5 492.56 397.5 493.25 cv
397.5 493.25 li
397.5 493.94 396.94 494.5 396.25 494.5 cv
394.5 494.5 li
@
396 489.5 mo
396 488.5 li
@
396 494.5 mo
396 495.5 li
@
354.568 500.925 mo
354.568 500.925 li
353.896 500.027 352.84 499.5 351.719 499.5 cv
344.281 499.5 li
343.16 499.5 342.104 500.027 341.432 500.925 cv
341.432 500.925 li
341.146 501.305 340.94 501.737 340.825 502.197 cv
340.5 503.5 li
355.5 503.5 li
355.175 502.197 li
355.06 501.737 354.854 501.305 354.568 500.925 cv
cp
@
345.953 494.173 mo
344.5 499.5 li
351.5 499.5 li
350.047 494.173 li
@
352.5 493 mo
352.5 493 350.485 494.5 348 494.5 cv
345.515 494.5 343.5 493 343.5 493 cv
343.5 493 345.515 491.5 348 491.5 cv
350.485 491.5 352.5 493 352.5 493 cv
cp
@
349.453 482.355 mo
349.481 482.24 349.5 482.123 349.5 482 cv
349.5 481.172 348.828 480.5 348 480.5 cv
347.172 480.5 346.5 481.172 346.5 482 cv
346.5 482.123 346.519 482.24 346.547 482.355 cv
345.34 483.77 344.5 486.586 344.5 488 cv
344.5 489.933 346.067 491.5 348 491.5 cv
349.933 491.5 351.5 489.933 351.5 488 cv
351.5 486.586 350.66 483.77 349.453 482.355 cv
cp
@
345.781 483.517 mo
347.5 486.5 li
@
288.5 503.5 mo
288.5 503.5 li
289.113 502.274 290.365 501.5 291.736 501.5 cv
308.264 501.5 li
309.635 501.5 310.887 502.274 311.5 503.5 cv
311.5 503.5 li
288.5 503.5 li
cp
@
298.5 490.5 mo
298.5 501.5 li
301.5 499.5 li
@
298.5 498.5 mo
301.5 496.5 li
@
298.5 495.5 mo
301.5 493.5 li
@
298.5 492.5 mo
301.5 490.5 li
301.5 501.5 li
@
288.5 487.5 mo
289.044 489.133 li
289.316 489.949 290.081 490.5 290.941 490.5 cv
309.059 490.5 li
309.919 490.5 310.684 489.949 310.956 489.133 cv
311.5 487.5 li
288.5 487.5 li
cp
@
300.5 481 mo
300.5 481.276 300.276 481.5 300 481.5 cv
299.724 481.5 299.5 481.276 299.5 481 cv
299.5 480.724 299.724 480.5 300 480.5 cv
300.276 480.5 300.5 480.724 300.5 481 cv
cp
@
289.5 496.5 mo
289.86 498.664 li
289.941 499.146 290.358 499.5 290.847 499.5 cv
294.153 499.5 li
294.642 499.5 295.059 499.146 295.14 498.664 cv
295.5 496.5 li
289.5 496.5 li
cp
@
292.5 499.5 mo
292.5 501 li
@
292.5 490.5 mo
292.5 496.5 li
@
304.5 496.5 mo
304.86 498.664 li
304.941 499.146 305.358 499.5 305.847 499.5 cv
309.153 499.5 li
309.642 499.5 310.059 499.146 310.14 498.664 cv
310.5 496.5 li
304.5 496.5 li
cp
@
307.5 499.5 mo
307.5 501 li
@
307.5 490.5 mo
307.5 496.5 li
@
300 481.5 mo
296.5 485.5 288.5 487.5 288.5 487.5 cv
@
300 481.5 mo
303.5 485.5 311.5 487.5 311.5 487.5 cv
@
300 481.5 mo
299.087 485.5 297 487.5 297 487.5 cv
@
300 481.5 mo
300.913 485.5 303 487.5 303 487.5 cv
@
435.5 550 mo
435.5 530 li
435.5 529.172 436.172 528.5 437 528.5 cv
451 528.5 li
451.828 528.5 452.5 529.172 452.5 530 cv
452.5 547 li
452.5 549.485 450.485 551.5 448 551.5 cv
437 551.5 li
436.172 551.5 435.5 550.828 435.5 550 cv
cp
@
449.5 539.5 mo
437.5 539.5 li
437.5 530.5 li
450.5 530.5 li
450.5 538.5 li
450.5 539.053 450.053 539.5 449.5 539.5 cv
cp
@
440.5 546.5 mo
439.5 546.5 li
439.5 541.5 li
440.5 541.5 li
440.5 546.5 li
cp
@
437.5 544.5 mo
437.5 543.5 li
442.5 543.5 li
442.5 544.5 li
437.5 544.5 li
cp
@
450.5 543 mo
450.5 543.276 450.276 543.5 450 543.5 cv
449.724 543.5 449.5 543.276 449.5 543 cv
449.5 542.724 449.724 542.5 450 542.5 cv
450.276 542.5 450.5 542.724 450.5 543 cv
cp
@
447.5 545 mo
447.5 545.276 447.276 545.5 447 545.5 cv
446.724 545.5 446.5 545.276 446.5 545 cv
446.5 544.724 446.724 544.5 447 544.5 cv
447.276 544.5 447.5 544.724 447.5 545 cv
cp
@
442.5 548.5 mo
443.5 548 li
@
444.5 548.5 mo
445.5 548 li
@
104.5 539.5 mo
102.5 539.5 li
102.5 537.5 li
104.5 537.5 li
104.5 539.5 li
cp
@
106.5 548.5 mo
106.5 546.5 li
102.5 546.5 li
102.5 548.5 li
106.5 548.5 li
cp
@
100.5 531.5 mo
100.5 533.5 li
102.5 533.5 li
102.5 531.5 li
100.5 531.5 li
cp
@
117.5 540.5 mo
117.5 538.5 li
115.5 538.5 li
115.5 535.5 li
113.5 535.5 li
113.5 533.5 li
111.5 533.5 li
111.5 535.5 li
108 535.5 li
104.5 535.5 li
104.5 533.5 li
102.5 533.5 li
102.5 535.5 li
100.5 535.5 li
100.5 538.5 li
98.5 538.5 li
98.5 540.5 li
96.5 540.5 li
96.5 546.5 li
98.5 546.5 li
98.5 542.5 li
100.5 542.5 li
100.5 543.5 li
100.5 544.5 li
100.5 546.5 li
102.5 546.5 li
102.5 544.5 li
108 544.5 li
113.5 544.5 li
113.5 546.5 li
115.5 546.5 li
115.5 544.5 li
115.5 543.5 li
115.5 542.5 li
117.5 542.5 li
117.5 546.5 li
119.5 546.5 li
119.5 540.5 li
117.5 540.5 li
cp
@
109.5 548.5 mo
113.5 548.5 li
113.5 546.5 li
109.5 546.5 li
109.5 548.5 li
cp
@
115.5 531.5 mo
113.5 531.5 li
113.5 533.5 li
115.5 533.5 li
115.5 531.5 li
cp
@
111.5 539.5 mo
113.5 539.5 li
113.5 537.5 li
111.5 537.5 li
111.5 539.5 li
cp
@
451.298 499.24 mo
453.896 497.991 455.5 495.721 455.5 492 cv
455.5 485.648 450.352 480.5 444 480.5 cv
437.648 480.5 432.5 485.648 432.5 492 cv
432.5 495.426 434.151 497.62 436.661 498.923 cv
@
444 495 mo
440.793 495 438.002 496.15 436.555 497.848 cv
436.898 502.455 437.94 503.5 444 503.5 cv
450.06 503.5 451.102 502.455 451.445 497.848 cv
449.998 496.15 447.207 495 444 495 cv
cp
@
441.5 499 mo
441.5 499.828 441.388 500.5 441.25 500.5 cv
441.112 500.5 441 499.828 441 499 cv
441 498.172 441.112 497.5 441.25 497.5 cv
441.388 497.5 441.5 498.172 441.5 499 cv
cp
@
447 499 mo
447 499.828 446.888 500.5 446.75 500.5 cv
446.612 500.5 446.5 499.828 446.5 499 cv
446.5 498.172 446.612 497.5 446.75 497.5 cv
446.888 497.5 447 498.172 447 499 cv
cp
@
449.5 487 mo
449.5 490.037 447.037 492.5 444 492.5 cv
440.963 492.5 438.5 490.037 438.5 487 cv
438.5 483.963 440.963 481.5 444 481.5 cv
447.037 481.5 449.5 483.963 449.5 487 cv
cp
@
452.5 489 mo
452.5 491.191 453.588 493.125 455.249 494.303 cv
455.407 493.604 455.5 492.844 455.5 492 cv
455.5 489.602 454.764 487.376 453.509 485.533 cv
452.873 486.537 452.5 487.724 452.5 489 cv
cp
@
434.491 485.533 mo
433.236 487.376 432.5 489.602 432.5 492 cv
432.5 492.831 432.602 493.587 432.784 494.277 cv
434.427 493.098 435.5 491.177 435.5 489 cv
435.5 487.724 435.127 486.537 434.491 485.533 cv
cp
@
342.5 550 mo
342.5 549.172 341.828 548.5 341 548.5 cv
340.172 548.5 339.5 549.172 339.5 550 cv
339.5 550.828 340.172 551.5 341 551.5 cv
341.828 551.5 342.5 550.828 342.5 550 cv
cp
@
356.5 550 mo
356.5 549.172 355.828 548.5 355 548.5 cv
354.172 548.5 353.5 549.172 353.5 550 cv
353.5 550.828 354.172 551.5 355 551.5 cv
355.828 551.5 356.5 550.828 356.5 550 cv
cp
@
359.5 548.5 mo
336.5 548.5 li
336.5 546.5 li
359.5 546.5 li
359.5 548.5 li
cp
@
353 546.5 mo
343 546.5 li
342.172 546.5 341.5 545.828 341.5 545 cv
341.5 539 li
341.5 538.172 342.172 537.5 343 537.5 cv
353 537.5 li
353.828 537.5 354.5 538.172 354.5 539 cv
354.5 545 li
354.5 545.828 353.828 546.5 353 546.5 cv
cp
@
345.5 537.5 mo
345.5 536.5 li
345.5 535.947 345.947 535.5 346.5 535.5 cv
349.5 535.5 li
350.053 535.5 350.5 535.947 350.5 536.5 cv
350.5 537.5 li
@
338.5 546.5 mo
338.5 536.5 li
338.5 533.738 340.738 531.5 343.5 531.5 cv
352.5 531.5 li
355.262 531.5 357.5 533.738 357.5 536.5 cv
357.5 546.5 li
@
351.5 531.5 mo
344.5 531.5 li
344.5 531 li
344.5 530.172 345.172 529.5 346 529.5 cv
350 529.5 li
350.828 529.5 351.5 530.172 351.5 531 cv
351.5 531.5 li
cp
@
348.5 529 mo
348.5 529.276 348.276 529.5 348 529.5 cv
347.724 529.5 347.5 529.276 347.5 529 cv
347.5 528.724 347.724 528.5 348 528.5 cv
348.276 528.5 348.5 528.724 348.5 529 cv
cp
@
302.5 534.5 mo
302.5 530 li
302.5 529.172 301.828 528.5 301 528.5 cv
293 528.5 li
292.172 528.5 291.5 529.172 291.5 530 cv
291.5 550 li
291.5 550.828 292.172 551.5 293 551.5 cv
301 551.5 li
301.828 551.5 302.5 550.828 302.5 550 cv
302.5 537.5 li
@
298.5 544 mo
298.5 543.172 297.828 542.5 297 542.5 cv
296.172 542.5 295.5 543.172 295.5 544 cv
295.5 544.595 295.849 545.104 296.351 545.347 cv
296 548.5 li
298 548.5 li
297.649 545.347 li
298.151 545.104 298.5 544.813 298.5 544 cv
cp
@
308.5 534.5 mo
298.988 534.5 li
298.532 533.896 297.815 533.5 297 533.5 cv
295.619 533.5 294.5 534.619 294.5 536 cv
294.5 537.381 295.619 538.5 297 538.5 cv
297.815 538.5 298.532 538.104 298.988 537.5 cv
308.5 537.5 li
308.5 534.5 li
cp
@
263.5 540 mo
263.5 546.352 258.352 551.5 252 551.5 cv
245.648 551.5 240.5 546.352 240.5 540 cv
240.5 533.648 245.648 528.5 252 528.5 cv
258.352 528.5 263.5 533.648 263.5 540 cv
cp
@
252 540 mo
252.5 535 259.087 530.942 259.087 530.942 cv
@
254.028 535.471 mo
257.75 538.958 260.128 545.378 259.876 548.376 cv
@
256.777 532.657 mo
260.25 535.417 262.386 540.513 262.494 544.706 cv
@
252 540 mo
247.42 542.067 240.612 538.392 240.612 538.392 cv
@
247.063 540.508 mo
248.223 535.541 252.594 530.272 255.316 528.99 cv
@
243.252 539.534 mo
243.905 535.146 247.251 530.75 250.828 528.559 cv
@
252 540 mo
256.08 542.933 256.301 550.666 256.301 550.666 cv
@
254.908 544.021 mo
250.027 545.5 243.279 544.35 240.808 542.633 cv
@
255.971 547.809 mo
251.845 549.437 246.363 548.738 242.678 546.735 cv
@
208.5 534.207 mo
208.5 533.754 208.32 533.32 208 533 cv
207.68 532.68 207.246 532.5 206.793 532.5 cv
201.207 532.5 li
200.754 532.5 200.32 532.68 200 533 cv
199.68 533.32 199.5 533.754 199.5 534.207 cv
199.5 537.5 li
200.329 538.328 200.329 539.672 199.5 540.5 cv
199.5 549.793 li
199.5 550.246 199.68 550.68 200 551 cv
200.32 551.32 200.754 551.5 201.207 551.5 cv
206.793 551.5 li
207.246 551.5 207.68 551.32 208 551 cv
208.32 550.68 208.5 550.246 208.5 549.793 cv
208.5 540.5 li
207.671 539.672 207.671 538.328 208.5 537.5 cv
208.5 534.207 li
cp
@
206.5 532.5 mo
201.5 532.5 li
201.5 531.5 li
201.5 530.947 201.948 530.5 202.5 530.5 cv
205.5 530.5 li
206.052 530.5 206.5 530.947 206.5 531.5 cv
206.5 532.5 li
cp
@
204.5 530.5 mo
203.5 530.5 li
203.5 529.5 li
204.5 528.5 li
204.5 530.5 li
cp
@
205.5 545 mo
205.5 545.828 204.829 546.5 204 546.5 cv
203.171 546.5 202.5 545.828 202.5 545 cv
202.5 543.5 204 541.5 204 541.5 cv
204 541.5 205.5 543.5 205.5 545 cv
cp
@
66.5 533.5 mo
66.5 534.604 65.6045 535.5 64.5 535.5 cv
63.3955 535.5 62.5 534.604 62.5 533.5 cv
62.5 532 64.5 529.5 64.5 529.5 cv
64.5 529.5 66.5 532 66.5 533.5 cv
cp
@
60.8325 538.5 mo
61.5 540.5 li
63 539.5 li
64.5 542.5 li
66 539 li
67.5 539.5 li
67.9995 538.5 li
69 538.5 li
69.8286 538.5 70.5 539.172 70.5 540 cv
70.5 540 li
70.5 540.828 69.8286 541.5 69 541.5 cv
64.9287 541.5 li
70 541.5 li
70.8286 541.5 71.5 542.172 71.5 543 cv
71.5 543 li
71.5 543.828 70.8286 544.5 70 544.5 cv
62.5 544.5 li
69 544.5 li
69.8286 544.5 70.5 545.172 70.5 546 cv
70.5 546 li
70.5 546.828 69.8286 547.5 69 547.5 cv
61 547.5 li
60.999 547.502 li
61 547.5 li
66 547.5 li
66.8286 547.5 67.5 548.172 67.5 549 cv
67.5 549 li
67.5 549.828 66.8286 550.5 66 550.5 cv
53 550.5 li
50.5146 550.5 48.5 548.485 48.5 546 cv
48.5 541.365 li
48.5 539.846 49.0767 538.382 50.1138 537.271 cv
55.5 531.5 li
55.8818 531.5 li
56.7754 531.5 57.5 532.225 57.5 533.118 cv
57.5 533.118 li
57.5 533.369 57.4414 533.617 57.3291 533.842 cv
55.7236 537.053 li
55.3911 537.718 55.8745 538.5 56.6182 538.5 cv
60.8325 538.5 li
cp
@
55.5 596.5 mo
55.4551 597.517 54.7056 597.526 54.5 598.5 cv
@
52.9551 595.583 mo
52.332 596.365 51.8638 595.947 51.1353 596.606 cv
@
51.6323 593.498 mo
50.6533 593.771 50.4854 592.895 49.5 593 cv
@
51.7793 591.037 mo
50.8364 590.686 51.0938 590.112 50.2407 589.622 cv
@
53.3525 589.133 mo
52.7886 588.287 53.3403 587.988 52.9292 587.079 cv
@
56.272 587.399 mo
55.8228 587.152 55.6392 586.835 55.4194 586.614 cv
55.2017 586.382 54.9604 586.262 54.4648 586.198 cv
@
56.6846 584.055 mo
55.7046 583.824 55.8711 583.22 54.9473 582.884 cv
@
57.8828 581.675 mo
57.1045 581.047 57.5254 580.581 56.8257 579.867 cv
@
60.0015 580.054 mo
59.564 579.136 60.1479 578.908 59.8286 577.967 cv
@
62.5 579.5 mo
62.5039 578.502 63.3804 578.485 63.5 577.5 cv
@
65.1919 580.146 mo
65.6387 579.233 66.1797 579.55 66.7178 578.713 cv
@
67.2466 581.847 mo
68.0327 581.223 68.4063 581.727 69.2427 581.21 cv
@
68.3701 584.262 mo
69.3525 584.041 69.5039 584.604 70.5 584.5 cv
@
68.3984 587.06 mo
69.3921 587.17 69.3032 587.791 70.2881 587.965 cv
@
67.7046 589.839 mo
68.6514 590.209 68.4014 590.783 69.2876 591.21 cv
@
66.2764 592.274 mo
67.0591 592.896 66.6587 593.379 67.3896 594.062 cv
@
64.1943 594.197 mo
64.7646 595.02 64.2295 595.347 64.7417 596.205 cv
@
61.6167 595.494 mo
61.9707 596.43 61.3823 596.647 61.6821 597.602 cv
@
58.7729 596.236 mo
58.9419 597.23 58.3218 597.327 58.4448 598.308 cv
@
62.5 579.5 mo
59.1865 579.5 56.5 582.187 56.5 585.5 cv
56.5 587.158 56.0527 588.5 55.5 588.5 cv
53.291 588.5 51.5 590.291 51.5 592.5 cv
51.5 594.709 53.291 596.5 55.5 596.5 cv
62.6855 596.5 68.5 593 68.5 585.5 cv
68.5 582.187 65.8135 579.5 62.5 579.5 cv
cp
@
65.5 585.5 mo
65.5 587.157 64.1567 588.5 62.5 588.5 cv
60.8433 588.5 59.5 587.157 59.5 585.5 cv
59.5 583.843 60.8433 582.5 62.5 582.5 cv
64.1567 582.5 65.5 583.843 65.5 585.5 cv
cp
@
56.5 592.5 mo
56.5 593.053 56.0522 593.5 55.5 593.5 cv
54.9478 593.5 54.5 593.053 54.5 592.5 cv
54.5 591.947 54.9478 591.5 55.5 591.5 cv
56.0522 591.5 56.5 591.947 56.5 592.5 cv
cp
@
61.5 591.5 mo
61.5 592.053 61.0522 592.5 60.5 592.5 cv
59.9478 592.5 59.5 592.053 59.5 591.5 cv
59.5 590.947 59.9478 590.5 60.5 590.5 cv
61.0522 590.5 61.5 590.947 61.5 591.5 cv
cp
@
160.5 536 mo
160.5 538.485 158.485 540.5 156 540.5 cv
153.515 540.5 151.5 538.485 151.5 536 cv
151.5 533.515 153.515 531.5 156 531.5 cv
158.485 531.5 160.5 533.515 160.5 536 cv
cp
@
156.5 536 mo
156.5 536.276 156.276 536.5 156 536.5 cv
155.724 536.5 155.5 536.276 155.5 536 cv
155.5 535.724 155.724 535.5 156 535.5 cv
156.276 535.5 156.5 535.724 156.5 536 cv
cp
@
152.5 538.797 mo
152.5 543.5 li
@
159.5 551.5 mo
159.5 538.797 li
@
153.5 547.5 mo
151.5 547.5 li
151.5 543.5 li
153.5 543.5 li
153.5 547.5 li
cp
@
152.5 547.5 mo
152.5 551.5 li
153.5 550.5 li
151.5 550.5 li
152.5 551.5 li
@
156 531.5 mo
156 528.5 li
@
152.5 528.5 mo
159.5 528.5 li
@
23.5 588 mo
23.5 594.352 18.3511 599.5 12 599.5 cv
5.64893 599.5 .500001 594.352 .500001 588 cv
.500001 581.648 5.64893 576.5 12 576.5 cv
18.3511 576.5 23.5 581.648 23.5 588 cv
cp
@
12 576.5 mo
12 588 li
@
12 588 mo
20.1318 596.132 li
@
12 588 mo
23.5 588 li
@
340 639.5 mo
340 637.5 li
340 636.672 340.672 636 341.5 636 cv
354.5 636 li
355.328 636 356 636.672 356 637.5 cv
356 639.5 li
@
348 632.5 mo
348 636 li
@
351.5 629 mo
351.5 630.933 349.933 632.5 348 632.5 cv
346.067 632.5 344.5 630.933 344.5 629 cv
344.5 627.067 346.067 625.5 348 625.5 cv
349.933 625.5 351.5 627.067 351.5 629 cv
cp
@
343.5 643 mo
343.5 644.933 341.933 646.5 340 646.5 cv
338.067 646.5 336.5 644.933 336.5 643 cv
336.5 641.067 338.067 639.5 340 639.5 cv
341.933 639.5 343.5 641.067 343.5 643 cv
cp
@
359.5 643 mo
359.5 644.933 357.933 646.5 356 646.5 cv
354.067 646.5 352.5 644.933 352.5 643 cv
352.5 641.067 354.067 639.5 356 639.5 cv
357.933 639.5 359.5 641.067 359.5 643 cv
cp
@
2.5 311.5 mo
2.5 288.5 li
@
23.5 309.5 mo
.500001 309.5 li
@
2.5 308.5 mo
6.5 304.5 li
9.5 306.5 li
14.5 303.5 li
18.5 303.5 li
22.5 300 li
@
2.5 303.5 mo
6.5 301.5 li
9.5 302.5 li
14.5 296.5 li
18.5 297.5 li
22.5 295.5 li
@
2.5 298.5 mo
6.5 298.5 li
9.5 294.5 li
14.5 291.5 li
18.5 292.5 li
22.5 289.5 li
22.5 309.5 li
@
260.609 348 mo
260.609 347.5 260.558 347.014 260.475 346.538 cv
263.219 344.242 li
260.919 340.258 li
257.563 341.484 li
256.816 340.858 255.958 340.366 255.026 340.024 cv
254.409 336.5 li
249.81 336.5 li
249.192 340.024 li
248.26 340.366 247.401 340.858 246.655 341.484 cv
243.3 340.258 li
241 344.242 li
243.744 346.538 li
243.661 347.014 243.609 347.5 243.609 348 cv
243.609 348.5 243.661 348.986 243.744 349.462 cv
241 351.758 li
243.3 355.742 li
246.655 354.516 li
247.401 355.142 248.26 355.634 249.192 355.976 cv
249.81 359.5 li
254.409 359.5 li
255.026 355.976 li
255.958 355.634 256.816 355.142 257.563 354.516 cv
260.919 355.742 li
263.219 351.758 li
260.475 349.462 li
260.558 348.986 260.609 348.5 260.609 348 cv
cp
@
256.5 348 mo
256.5 350.485 254.485 352.5 252 352.5 cv
249.515 352.5 247.5 350.485 247.5 348 cv
247.5 345.515 249.515 343.5 252 343.5 cv
254.485 343.5 256.5 345.515 256.5 348 cv
cp
@
165.5 586.5 mo
146.5 586.5 li
146.5 597 li
146.5 597.828 147.171 598.5 148 598.5 cv
164 598.5 li
164.829 598.5 165.5 597.828 165.5 597 cv
165.5 586.5 li
cp
@
166.5 583.5 mo
162.5 577.5 li
149.5 577.5 li
145.5 583.5 li
166.5 583.5 li
cp
@
166.5 586.5 mo
145.5 586.5 li
145.5 583.5 li
166.5 583.5 li
166.5 586.5 li
cp
@
160 591.5 mo
152 591.5 li
151.171 591.5 150.5 590.828 150.5 590 cv
150.5 590 li
150.5 589.172 151.171 588.5 152 588.5 cv
160 588.5 li
160.829 588.5 161.5 589.172 161.5 590 cv
161.5 590 li
161.5 590.828 160.829 591.5 160 591.5 cv
cp
@
305.667 391.5 mo
307.231 391.5 308.5 392.172 308.5 393 cv
308.5 388.306 304.694 384.5 300 384.5 cv
295.306 384.5 291.5 388.306 291.5 393 cv
291.5 392.172 292.769 391.5 294.333 391.5 cv
295.898 391.5 297.167 392.172 297.167 393 cv
297.167 392.172 298.436 391.5 300 391.5 cv
301.564 391.5 302.833 392.172 302.833 393 cv
302.833 392.172 304.102 391.5 305.667 391.5 cv
cp
@
304.5 407.5 mo
295.5 407.5 li
295.5 398.5 li
304.5 398.5 li
304.5 407.5 li
cp
@
296 405.5 mo
301 400.5 li
@
299 405.5 mo
304 400.5 li
@
295.5 400.5 mo
304.5 400.5 li
@
295.5 405.5 mo
304.5 405.5 li
@
291.5 393 mo
300 398.5 li
308.5 393 li
@
297.167 393 mo
300 398.5 li
302.833 393 li
@
297.167 393 mo
297.167 388.306 298.436 384.5 300 384.5 cv
301.564 384.5 302.833 388.306 302.833 393 cv
@
244.5 595.5 mo
241.5 595.5 li
241.5 592.5 li
244.5 592.5 li
244.5 595.5 li
cp
@
253.5 595.5 mo
250.5 595.5 li
250.5 592.5 li
253.5 592.5 li
253.5 595.5 li
cp
@
262.5 595.5 mo
259.5 595.5 li
259.5 592.5 li
262.5 592.5 li
262.5 595.5 li
cp
@
244.5 589.5 mo
241.5 589.5 li
241.5 586.5 li
244.5 586.5 li
244.5 589.5 li
cp
@
253.5 589.5 mo
250.5 589.5 li
250.5 586.5 li
253.5 586.5 li
253.5 589.5 li
cp
@
262.5 589.5 mo
259.5 589.5 li
259.5 586.5 li
262.5 586.5 li
262.5 589.5 li
cp
@
244.5 583.5 mo
241.5 583.5 li
241.5 580.5 li
244.5 580.5 li
244.5 583.5 li
cp
@
253.5 583.5 mo
250.5 583.5 li
250.5 580.5 li
253.5 580.5 li
253.5 583.5 li
cp
@
262.5 583.5 mo
259.5 583.5 li
259.5 580.5 li
262.5 580.5 li
262.5 583.5 li
cp
@
241.5 580.5 mo
241.5 577.5 li
262.5 577.5 li
262.5 580.5 li
241.5 580.5 li
cp
@
241.5 586.5 mo
241.5 583.5 li
262.5 583.5 li
262.5 586.5 li
241.5 586.5 li
cp
@
241.5 592.5 mo
241.5 589.5 li
262.5 589.5 li
262.5 592.5 li
241.5 592.5 li
cp
@
241.5 598.5 mo
241.5 595.5 li
262.5 595.5 li
262.5 598.5 li
241.5 598.5 li
cp
@
196.5 590.5 mo
196.5 590.5 201 590.042 201 588 cv
201 585.958 196.5 585.5 196.5 585.5 cv
@
205.5 591.5 mo
205.5 591.5 206.5 590.042 206.5 588 cv
206.5 585.958 205.5 584.5 205.5 584.5 cv
202 584.5 li
202 584.5 201 585.958 201 588 cv
201 590.042 202 591.5 202 591.5 cv
205.5 591.5 li
cp
@
211 590.5 mo
211 590.5 206.5 590.042 206.5 588 cv
206.5 585.958 211 585.5 211 585.5 cv
@
202 591.5 mo
201.5 592 195.5 595.5 194 595.5 cv
192.5 595.5 192.5 589.5 192.5 588 cv
192.5 586.5 192.5 580.5 194 580.5 cv
195.5 580.5 201.5 584 202 584.5 cv
@
205.5 591.5 mo
206.026 592 212.342 595.5 213.921 595.5 cv
215.5 595.5 215.5 589.5 215.5 588 cv
215.5 586.5 215.5 580.5 213.921 580.5 cv
212.342 580.5 206.026 584 205.5 584.5 cv
@
388.5 548.5 mo
388.5 546.813 389.5 544.188 389.5 542 cv
389.5 539.813 387.5 531.875 387.5 530.5 cv
387.5 528.5 li
397.5 528.5 li
397.5 528.5 397.5 530 397.5 530.5 cv
397.5 534 395.531 543.531 398 546 cv
399.595 547.595 401.843 548.173 403.233 548.382 cv
403.965 548.491 404.5 549.122 404.5 549.862 cv
404.5 550.5 li
404.5 551.053 404.053 551.5 403.5 551.5 cv
397.5 551.5 li
394.771 551.5 388.5 548.5 388.5 548.5 cv
cp
@
403.5 551.5 mo
404.5 551.5 li
@
388.5 548.5 mo
388.5 550.5 li
388.5 551.053 388.947 551.5 389.5 551.5 cv
392.5 551.5 li
392.5 550.202 li
@
387.516 579.516 mo
387.797 579.892 388.516 584.018 388.516 585.516 cv
388.516 591.479 li
388.516 591.842 388.705 592.183 389.024 592.352 cv
389.858 592.794 391.854 593.516 396.016 593.516 cv
400.176 593.516 402.173 592.794 403.006 592.352 cv
403.326 592.183 403.516 591.842 403.516 591.479 cv
403.516 585.516 li
403.516 584.018 404.233 579.892 404.516 579.516 cv
@
388.516 589.516 mo
388.516 589.516 390.016 590.516 396.016 590.516 cv
402.016 590.516 403.516 589.516 403.516 589.516 cv
@
388.516 587.845 mo
385.889 588.3 384.516 589.389 384.516 592.016 cv
384.516 594.777 389.516 597.516 396.016 597.516 cv
402.516 597.516 407.516 594.777 407.516 592.016 cv
407.516 589.389 406.143 588.3 403.516 587.845 cv
@
404.516 579.516 mo
404.516 580.067 400.71 580.516 396.016 580.516 cv
391.321 580.516 387.516 580.067 387.516 579.516 cv
387.516 578.963 391.321 578.516 396.016 578.516 cv
400.71 578.516 404.516 578.963 404.516 579.516 cv
cp
@
453 625.5 mo
435 625.5 li
434.172 625.5 433.5 626.172 433.5 627 cv
433.5 646.5 li
438.5 641.5 li
453 641.5 li
453.828 641.5 454.5 640.828 454.5 640 cv
454.5 627 li
454.5 626.172 453.828 625.5 453 625.5 cv
cp
@
444.5 634 mo
444.5 634.276 444.276 634.5 444 634.5 cv
443.724 634.5 443.5 634.276 443.5 634 cv
443.5 633.724 443.724 633.5 444 633.5 cv
444.276 633.5 444.5 633.724 444.5 634 cv
cp
@
439.5 634 mo
439.5 634.276 439.276 634.5 439 634.5 cv
438.724 634.5 438.5 634.276 438.5 634 cv
438.5 633.724 438.724 633.5 439 633.5 cv
439.276 633.5 439.5 633.724 439.5 634 cv
cp
@
449.5 634 mo
449.5 634.276 449.276 634.5 449 634.5 cv
448.724 634.5 448.5 634.276 448.5 634 cv
448.5 633.724 448.724 633.5 449 633.5 cv
449.276 633.5 449.5 633.724 449.5 634 cv
cp
@
444 578.5 mo
437.648 578.5 432.5 582.082 432.5 586.5 cv
432.5 588.902 434.029 591.052 436.439 592.518 cv
436.032 596.224 433.5 597.5 433.5 597.5 cv
433.5 597.5 438.121 597.49 442.357 594.409 cv
442.896 594.463 443.44 594.5 444 594.5 cv
450.352 594.5 455.5 590.918 455.5 586.5 cv
455.5 582.082 450.352 578.5 444 578.5 cv
cp
@
344.946 580.066 mo
339.7 581.64 li
338.988 581.854 338.5 582.509 338.5 583.253 cv
338.5 583.417 338.523 583.58 338.571 583.736 cv
342.64 597.3 li
342.854 598.012 343.509 598.5 344.253 598.5 cv
344.417 598.5 344.58 598.477 344.736 598.429 cv
358.3 594.36 li
359.012 594.146 359.5 593.49 359.5 592.747 cv
359.5 592.583 359.477 592.42 359.429 592.264 cv
355.36 578.7 li
355.146 577.987 354.491 577.5 353.747 577.5 cv
353.583 577.5 353.42 577.523 353.264 577.571 cv
347.467 579.31 li
@
344.587 579.5 mo
338 579.5 li
337.172 579.5 336.5 580.172 336.5 581 cv
336.5 596 li
336.5 596.828 337.172 597.5 338 597.5 cv
342.714 597.5 li
@
347.5 579 mo
347.5 579.828 346.828 580.5 346 580.5 cv
345.172 580.5 344.5 579.828 344.5 579 cv
344.5 578.172 345.172 577.5 346 577.5 cv
346.828 577.5 347.5 578.172 347.5 579 cv
cp
@
346.713 580.32 mo
347.5 581.5 li
@
395.5 639.5 mo
406.061 629.061 li
406.332 628.789 406.5 628.414 406.5 628 cv
406.5 627.586 406.332 627.211 406.061 626.939 cv
405.061 625.939 li
404.789 625.668 404.414 625.5 404 625.5 cv
403.586 625.5 403.211 625.668 402.939 625.939 cv
392.5 636.5 li
390.5 641.5 li
395.5 639.5 li
cp
@
402 627 mo
405 630 li
@
392.5 636.5 mo
394 636.5 li
394.5 637.5 li
395.5 638 li
396 639 li
@
391 640.5 mo
391.5 641 li
@
403.453 628.547 mo
394.5 637.5 li
@
389.5 628 mo
389.5 628.276 389.276 628.5 389 628.5 cv
388.724 628.5 388.5 628.276 388.5 628 cv
388.5 627.724 388.724 627.5 389 627.5 cv
389.276 627.5 389.5 627.724 389.5 628 cv
cp
@
389 628 mo
389 625.5 li
@
393.5 628 mo
393.5 628.276 393.276 628.5 393 628.5 cv
392.724 628.5 392.5 628.276 392.5 628 cv
392.5 627.724 392.724 627.5 393 627.5 cv
393.276 627.5 393.5 627.724 393.5 628 cv
cp
@
393 628 mo
393 625.5 li
@
397.5 628 mo
397.5 628.276 397.276 628.5 397 628.5 cv
396.724 628.5 396.5 628.276 396.5 628 cv
396.5 627.724 396.724 627.5 397 627.5 cv
397.276 627.5 397.5 627.724 397.5 628 cv
cp
@
397 628 mo
397 625.5 li
@
400.5 628.407 mo
400.5 627 li
400.5 626.172 399.907 625.5 399.177 625.5 cv
386.823 625.5 li
386.093 625.5 385.5 626.172 385.5 627 cv
385.5 645 li
385.5 645.828 386.093 646.5 386.823 646.5 cv
399.177 646.5 li
399.907 646.5 400.5 645.828 400.5 645 cv
400.5 634.558 li
@
305.5 631.5 mo
300 631.5 li
298.999 630.5 li
294.5 630.5 li
293.947 630.5 293.5 630.947 293.5 631.5 cv
293.5 631.5 li
293.5 640.5 li
293.5 641.053 293.947 641.5 294.5 641.5 cv
305.5 641.5 li
306.053 641.5 306.5 641.053 306.5 640.5 cv
306.5 632.5 li
306.5 631.947 306.053 631.5 305.5 631.5 cv
cp
@
303 647.091 mo
307.894 645.77 311.5 641.312 311.5 636 cv
311.5 629.648 306.352 624.5 300 624.5 cv
302.5 626.5 li
@
297 624.909 mo
292.106 626.23 288.5 630.688 288.5 636 cv
288.5 642.352 293.648 647.5 300 647.5 cv
297.5 645.5 li
@
104 634.5 mo
106.023 634.5 107.044 635.5 108.083 635.5 cv
109.123 635.5 109.432 635 111 635 cv
@
101.498 642.5 mo
114.5 642.5 li
@
101.513 637.201 mo
101.5 644.998 li
101.499 645.827 102.17 646.5 103 646.5 cv
113 646.5 li
113.829 646.5 114.5 645.828 114.5 645 cv
114.5 636.197 li
@
112.731 636.5 mo
115.363 636.5 118.5 634.334 118.5 631 cv
118.5 626.909 115.615 625.5 112.731 625.5 cv
111.011 625.5 108.848 626.157 106.912 627.227 cv
@
112.5 630.9 mo
110.3 628.322 106.154 626.5 103.269 626.5 cv
100.385 626.5 97.5 627.909 97.5 632 cv
97.5 635.334 100.637 637.5 103.269 637.5 cv
@
157.5 252.5 mo
156 252.5 li
155.171 252.5 154.5 253.172 154.5 254 cv
154.5 254 li
154.5 254.828 155.171 255.5 156 255.5 cv
156 255.5 li
156.829 255.5 157.5 256.172 157.5 257 cv
157.5 257 li
157.5 257.828 156.829 258.5 156 258.5 cv
154.5 258.5 li
@
161.5 261 mo
161.5 261.828 160.829 262.5 160 262.5 cv
152 262.5 li
151.171 262.5 150.5 261.828 150.5 261 cv
150.5 261 li
151.5 248.5 li
160.5 248.5 li
161.5 261 li
161.5 261 li
cp
@
151.5 246 mo
151.5 243.515 153.515 241.5 156 241.5 cv
158.485 241.5 160.5 243.515 160.5 246 cv
@
160.5 248.5 mo
151.5 248.5 li
150.948 248.5 150.5 248.053 150.5 247.5 cv
150.5 247.5 li
150.5 246.947 150.948 246.5 151.5 246.5 cv
160.5 246.5 li
161.052 246.5 161.5 246.947 161.5 247.5 cv
161.5 247.5 li
161.5 248.053 161.052 248.5 160.5 248.5 cv
cp
@
155.5 243.5 mo
155.5 243.776 155.276 244 155 244 cv
154.724 244 154.5 243.776 154.5 243.5 cv
154.5 243.224 154.724 243 155 243 cv
155.276 243 155.5 243.224 155.5 243.5 cv
cp
f
157.5 243.5 mo
157.5 243.776 157.276 244 157 244 cv
156.724 244 156.5 243.776 156.5 243.5 cv
156.5 243.224 156.724 243 157 243 cv
157.276 243 157.5 243.224 157.5 243.5 cv
cp
f
156.5 242 mo
156.5 242.276 156.276 242.5 156 242.5 cv
155.724 242.5 155.5 242.276 155.5 242 cv
155.5 241.724 155.724 241.5 156 241.5 cv
156.276 241.5 156.5 241.724 156.5 242 cv
cp
f
250 634.5 mo
250 634.776 249.776 635 249.5 635 cv
249.224 635 249 634.776 249 634.5 cv
249 634.224 249.224 634 249.5 634 cv
249.776 634 250 634.224 250 634.5 cv
cp
f
250 633 mo
250 633.276 249.776 633.5 249.5 633.5 cv
249.224 633.5 249 633.276 249 633 cv
249 632.724 249.224 632.5 249.5 632.5 cv
249.776 632.5 250 632.724 250 633 cv
cp
f
250 636 mo
250 636.276 249.776 636.5 249.5 636.5 cv
249.224 636.5 249 636.276 249 636 cv
249 635.724 249.224 635.5 249.5 635.5 cv
249.776 635.5 250 635.724 250 636 cv
cp
f
251 635 mo
250.724 635 250.5 634.776 250.5 634.5 cv
250.5 634.224 250.724 634 251 634 cv
251.276 634 251.5 634.224 251.5 634.5 cv
251.5 634.776 251.276 635 251 635 cv
cp
f
248 635 mo
247.724 635 247.5 634.776 247.5 634.5 cv
247.5 634.224 247.724 634 248 634 cv
248.276 634 248.5 634.224 248.5 634.5 cv
248.5 634.776 248.276 635 248 635 cv
cp
f
250 642.5 mo
250 642.776 249.776 643 249.5 643 cv
249.224 643 249 642.776 249 642.5 cv
249 642.224 249.224 642 249.5 642 cv
249.776 642 250 642.224 250 642.5 cv
cp
f
250 641 mo
250 641.276 249.776 641.5 249.5 641.5 cv
249.224 641.5 249 641.276 249 641 cv
249 640.724 249.224 640.5 249.5 640.5 cv
249.776 640.5 250 640.724 250 641 cv
cp
f
250 644 mo
250 644.276 249.776 644.5 249.5 644.5 cv
249.224 644.5 249 644.276 249 644 cv
249 643.724 249.224 643.5 249.5 643.5 cv
249.776 643.5 250 643.724 250 644 cv
cp
f
251 643 mo
250.724 643 250.5 642.776 250.5 642.5 cv
250.5 642.224 250.724 642 251 642 cv
251.276 642 251.5 642.224 251.5 642.5 cv
251.5 642.776 251.276 643 251 643 cv
cp
f
248 643 mo
247.724 643 247.5 642.776 247.5 642.5 cv
247.5 642.224 247.724 642 248 642 cv
248.276 642 248.5 642.224 248.5 642.5 cv
248.5 642.776 248.276 643 248 643 cv
cp
f
250 641 mo
250 641.276 249.776 641.5 249.5 641.5 cv
249.224 641.5 249 641.276 249 641 cv
249 640.724 249.224 640.5 249.5 640.5 cv
249.776 640.5 250 640.724 250 641 cv
cp
f
250 644 mo
250 644.276 249.776 644.5 249.5 644.5 cv
249.224 644.5 249 644.276 249 644 cv
249 643.724 249.224 643.5 249.5 643.5 cv
249.776 643.5 250 643.724 250 644 cv
cp
f
251 643 mo
250.724 643 250.5 642.776 250.5 642.5 cv
250.5 642.224 250.724 642 251 642 cv
251.276 642 251.5 642.224 251.5 642.5 cv
251.5 642.776 251.276 643 251 643 cv
cp
f
248 643 mo
247.724 643 247.5 642.776 247.5 642.5 cv
247.5 642.224 247.724 642 248 642 cv
248.276 642 248.5 642.224 248.5 642.5 cv
248.5 642.776 248.276 643 248 643 cv
cp
f
256.421 637.5 mo
255.934 634.109 253.025 631.5 249.5 631.5 cv
245.975 631.5 243.066 634.109 242.579 637.5 cv
256.421 637.5 li
cp
@
242.579 639.5 mo
243.066 642.891 245.975 645.5 249.5 645.5 cv
253.025 645.5 255.934 642.891 256.421 639.5 cv
242.579 639.5 li
cp
@
256.5 639.5 mo
242.5 639.5 li
241.947 639.5 241.5 639.053 241.5 638.5 cv
241.5 638.5 li
241.5 637.947 241.947 637.5 242.5 637.5 cv
256.5 637.5 li
257.053 637.5 257.5 637.947 257.5 638.5 cv
257.5 638.5 li
257.5 639.053 257.053 639.5 256.5 639.5 cv
cp
@
262 641 mo
262 641.276 261.776 641.5 261.5 641.5 cv
261.224 641.5 261 641.276 261 641 cv
261 640.724 261.224 640.5 261.5 640.5 cv
261.776 640.5 262 640.724 262 641 cv
cp
@
259.5 644 mo
259.5 644.828 260.172 645.5 261 645.5 cv
261.828 645.5 262.5 644.828 262.5 644 cv
262.5 643.348 262.081 642.799 261.5 642.592 cv
261.5 632.5 li
261.5 629.187 258.813 626.5 255.5 626.5 cv
255.5 626.5 li
252.526 626.5 250.059 628.663 249.583 631.502 cv
@
210 647.5 mo
198 647.5 li
197.171 647.5 196.5 646.828 196.5 646 cv
196.5 633 li
196.5 632.172 197.171 631.5 198 631.5 cv
210 631.5 li
210.829 631.5 211.5 632.172 211.5 633 cv
211.5 646 li
211.5 646.828 210.829 647.5 210 647.5 cv
cp
@
197.5 631.586 mo
197.5 626 li
197.5 625.172 198.171 624.5 199 624.5 cv
209 624.5 li
209.829 624.5 210.5 625.172 210.5 626 cv
210.5 631.586 li
@
202.501 628 mo
202.5 631.5 li
@
203.001 627.5 mo
203.001 628.053 202.777 628 202.501 628 cv
202.225 628 202.001 628.053 202.001 627.5 cv
202.001 626.947 202.224 626.5 202.5 626.5 cv
202.776 626.5 203.001 626.947 203.001 627.5 cv
cp
@
200 628 mo
199.999 631.5 li
@
200.5 627.5 mo
200.5 628.053 200.276 628 200 628 cv
199.724 628 199.5 628.053 199.5 627.5 cv
199.5 626.947 199.723 626.5 199.999 626.5 cv
200.275 626.5 200.5 626.947 200.5 627.5 cv
cp
@
208 628 mo
207.999 631.5 li
@
208.5 627.5 mo
208.5 628.053 208.276 628 208 628 cv
207.724 628 207.5 628.053 207.5 627.5 cv
207.5 626.947 207.723 626.5 207.999 626.5 cv
208.275 626.5 208.5 626.947 208.5 627.5 cv
cp
@
205.5 628 mo
205.499 631.5 li
@
206 627.5 mo
206 628.053 205.776 628 205.5 628 cv
205.224 628 205 628.053 205 627.5 cv
205 626.947 205.223 626.5 205.499 626.5 cv
205.775 626.5 206 626.947 206 627.5 cv
cp
@
207.5 640.125 mo
207.5 641.987 205.931 643.5 204 643.5 cv
202.069 643.5 200.5 641.987 200.5 640.125 cv
200.5 640.062 200.5 639.998 200.504 639.935 cv
200.562 637.997 201.667 637.5 201.667 637.5 cv
201.667 637.5 201.624 639 202.833 639 cv
202.833 638.412 202.915 637.685 203.176 636.948 cv
203.514 636 204.269 635.119 205.167 634.5 cv
205.167 636.75 207.27 637.127 207.479 639.764 cv
207.488 639.883 207.5 639.998 207.5 640.125 cv
cp
@
400 302.5 mo
401.975 305.358 402.254 307.568 402.5 310.5 cv
399.924 309.349 397.975 308.358 396 305.5 cv
396 305.5 li
394.025 308.358 392.076 309.349 389.5 310.5 cv
389.746 307.568 390.025 305.358 392 302.5 cv
392 302.5 li
388.805 301.408 387.338 299.741 385.5 297.521 cv
388.228 296.861 390.305 296.408 393.5 297.5 cv
393.5 297.5 li
393.5 293.967 394.56 292.023 396 289.5 cv
397.44 292.023 398.5 293.967 398.5 297.5 cv
398.5 297.5 li
401.695 296.408 403.772 296.861 406.5 297.521 cv
404.662 299.741 403.195 301.408 400 302.5 cv
400 302.5 li
cp
@
396.2 298 mo
396.2 298.553 396 299 396 299 cv
396 299 395.8 298.553 395.8 298 cv
395.8 297.447 396 297 396 297 cv
396 297 396.2 297.447 396.2 298 cv
cp
@
393.209 299.883 mo
393.734 300.054 394.098 300.382 394.098 300.382 cv
394.098 300.382 393.61 300.434 393.085 300.263 cv
392.56 300.093 392.195 299.764 392.195 299.764 cv
392.195 299.764 392.684 299.712 393.209 299.883 cv
cp
@
394.075 303.31 mo
394.399 302.862 394.824 302.618 394.824 302.618 cv
394.824 302.618 394.723 303.098 394.398 303.545 cv
394.074 303.991 393.648 304.236 393.648 304.236 cv
393.648 304.236 393.75 303.756 394.075 303.31 cv
cp
@
397.602 303.545 mo
397.277 303.098 397.176 302.618 397.176 302.618 cv
397.176 302.618 397.601 302.862 397.925 303.31 cv
398.25 303.756 398.352 304.236 398.352 304.236 cv
398.352 304.236 397.926 303.991 397.602 303.545 cv
cp
@
398.915 300.263 mo
398.39 300.434 397.902 300.382 397.902 300.382 cv
397.902 300.382 398.266 300.054 398.791 299.883 cv
399.316 299.712 399.805 299.764 399.805 299.764 cv
399.805 299.764 399.44 300.093 398.915 300.263 cv
cp
@
19.0874 643.087 mo
16.1226 646.052 12.375 647.569 8.99951 647.498 cv
6.68115 647.448 4.53809 646.649 2.94385 645.056 cv
1.35059 643.462 .551759 641.319 .502443 639.001 cv
.430666 635.625 1.94776 631.878 4.9126 628.913 cv
7.73194 626.094 11.2583 624.583 14.5 624.503 cv
17.0093 624.441 19.3481 625.236 21.0562 626.944 cv
22.6499 628.538 23.4487 630.682 23.4976 633 cv
23.5688 636.376 22.0518 640.122 19.0874 643.087 cv
cp
@
18.9072 633.796 mo
19.2065 632.742 18.7754 631.355 17.71 630.29 cv
16.6445 629.225 15.2573 628.794 14.2041 629.093 cv
@
20.25 633.25 mo
21.3545 632.146 21.0186 630.019 19.5 628.5 cv
17.9814 626.981 15.8545 626.646 14.75 627.75 cv
13.6455 628.854 13.9814 630.981 15.5 632.5 cv
17.0186 634.019 19.1455 634.354 20.25 633.25 cv
cp
@
2.66944 637 mo
3.11231 634.64 4.40576 632.248 6.32715 630.327 cv
@
11.5 683.5 mo
11.5 683.776 11.2764 684 11 684 cv
10.7236 684 10.5 683.776 10.5 683.5 cv
10.5 683.224 10.7236 683 11 683 cv
11.2764 683 11.5 683.224 11.5 683.5 cv
cp
f
7.5 683.5 mo
7.5 683.776 7.27637 684 7 684 cv
6.72363 684 6.5 683.776 6.5 683.5 cv
6.5 683.224 6.72363 683 7 683 cv
7.27637 683 7.5 683.224 7.5 683.5 cv
cp
f
5.5 688.5 mo
5.5 688.776 5.27637 689 5 689 cv
4.72363 689 4.5 688.776 4.5 688.5 cv
4.5 688.224 4.72363 688 5 688 cv
5.27637 688 5.5 688.224 5.5 688.5 cv
cp
f
10 682.5 mo
10 682.776 9.77637 683 9.5 683 cv
9.22363 683 9 682.776 9 682.5 cv
9 682.224 9.22363 682 9.5 682 cv
9.77637 682 10 682.224 10 682.5 cv
cp
f
14.5 686.5 mo
14.5 686.776 14.2764 687 14 687 cv
13.7236 687 13.5 686.776 13.5 686.5 cv
13.5 686.224 13.7236 686 14 686 cv
14.2764 686 14.5 686.224 14.5 686.5 cv
cp
f
12.5 687.5 mo
12.5 687.776 12.2764 688 12 688 cv
11.7236 688 11.5 687.776 11.5 687.5 cv
11.5 687.224 11.7236 687 12 687 cv
12.2764 687 12.5 687.224 12.5 687.5 cv
cp
f
8.5 688.5 mo
8.5 688.776 8.27637 689 8 689 cv
7.72363 689 7.5 688.776 7.5 688.5 cv
7.5 688.224 7.72363 688 8 688 cv
8.27637 688 8.5 688.224 8.5 688.5 cv
cp
f
7 689.5 mo
7 689.776 6.77637 690 6.5 690 cv
6.22363 690 6 689.776 6 689.5 cv
6 689.224 6.22363 689 6.5 689 cv
6.77637 689 7 689.224 7 689.5 cv
cp
f
7 686.5 mo
7 686.776 6.77637 687 6.5 687 cv
6.22363 687 6 686.776 6 686.5 cv
6 686.224 6.22363 686 6.5 686 cv
6.77637 686 7 686.224 7 686.5 cv
cp
f
12.5 685.5 mo
12.5 685.776 12.2764 686 12 686 cv
11.7236 686 11.5 685.776 11.5 685.5 cv
11.5 685.224 11.7236 685 12 685 cv
12.2764 685 12.5 685.224 12.5 685.5 cv
cp
f
12.5 689.5 mo
12.5 689.776 12.2764 690 12 690 cv
11.7236 690 11.5 689.776 11.5 689.5 cv
11.5 689.224 11.7236 689 12 689 cv
12.2764 689 12.5 689.224 12.5 689.5 cv
cp
f
12 692 mo
12 692.276 11.7764 692.5 11.5 692.5 cv
11.2236 692.5 11 692.276 11 692 cv
11 691.724 11.2236 691.5 11.5 691.5 cv
11.7764 691.5 12 691.724 12 692 cv
cp
f
14.5 688.5 mo
14.5 688.776 14.2764 689 14 689 cv
13.7236 689 13.5 688.776 13.5 688.5 cv
13.5 688.224 13.7236 688 14 688 cv
14.2764 688 14.5 688.224 14.5 688.5 cv
cp
f
13.5 682.5 mo
13.5 682.776 13.2764 683 13 683 cv
12.7236 683 12.5 682.776 12.5 682.5 cv
12.5 682.224 12.7236 682 13 682 cv
13.2764 682 13.5 682.224 13.5 682.5 cv
cp
f
13.5 680.5 mo
13.5 680.776 13.2764 681 13 681 cv
12.7236 681 12.5 680.776 12.5 680.5 cv
12.5 680.224 12.7236 680 13 680 cv
13.2764 680 13.5 680.224 13.5 680.5 cv
cp
f
11.5 680.5 mo
11.5 680.776 11.2764 681 11 681 cv
10.7236 681 10.5 680.776 10.5 680.5 cv
10.5 680.224 10.7236 680 11 680 cv
11.2764 680 11.5 680.224 11.5 680.5 cv
cp
f
10.5 687.5 mo
10.5 687.776 10.2764 688 10 688 cv
9.72363 688 9.5 687.776 9.5 687.5 cv
9.5 687.224 9.72363 687 10 687 cv
10.2764 687 10.5 687.224 10.5 687.5 cv
cp
f
14.5 690.5 mo
14.5 690.776 14.2764 691 14 691 cv
13.7236 691 13.5 690.776 13.5 690.5 cv
13.5 690.224 13.7236 690 14 690 cv
14.2764 690 14.5 690.224 14.5 690.5 cv
cp
f
16.5 691.5 mo
16.5 691.776 16.2764 692 16 692 cv
15.7236 692 15.5 691.776 15.5 691.5 cv
15.5 691.224 15.7236 691 16 691 cv
16.2764 691 16.5 691.224 16.5 691.5 cv
cp
f
10.5 690.5 mo
10.5 690.776 10.2764 691 10 691 cv
9.72363 691 9.5 690.776 9.5 690.5 cv
9.5 690.224 9.72363 690 10 690 cv
10.2764 690 10.5 690.224 10.5 690.5 cv
cp
f
8.5 691.5 mo
8.5 691.776 8.27637 692 8 692 cv
7.72363 692 7.5 691.776 7.5 691.5 cv
7.5 691.224 7.72363 691 8 691 cv
8.27637 691 8.5 691.224 8.5 691.5 cv
cp
f
15.5 684.5 mo
15.5 684.776 15.2764 685 15 685 cv
14.7236 685 14.5 684.776 14.5 684.5 cv
14.5 684.224 14.7236 684 15 684 cv
15.2764 684 15.5 684.224 15.5 684.5 cv
cp
f
16 682 mo
16 682.276 15.7764 682.5 15.5 682.5 cv
15.2236 682.5 15 682.276 15 682 cv
15 681.724 15.2236 681.5 15.5 681.5 cv
15.7764 681.5 16 681.724 16 682 cv
cp
f
16.5 687.5 mo
16.5 687.776 16.2764 688 16 688 cv
15.7236 688 15.5 687.776 15.5 687.5 cv
15.5 687.224 15.7236 687 16 687 cv
16.2764 687 16.5 687.224 16.5 687.5 cv
cp
f
19 687.5 mo
19 687.776 18.7764 688 18.5 688 cv
18.2236 688 18 687.776 18 687.5 cv
18 687.224 18.2236 687 18.5 687 cv
18.7764 687 19 687.224 19 687.5 cv
cp
f
17.5 685.5 mo
17.5 685.776 17.2764 686 17 686 cv
16.7236 686 16.5 685.776 16.5 685.5 cv
16.5 685.224 16.7236 685 17 685 cv
17.2764 685 17.5 685.224 17.5 685.5 cv
cp
f
17.5 683.5 mo
17.5 683.776 17.2764 684 17 684 cv
16.7236 684 16.5 683.776 16.5 683.5 cv
16.5 683.224 16.7236 683 17 683 cv
17.2764 683 17.5 683.224 17.5 683.5 cv
cp
f
16.5 689.5 mo
16.5 689.776 16.2764 690 16 690 cv
15.7236 690 15.5 689.776 15.5 689.5 cv
15.5 689.224 15.7236 689 16 689 cv
16.2764 689 16.5 689.224 16.5 689.5 cv
cp
f
19 689.5 mo
19 689.776 18.7764 690 18.5 690 cv
18.2236 690 18 689.776 18 689.5 cv
18 689.224 18.2236 689 18.5 689 cv
18.7764 689 19 689.224 19 689.5 cv
cp
f
9.5 685.5 mo
9.5 685.776 9.27637 686 9 686 cv
8.72363 686 8.5 685.776 8.5 685.5 cv
8.5 685.224 8.72363 685 9 685 cv
9.27637 685 9.5 685.224 9.5 685.5 cv
cp
f
9 684 mo
9 684.276 8.77637 684.5 8.5 684.5 cv
8.22363 684.5 8 684.276 8 684 cv
8 683.724 8.22363 683.5 8.5 683.5 cv
8.77637 683.5 9 683.724 9 684 cv
cp
f
6.5 685 mo
6.5 685.276 6.27637 685.5 6 685.5 cv
5.72363 685.5 5.5 685.276 5.5 685 cv
5.5 684.724 5.72363 684.5 6 684.5 cv
6.27637 684.5 6.5 684.724 6.5 685 cv
cp
f
13.1187 672.781 mo
13.127 672.598 13.0762 672.5 13 672.5 cv
11.9707 672.506 10.5171 672.927 10.5 673.5 cv
10.4341 675.723 9.18506 677.733 7.27344 678.87 cv
3.84961 680.905 1.5 684.883 1.5 688.395 cv
1.5 693.365 6.20117 695.5 12 695.5 cv
17.7988 695.5 22.5 693.365 22.5 688.395 cv
22.5 684.819 20.0674 680.756 16.5439 678.755 cv
14.3892 677.531 13.0107 675.257 13.1187 672.781 cv
cp
@
12 692.5 mo
9.74512 692.5 4.5 692.101 4.5 688.395 cv
4.5 685.895 6.35156 682.908 8.80567 681.449 cv
10.042 680.715 11.0781 679.686 11.8506 678.472 cv
12.6699 679.629 13.7578 680.622 15.0615 681.363 cv
17.5918 682.801 19.5 685.823 19.5 688.395 cv
19.5 692.101 14.2549 692.5 12 692.5 cv
cp
@
57.5 676.5 mo
52.5293 676.5 48.5 680.529 48.5 685.5 cv
48.5 688.013 49.5313 690.282 51.1919 691.914 cv
51.5718 692.287 52.0815 692.5 52.6138 692.5 cv
62.3862 692.5 li
62.9185 692.5 63.4282 692.287 63.8081 691.914 cv
65.4688 690.282 66.5 688.013 66.5 685.5 cv
66.5 680.529 62.4707 676.5 57.5 676.5 cv
cp
@
61.5 675.5 mo
61.5 677.436 li
@
49.0132 688.5 mo
65.9868 688.5 li
@
66.2842 687.443 mo
69.2266 687.058 71.5 684.547 71.5 681.5 cv
71.5 678.187 68.8135 675.5 65.5 675.5 cv
48.5 675.5 li
50.5928 676.285 li
51.5674 676.65 51.9478 677.829 51.3701 678.695 cv
50.9106 679.384 li
@
106.466 676.224 mo
106.224 681.446 103.5 681.721 103.5 686.5 cv
103.5 694 li
103.5 694.828 104.171 695.5 105 695.5 cv
111 695.5 li
111.829 695.5 112.5 694.828 112.5 694 cv
112.5 686.5 li
112.5 681.721 109.776 681.446 109.534 676.224 cv
@
108.5 683 mo
108.5 683.276 108.276 683.5 108 683.5 cv
107.724 683.5 107.5 683.276 107.5 683 cv
107.5 682.724 107.724 682.5 108 682.5 cv
108.276 682.5 108.5 682.724 108.5 683 cv
cp
@
112.5 692.5 mo
103.5 692.5 li
103.5 688.5 li
112.5 688.5 li
112.5 692.5 li
cp
@
108.867 676.5 mo
107.133 676.5 li
106.531 676.5 106.066 675.973 106.141 675.376 cv
106.391 673.376 li
106.453 672.876 106.878 672.5 107.383 672.5 cv
108.617 672.5 li
109.122 672.5 109.547 672.876 109.609 673.376 cv
109.859 675.376 li
109.934 675.973 109.469 676.5 108.867 676.5 cv
cp
@
104.418 682.439 mo
105.328 684.192 106.759 686.5 108 686.5 cv
109.241 686.5 110.672 684.192 111.582 682.439 cv
@
240.5 150.5 mo
241.874 150.5 241.874 151.5 243.249 151.5 cv
244.623 151.5 244.623 150.5 245.998 150.5 cv
247.371 150.5 247.371 151.5 248.743 151.5 cv
250.118 151.5 250.118 150.5 251.492 150.5 cv
252.867 150.5 252.867 151.5 254.241 151.5 cv
255.616 151.5 255.616 150.5 256.991 150.5 cv
258.368 150.5 258.368 151.5 259.746 151.5 cv
261.123 151.5 261.123 150.5 262.5 150.5 cv
@
241.5 153.5 mo
241.5 152 240.5 152 240.5 150.5 cv
240.5 149 241.5 149 241.5 147.5 cv
242.874 147.5 242.874 148.5 244.249 148.5 cv
245.623 148.5 245.623 147.5 246.998 147.5 cv
248.371 147.5 248.371 148.5 249.743 148.5 cv
251.118 148.5 251.118 147.5 252.492 147.5 cv
253.867 147.5 253.867 148.5 255.241 148.5 cv
256.616 148.5 256.616 147.5 257.991 147.5 cv
259.368 147.5 259.368 148.5 260.746 148.5 cv
262.123 148.5 262.123 147.5 263.5 147.5 cv
263.5 149 262.5 149 262.5 150.5 cv
262.5 152 263.5 152 263.5 153.5 cv
262.123 153.5 262.123 154.5 260.746 154.5 cv
259.368 154.5 259.368 153.5 257.991 153.5 cv
256.616 153.5 256.616 154.5 255.241 154.5 cv
253.867 154.5 253.867 153.5 252.492 153.5 cv
251.118 153.5 251.118 154.5 249.743 154.5 cv
248.371 154.5 248.371 153.5 246.998 153.5 cv
245.623 153.5 245.623 154.5 244.249 154.5 cv
242.874 154.5 242.874 153.5 241.5 153.5 cv
cp
@
263.5 161.5 mo
262.126 161.5 262.126 160.5 260.751 160.5 cv
259.377 160.5 259.377 161.5 258.002 161.5 cv
256.629 161.5 256.629 160.5 255.257 160.5 cv
253.882 160.5 253.882 161.5 252.508 161.5 cv
251.133 161.5 251.133 160.5 249.759 160.5 cv
248.384 160.5 248.384 161.5 247.009 161.5 cv
245.632 161.5 245.632 160.5 244.254 160.5 cv
242.877 160.5 242.877 161.5 241.5 161.5 cv
@
262.5 158.5 mo
262.5 160 263.5 160 263.5 161.5 cv
263.5 163 262.5 163 262.5 164.5 cv
261.126 164.5 261.126 163.5 259.751 163.5 cv
258.377 163.5 258.377 164.5 257.002 164.5 cv
255.629 164.5 255.629 163.5 254.257 163.5 cv
252.882 163.5 252.882 164.5 251.508 164.5 cv
250.133 164.5 250.133 163.5 248.759 163.5 cv
247.384 163.5 247.384 164.5 246.009 164.5 cv
244.632 164.5 244.632 163.5 243.254 163.5 cv
241.877 163.5 241.877 164.5 240.5 164.5 cv
240.5 163 241.5 163 241.5 161.5 cv
241.5 160 240.5 160 240.5 158.5 cv
241.877 158.5 241.877 157.5 243.254 157.5 cv
244.632 157.5 244.632 158.5 246.009 158.5 cv
247.384 158.5 247.384 157.5 248.759 157.5 cv
250.133 157.5 250.133 158.5 251.508 158.5 cv
252.882 158.5 252.882 157.5 254.257 157.5 cv
255.629 157.5 255.629 158.5 257.002 158.5 cv
258.377 158.5 258.377 157.5 259.751 157.5 cv
261.126 157.5 261.126 158.5 262.5 158.5 cv
cp
@
198.5 678 mo
198.5 678.276 198.276 678.5 198 678.5 cv
197.724 678.5 197.5 678.276 197.5 678 cv
197.5 677.724 197.724 677.5 198 677.5 cv
198.276 677.5 198.5 677.724 198.5 678 cv
cp
@
202.5 678 mo
202.5 678.276 202.276 678.5 202 678.5 cv
201.724 678.5 201.5 678.276 201.5 678 cv
201.5 677.724 201.724 677.5 202 677.5 cv
202.276 677.5 202.5 677.724 202.5 678 cv
cp
@
206.5 678 mo
206.5 678.276 206.276 678.5 206 678.5 cv
205.724 678.5 205.5 678.276 205.5 678 cv
205.5 677.724 205.724 677.5 206 677.5 cv
206.276 677.5 206.5 677.724 206.5 678 cv
cp
@
210.5 678 mo
210.5 678.276 210.276 678.5 210 678.5 cv
209.724 678.5 209.5 678.276 209.5 678 cv
209.5 677.724 209.724 677.5 210 677.5 cv
210.276 677.5 210.5 677.724 210.5 678 cv
cp
@
198.5 682 mo
198.5 682.276 198.276 682.5 198 682.5 cv
197.724 682.5 197.5 682.276 197.5 682 cv
197.5 681.724 197.724 681.5 198 681.5 cv
198.276 681.5 198.5 681.724 198.5 682 cv
cp
@
202.5 682 mo
202.5 682.276 202.276 682.5 202 682.5 cv
201.724 682.5 201.5 682.276 201.5 682 cv
201.5 681.724 201.724 681.5 202 681.5 cv
202.276 681.5 202.5 681.724 202.5 682 cv
cp
@
206.5 682 mo
206.5 682.276 206.276 682.5 206 682.5 cv
205.724 682.5 205.5 682.276 205.5 682 cv
205.5 681.724 205.724 681.5 206 681.5 cv
206.276 681.5 206.5 681.724 206.5 682 cv
cp
@
210.5 682 mo
210.5 682.276 210.276 682.5 210 682.5 cv
209.724 682.5 209.5 682.276 209.5 682 cv
209.5 681.724 209.724 681.5 210 681.5 cv
210.276 681.5 210.5 681.724 210.5 682 cv
cp
@
198.5 686 mo
198.5 686.276 198.276 686.5 198 686.5 cv
197.724 686.5 197.5 686.276 197.5 686 cv
197.5 685.724 197.724 685.5 198 685.5 cv
198.276 685.5 198.5 685.724 198.5 686 cv
cp
@
202.5 686 mo
202.5 686.276 202.276 686.5 202 686.5 cv
201.724 686.5 201.5 686.276 201.5 686 cv
201.5 685.724 201.724 685.5 202 685.5 cv
202.276 685.5 202.5 685.724 202.5 686 cv
cp
@
206.5 686 mo
206.5 686.276 206.276 686.5 206 686.5 cv
205.724 686.5 205.5 686.276 205.5 686 cv
205.5 685.724 205.724 685.5 206 685.5 cv
206.276 685.5 206.5 685.724 206.5 686 cv
cp
@
210.5 686 mo
210.5 686.276 210.276 686.5 210 686.5 cv
209.724 686.5 209.5 686.276 209.5 686 cv
209.5 685.724 209.724 685.5 210 685.5 cv
210.276 685.5 210.5 685.724 210.5 686 cv
cp
@
198.5 690 mo
198.5 690.276 198.276 690.5 198 690.5 cv
197.724 690.5 197.5 690.276 197.5 690 cv
197.5 689.724 197.724 689.5 198 689.5 cv
198.276 689.5 198.5 689.724 198.5 690 cv
cp
@
202.5 690 mo
202.5 690.276 202.276 690.5 202 690.5 cv
201.724 690.5 201.5 690.276 201.5 690 cv
201.5 689.724 201.724 689.5 202 689.5 cv
202.276 689.5 202.5 689.724 202.5 690 cv
cp
@
206.5 690 mo
206.5 690.276 206.276 690.5 206 690.5 cv
205.724 690.5 205.5 690.276 205.5 690 cv
205.5 689.724 205.724 689.5 206 689.5 cv
206.276 689.5 206.5 689.724 206.5 690 cv
cp
@
210.5 690 mo
210.5 690.276 210.276 690.5 210 690.5 cv
209.724 690.5 209.5 690.276 209.5 690 cv
209.5 689.724 209.724 689.5 210 689.5 cv
210.276 689.5 210.5 689.724 210.5 690 cv
cp
@
214.5 679.875 mo
214.5 678.951 213.942 678.159 213.146 677.813 cv
213.942 677.466 214.5 676.674 214.5 675.75 cv
214.5 674.508 213.493 673.5 212.25 673.5 cv
211.326 673.5 210.534 674.058 210.188 674.854 cv
209.841 674.058 209.049 673.5 208.125 673.5 cv
207.201 673.5 206.409 674.058 206.063 674.854 cv
205.716 674.058 204.924 673.5 204 673.5 cv
203.076 673.5 202.284 674.058 201.938 674.854 cv
201.591 674.058 200.799 673.5 199.875 673.5 cv
198.951 673.5 198.159 674.058 197.813 674.854 cv
197.466 674.058 196.674 673.5 195.75 673.5 cv
194.507 673.5 193.5 674.508 193.5 675.75 cv
193.5 676.674 194.058 677.466 194.854 677.813 cv
194.058 678.159 193.5 678.951 193.5 679.875 cv
193.5 680.799 194.058 681.591 194.854 681.938 cv
194.058 682.284 193.5 683.076 193.5 684 cv
193.5 684.924 194.058 685.716 194.854 686.063 cv
194.058 686.409 193.5 687.201 193.5 688.125 cv
193.5 689.049 194.058 689.841 194.854 690.188 cv
194.058 690.534 193.5 691.326 193.5 692.25 cv
193.5 693.492 194.507 694.5 195.75 694.5 cv
196.674 694.5 197.466 693.942 197.813 693.146 cv
198.159 693.942 198.951 694.5 199.875 694.5 cv
200.799 694.5 201.591 693.942 201.938 693.146 cv
202.284 693.942 203.076 694.5 204 694.5 cv
204.924 694.5 205.716 693.942 206.063 693.146 cv
206.409 693.942 207.201 694.5 208.125 694.5 cv
209.049 694.5 209.841 693.942 210.188 693.146 cv
210.534 693.942 211.326 694.5 212.25 694.5 cv
213.493 694.5 214.5 693.492 214.5 692.25 cv
214.5 691.326 213.942 690.534 213.146 690.188 cv
213.942 689.841 214.5 689.049 214.5 688.125 cv
214.5 687.201 213.942 686.409 213.146 686.063 cv
213.942 685.716 214.5 684.924 214.5 684 cv
214.5 683.076 213.942 682.284 213.146 681.938 cv
213.942 681.591 214.5 680.799 214.5 679.875 cv
cp
@
202.5 293.5 mo
197.5 293.5 li
197.5 288.5 li
202.5 288.5 li
202.5 293.5 li
cp
@
207.5 293.5 mo
202.5 293.5 li
202.5 288.5 li
207.5 288.5 li
207.5 293.5 li
cp
@
212.5 298.5 mo
207.5 298.5 li
207.5 293.5 li
212.5 293.5 li
212.5 298.5 li
cp
@
202.5 298.5 mo
197.5 298.5 li
197.5 293.5 li
202.5 293.5 li
202.5 298.5 li
cp
@
207.5 298.5 mo
202.5 298.5 li
202.5 293.5 li
207.5 293.5 li
207.5 298.5 li
cp
@
212.5 299.768 mo
212.5 298.5 li
207.5 298.5 li
207.5 301.424 li
@
202.5 302.266 mo
202.5 298.5 li
197.5 298.5 li
197.5 299.912 li
@
207.5 301.424 mo
207.5 298.5 li
202.5 298.5 li
202.5 302.266 li
@
196.5 299.5 mo
196.5 299.5 204 302.5 204 303.5 cv
205.5 301.5 213.5 299.5 213.5 299.5 cv
213.5 310 li
213.5 310.828 212.829 311.5 212 311.5 cv
198 311.5 li
197.171 311.5 196.5 310.828 196.5 310 cv
196.5 299.5 li
cp
@
213.5 302 mo
211 302 205.5 307.5 205.5 307.5 cv
204 303.5 li
200.5 305.5 li
200.5 305.5 198.5 302 196.5 302 cv
@
300 690.5 mo
301 690.5 301 689.5 305.5 688.5 cv
310 687.5 311.5 683 311.5 677.5 cv
310 679.5 309 678.5 306 678.5 cv
303 678.5 301.5 681.5 300 681.5 cv
298.5 681.5 297 678.5 294 678.5 cv
291 678.5 290 679.5 288.5 677.5 cv
288.5 683 290 687.5 294.5 688.5 cv
299 689.5 299 690.5 300 690.5 cv
cp
@
292 682.5 mo
292 682.5 292.5 682.5 294 682.5 cv
295.5 682.5 297.5 684.056 297.5 684.833 cv
297.5 685.611 297.5 686 297.5 686 cv
294.5 686 292.5 684.056 292 682.5 cv
cp
@
308 682.5 mo
308 682.5 307.5 682.5 306 682.5 cv
304.5 682.5 302.5 684.056 302.5 684.833 cv
302.5 685.611 302.5 686 302.5 686 cv
305.5 686 307.5 684.056 308 682.5 cv
cp
@
353.5 692.5 mo
342.5 692.5 li
340.291 692.5 338.5 690.709 338.5 688.5 cv
338.5 680.5 li
338.5 678.291 340.291 676.5 342.5 676.5 cv
353.5 676.5 li
355.709 676.5 357.5 678.291 357.5 680.5 cv
357.5 688.5 li
357.5 690.709 355.709 692.5 353.5 692.5 cv
cp
@
353.5 692.5 mo
342.5 692.5 li
342.5 695.5 li
353.5 695.5 li
353.5 692.5 li
cp
@
352.5 676.5 mo
343.5 676.5 li
343.5 673.5 li
343.5 672.947 343.947 672.5 344.5 672.5 cv
351.5 672.5 li
352.053 672.5 352.5 672.947 352.5 673.5 cv
352.5 676.5 li
cp
@
344.668 687 mo
345.491 687.914 346.673 688.5 348 688.5 cv
349.327 688.5 350.509 687.914 351.332 687 cv
@
345.5 683 mo
345.5 683.276 345.276 683.5 345 683.5 cv
344.724 683.5 344.5 683.276 344.5 683 cv
344.5 682.724 344.724 682.5 345 682.5 cv
345.276 682.5 345.5 682.724 345.5 683 cv
cp
@
351.5 683 mo
351.5 683.276 351.276 683.5 351 683.5 cv
350.724 683.5 350.5 683.276 350.5 683 cv
350.5 682.724 350.724 682.5 351 682.5 cv
351.276 682.5 351.5 682.724 351.5 683 cv
cp
@
393.5 685.5 mo
389.5 685.5 li
387.291 685.5 385.5 687.291 385.5 689.5 cv
385.5 689.5 li
385.5 691.709 387.291 693.5 389.5 693.5 cv
402.5 693.5 li
404.709 693.5 406.5 691.709 406.5 689.5 cv
406.5 689.5 li
406.5 687.291 404.709 685.5 402.5 685.5 cv
399.5 685.5 li
@
404.347 685.972 mo
404.437 685.661 404.5 685.34 404.5 685 cv
404.5 683.067 402.933 681.5 401 681.5 cv
396.5 681.5 li
@
393.5 681.5 mo
391 681.5 li
389.067 681.5 387.5 683.067 387.5 685 cv
387.5 685.34 387.563 685.661 387.653 685.972 cv
@
395 677.5 mo
393.065 677.5 391.5 679.289 391.5 681.5 cv
@
398.5 674.5 mo
398.5 676.158 396.935 677.5 395 677.5 cv
@
401.5 678.5 mo
401.5 676.289 400.158 674.5 398.5 674.5 cv
@
398.5 681.5 mo
400.158 681.5 401.5 680.158 401.5 678.5 cv
@
444.659 692.467 mo
448.826 692.146 452.146 688.826 452.467 684.659 cv
@
435.533 684.659 mo
435.854 688.826 439.174 692.146 443.341 692.467 cv
@
443.341 675.533 mo
439.174 675.854 435.854 679.174 435.533 683.341 cv
@
452.467 683.341 mo
452.146 679.174 448.826 675.854 444.659 675.533 cv
@
446.835 685.884 mo
455.5 684 li
446.835 682.116 li
@
445.884 681.165 mo
444 672.5 li
442.116 681.165 li
@
442.116 686.835 mo
444 695.5 li
445.884 686.835 li
@
441.165 682.116 mo
432.5 684 li
441.165 685.884 li
@
445.637 684 mo
448.5 679.5 li
444 682.363 li
439.5 679.5 li
442.363 684 li
439.5 688.5 li
444 685.637 li
448.5 688.5 li
445.637 684 li
cp
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 21.0.0
%%For: (Imola-PC) ()
%%Title: (Free Set Line 24.eps)
%%CreationDate: 2/20/2017 2:03 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBm\jLdcgXWSnJ$)A0iB1mgEZ99h7fA!ngWW"rn$u#(!00_u&2l2K&_Ma`J&TiUiOU,aV+QWDolI8YstfUsX*^[<=]Ir"TTY
%@NZk8I"8-i5_P@#pttB%O`m^I]g*25iW'O&!MtcJ^SSAc"k0EKh/:B^%C6u]Ujaf\^o:3:?^/?sWp@ZsJY]GJR\3=ua1l.B?-O:"
%9BcV5."sG0(KC10$VCF&n2JK+?ZI`[<E+<.cjkRFK!2%HmnVY\K']Eao!HJh*s*\7JcpPl]Z`o%pq_eB.uJmS+`UOD5Ka0hL(C'e
%)\>pbQK2S=Tj^MiVIbEIUd-!r+]C5<K9?b3C0g0!9VnX)m3bjgOV;]'MeYbu+$_>d!?1kBJWGAh>#Y9D%hfUqTYSn17K?M=hLR[m
%<([EmW%_lkq1DVQA7o"o+uK54"8;7$r65As!/Kkh'[j2q"p5-1!":afrm2aE3J^##O`4u+C9+*[4Vb4&,77;`-*.OTE@3;F0XqBB
%_LRXLX<L81<0@<qaIo=KV&9@"Y`JWJ;u_d[N`;jTRY4<HB!803%CguPR=H\A,l=mNX6*Ddl[`@U:nEWdiRFg+3hXnMT%+Ro1+jcu
%hZT[LR!#eAf\FjNE#<$bM6ajdoil_'V[Bu&k%R`<Gt2_<N,-qm#fgm](/>bKr$ql0!n7R/(m"dA#rLjN!ECO?!?-)B*a%.!*?p-7
%XD5[\p-1\#^CD>O=TJ'_gskUm3u4M-0Ts'sO?%W#C/no(dV^t'9!82)lT`gk@"<Pd[;??kc+KiI>uR;OSebbZR<CH!Zll8g@58/O
%@N/!jh5HO@:',hG./Ft4bp_W6bQ%gR2FRJ`s3C*ml(t'I_8eplk]_(7RdnGu6A_^><WdWLXTn:8!;a8=#baB"m/:Xc9p!S!<Q,P[
%;+9eeN'UW`WkD#7&1u$&-]"tV9$]3-9W86AbASL(Ys>!#.%*[2:^kc1N$!^\<(r4!:_k@ZJ,PT:Je']p6%F#4m2r?GFBjVVS0*[n
%?"kgdh.bFgr;^1=0WGUT#cRH7IGk=8Xol6=@IXiM=9-r#?WAPg#$:lUG-u*qa%<2jO;aYPMj]%&b(d'A>;eZh:'%S_<mfIWcYcPO
%e\N\'f<r2hF;e=/O>Qjj7\F9/\rD-ZGIuu)Ds.icl*FT?WnBRSj8SjV.fgKg&4gtLAqk*-9+@p.I%7*<MA=Vs_s6`?ZKi[e1K]Pm
%aI0%4"QG5os!^Y3:Ba;U]N-(0;.2E8Zo69D!l_n);k:I0ZoV$e%MTjS7n(nWJh/r2q%p9<\_!rSAF,1C;tskmq@G2$4fCqhgV3hF
%OLdU"T)geUrD%,CW:_S$cS;'OJ^@aU]a[.p5gPg$\_g>:+PQsJ$.DiX@4D^\YF92F5qmlW*"^Kj8,-0S-R9XY$lN`lE`j8!JaFY[
%Tj@DYpn?o";P]&'62KIEi3q(NYb4]3kcH:2RE3&eoM.c!TuW@p<II[IJYkjE[5sn8;8_UpiNLo]iMR2!ISPq,Rdrg66e1I]Se"FE
%^tC't:T`>dpn3AWD>@u;XNADh;=&")Kc/bi>m(E"D*OcA"$Nc;me+g[Yi"1MFZarZe6':ujAR::4=R/]mH]3JU'3M6d28_Tn`5q"
%Y*q5upHBEb5D!nUITjZEj!ed<>N_9Co#'(<EWc1Q2PV0cJ(F,Z3g!Sa2m6KRrk/,@GSY#\;'Y:%NZciY=:En0j2`o8Wi6!9_?VY&
%kd1UF)L\rd*b+HlcOfmjTrH?SA:o#e<T[f&r2*L;gLP[6[aStC&7:fF1M+^K$WCqOat6;tYEH4Gjc"IDj_CXoP[FC5d(0TpDC@6g
%2s,KI*9Yh;o<J9ICq1FT6jm4:@EU6=\J_g:J<c<tJ#I[uTi@"9^W!W]K_Yi'N^"_"h;7,)QbDF;SH">WK,5Bc+SiFgbH._2h-Mt@
%rm9#s?=.lF)gkh2Q1b-TQ0KGp3RcIZ%[DLPX"!GsB^026Dt_"b<BoeJFc$Qk*ub&.:Xpns:]@63bY'Ua<pQd!:M.Kach2?IgK`$E
%Re!_`FOWoi=3Slq*M]aFr=$oj,#csGr6pufg>/>U&UdE:C!ihGFV>h:XItJAIl9b8SfU>ZVs_V*8`6I7S<'uuh7d#j.Vc5_p`mi^
%^6%UZL^Z6NcMOC!bJ,1HB2+frK,FN)I"2(]UFZ>8U0Z+BU12]e'=>NjnF*!:VN+M-[!"+kcO$lLqjLA-$X]JV4*.Cn9^!9pljV,)
%_Qm8fV^7BNgZ=e[$/f;rBT@*S\-E*;c*1d.oHUr9;j:O9BOLec^eTpp5J/h1:(Ig+*/LRS=:H!DlSVj\cd/3R>cimuEPHlnY)=@4
%0#(L.s&%t*g=eTEVfuImFI]@C?%kF%QeIK"M=s*Qj0uI+EQVp6@q2gN9I[m+PGYAZmDDdcqZiPaebSqRqDpF=361ZpP!^nJ0j/p%
%eR5brDe[IDQburiBUG99)Lf\9es@[DlJm'$WDp:>+3hV'S@7!aR%4G?/EgRmRR&aj>Df]S+M>G;,r7c0I29\8+hT-BPK:3m9DTZ^
%Q&e)'q2n^mpb(#P-hn[RK(Uu0ZT^)Z\,5@SG(82k,!R`4N:NaLbj!r4+/b5#akcraA\NFmGih+R_5.\BH)dRFgT"RZFVHgmO$!;-
%O_M((_M;oTEr%s8R214Gc6p.=>ed`]VL0u3O&25B"$ka1Rk+ADX1?Ufr"(Y;X%cd`G''RT_WP9$Q-NVe3R5N7JIatZcd2.AL48tr
%HRut#B#7[e$S;OTo5QNp4tIfu5.13KEPFI9k;6`iI_Y5*<h!t%k%cM[IB*1T\NH5K5()#3o/#]\&G)r8rN+7%+,jAZNL$1MH3e=j
%@nD[.@b`Re[I-\,&@cG:dPffCgn[Q=dVneCfp$\Zj9D1k=f.'UD]b3DWu??pcOX;>kd7;:[C3+13%SE6oEotFe-Ah\kd60*I8$N<
%T?p+GC2.;S:pg`sMRG6&)JVI^)V6fOpNMR"T,o^N<$&LgYUVk)"H4-$?MJ4HWT\g]5CH3JT`+Kse#/dj+fB'X-uH*JCUMjl>qPgU
%J_;6qiZuZ?(hf3'F:uP'1%XD=R,aAY^4p(I-cY-kb'a"n/)TY<au=c)cqh0k\N>`/L]-@HkujNF))<h&ZRGhhI6L>W3B<#W9.8$`
%=d3iucW.^.=VO*=bfabm/^L0<s+.L)^6ilj`PT)FMc0@GB2SR<1G:M$hTqqk)N.ajlJM7c9'&.*7I`ah]Zg4Z\P"`>B52gRjTJIk
%RU\A8_=N&Fn61dhr.WjlT7Qd>XdE].^/b*J7.)@\,2Bh)_8@sBSae:ArHu'Sb^S>nh`K!)6EX$,f7\i_>KF34OD@&TF<T6OE\7$K
%0gX)O?2Iu"KcRF[C,7Hl(>@J/W_FVd(<Y>tWm-)o>Nff0WTHjR\T`^5VQdfuCL,qp$i]CVls+B-/uI%Wdn!_;,9L3qQq!!JjP^uJ
%$Lg5S,@[B#I2tk#_+mW:qp2pi<RC_Con'@EI$qjBa'%G6X^+qB>'omGQ(F19*ED@#I78!l_+ndE(\(`oUM(7cj`aSPmD+N1j,'5*
%GV6@qfe`p7>thY;N9$aZ$\gE3_cT;n)7D4ZO\ho2P6,irT`R%]rh]bT^Gtutrf)O@J_tOhAU5-5,S=Bq9f;cR0,4BnL@00/kPBL<
%Hu9Gaq]k:=G`7,9[TdAC7e0)926T)N5%i*@bNFc1l53f7LS+<2af0b<c_`,s;AOCr.0Y)YqjO;RA))\;JYo;fqOkZcn7k]qG57h?
%e1hgO%IE_#nA@nokk*4e:QL5:2<1*3',=I32-Ob@cOrHDCZAr`b$;'2^FAs;[oap=E?er0Z!H/W>MSjTm/J^3Ij_)@Zi<+@^k8u5
%bDZ>V`W#>UaSMM*^YeTFO2_+eW&8Fss1?q`SQL5l42;7>pSg_:p3^N&ZSgeBP/X$]@aB8'k<%pIr)@gppiH@`kZY[I!s"Gj$rQ8!
%E!?\D9pbH5GD\RoKmTJ*R&[/eX7a)>b%LktT^>6+Hmg^,Xhfc@n!c1B:&,ed0DLLL^0+fW$(lU?7EIJW$P1q-6alKG/NdSDGn8Re
%H1LZ5H,tBtkR0?&%(aQb'c+!BWnNI8/Q%L[KikApnK43nX1c$B<o\q6Zq'P"0DoJ3&;$&UGGar?f'<!!4V-eF?5DV/\5;Z\NiI_r
%:]HgjG04]k["^-c4;<lU4e%VSL.7b*lM4t;5N[5]XT34dbl#ul\uIFP_oEs";f7!,"08gC\5tj0R@_tcb)H97*l!F+BVsTUei]>b
%h2b\PWXHkj_XXpN]IY$U$ce11E4gRc9+/e`most/Rftl[L_g9k?P\Zg=ggR3NgC%l0@LSkhrgNUbW(]A`-@_d&(5[6;Z#ju9MAuk
%0,tJNPY@!C'<pb9#+P*L_lO*4n3b*p#Fk2r0Or[d:&$r/2Z'Q7[gb1ah4>q?[9c/H7da\:(<7:.b-SfA/g<$p`o?b6+u)f*Pq3]l
%fj@S<Ao1d@@/=1AQmN[%7J*EFoVH9,l$k$T;6cfoNB\5?e9n`0q*(NJ/T0[rN(Peuf@bR7'NlG&6To'lrgFmDq4YXFCT@_S[\q0i
%9/!&@l`**-)bd[);^B]DS3KM#rYKF%YDhoD1^7Q/A:C;/I=;B3@A,8([+Ve4IW64XWDF8%q:5"GpsBbQW$_?c_N1EN76QcF.3Cr7
%<.F*!Cr!$4_tbJ=:T`pJ>Uk;/pb?Br&eGh-N&e1Xk2).BI02]g*uYoDN1%(qkAAKtr"of+`iP0D_N1tk@k@Np1ZlaA.DAP^IJ80P
%atGsT18TL0`LbY]N3]<Dees,kBtCJu\fU'L&Q^cR8l*j\%*d+X!*jCmAN'DL0V&aKiS6g1VP66u%@*3]RPiXi^=oabZ$$?0Va[)I
%(g-0SlPqVB%pq-8%6VhhpYEgfG7HIjB0Om?UZG!M6"&/GeeW7[(3,)+)/&0&KGgMY5+VrC)1M3)A"*#O)[/n*UC]"d,n8CJm8us/
%F8eiG2X#?FIS,$pgt)T(bd15e&cH5C/^qJKk0$Gc'3FR3Qb4)oddc,_T5g)V@eOB_mH/[To]>7HcAWk@njC9q+8DSEf7>S^jSUqH
%I!od;HuGP#3H(L68C4j:`Db[G)=QT2eN`TC:K'J`fQ&'UUkLDpYD]rF27KgPr]A]$O+hU_c-6G!$YsYRaB;Vd`k5Mshsb1,\$P7F
%KYa$SF3Y#%$Zg2oc7R8NY=c?Z3O^^*^:?7J@i3b-WVDn>1N1H*k\jkRq'0A"m5b/mflOmKq/=o,hsJem+%l/L+N*j=31h#NkN!Mj
%\W88GLl]*&.kug!-)O5gpCU`H-:#Rmr3\R>GOXq@Z*LN3RdgC'1-/#rlhue<EYinG5BT2N>QQi9^@V/Vo\@Y8TCg@N1s//)S'+t,
%[5]lK-g.R+R"]];7B+j,iD<J19=E+>H[1*!I,/Phaj\q*cfUXB?j7!4Mrf?$5uk!7^(_RuoF+Ye?:@R+D=e1I+5:\;`3cK7ERq/E
%2eu#SofHhnn:^o?O3$hhhX91#9E&90roSc,B\(5Z;uY?OI:(i\)ff*a/,4qAUZru`e(sDCSJFe1@@]_YT&6A.V)>X6jS`qVD>hb7
%+<cgoMT]7>F+,<0=YIX(rot>;eX'n;Z,d>(5#u/@d!S"mR215.>od:NFu-8S:%VW]mg=5$F$b#C'[;>0[*XYYGsdHW*mD#iZoF^@
%j1bDI<h72J\o;hBF_H.RI*GN8ipOX55gs0q5;`-I@Eg5n0L%CQ$D6CQJXpLJZoJK56N]J7)Z9IqB7Eo\9Wco[WP4rQR&ed-],a5h
%[9c/H7f$[3MrP3Rj]Pq1r<VLf?QB$k0^FXl+'tE/`Gn5FA?eDFrdqFX)s;]fS4=+\ij$=&<I0+Tm$OF8poUZc99/dR:N.s2'$XKG
%U9Ut2k4*]PG7HG+]AJ"*k#*ttJViRj7K*_mA`o!o5P3FNfNEar+?a=cl"VXISW?l0F!9-G60[eb-^s2OZI99SoWuB&D)(Ro'Ya#S
%ioBdjLn!NHRemp>Om`i,,N;'bSbXZO^X((['lqV"V>ILGSGdLKAE#,W1C&7QhsQ<V"T%<*MZgPT!'.4SgS-WVMiEl[(n6q+2;6CB
%k]<_!]*HL!D8LRf7<>Y/IlDq,>>reJAkpbR0l&#X"FR_>HV.FBYPn;>4j_XrD:FAKn$\^_1s,IGQ-6]P,>g0\"Vto45AYL&T56tM
%K\8J-=`UNt6]d-,is:lCV;89LGtDEKH%+aoq$XCHCb))uTgrUqS$"*OE.&-6*H^?oU$E'okH"Nl3+D]1N`c:X(/4K/dV9sr;_OP^
%eU@o5jmb%jjihBS!#?9C-:79eC0bVe^\mW:ZOZgYiGSn5&,na_cPM-:-)sF;%4'2I[h1T"g.GX."6X82ZuOmA!</EbFBts-"eC10
%$q&n^n:==f)T_29DgMcR7N_bP\-nO[I\eb%htBM^8gj[=He\Q>qI0RnOCX-B%<PR,#CkZO-lMuUr;""5?`\NPhr&\)%/N1WU&SAI
%IXTPapfkW%'k-V&/eB$ND<&r#8jW7b9!jS$JDin0gRJ;)`o7.-cQB.r[#J+gI_4l-n.ePQ'WiCk+B^Ho+;*?2AnuXr@S`s[`tV/r
%?*3*8@iA)7o0NjXkiX8nhATJu!-(Ks;QUdD5#fp2$qP%7a=dMf*u,MZSeej:'bqRB(*rC%k@I,G_%0;*=]#;dBM%1d#fEmJbX35%
%(F;ocKF3RBdeR#m^bL3Z<S0QLnSV,&?MdFQm8#-nN^<LNr:_RHJA>mWiJ@n@rr=,oiCEBU'fI+*PQ6eB+]h$JE<@VAng:SH:s@eC
%:.lJlC1$:dlEAMA_lat88=t&X!)8'E&-uQae]\Q3I9n5GLdAsSQb.Tu!kgp[l4rSoYLo43pW;ST-?Z_%r?k!N,7IqP`^PT6i_qTt
%RET#QV%4Mt5?b8Y%F!r>OKSY4lH)2YMd!0V40t=^SDt[0LIL0o>6X0I)8O?<6c0cab-[,)Jk1GTn3a'dNYa8s'8(]2.F"e,3.g?D
%MMDB]VLW?$$*!ICY+XunYGYhr$KXi_*dY=!(qMjDD,3<WC&0dT4n".jr`?&r-DAch[1.N![2"i7oeqen$2H\+_8?U%],60JED6HP
%%f0<*fd[q%7.pT8Ra47eW#A4%dmg1k;VSmldK;VAqQasL5Yd#)Nuefe>Y>!Wc_FKP!,O11rt_&1<6H]GG4jrqgLTt'[+=ZZr(tUT
%I&p`XJDl9g:.r2V?#OcO]*bK&j39L_V]1nu3]=trC5E,*2%p+Y[5NF0FSoDE!"4%KW:nLJ2*M:gKE"Q@pue4=WVO%"iiajhkTKUW
%1]34(e/;\8Tb.+[?S"IpfjK%qB;OMQ)6FbfJ%q7;@pK7QG]4)qo?]_"rYtI+3<%Fj^YPLM23ke]5A,M]k<P2SFfk4_`&K+J[P(WL
%s(oXPNV8=Pl\NW%@n@Sc1BBAkkDYKJaMM&:r&pL.)W?!#Hht*hr-6qC]qCA=i4PaHIEH6HGr:bfZI&bX7:*+hc:tE)IS0o'k$t*Q
%;':s2`4K,Ckc^Nd%0A(s1XV5Kg/G":[JC&dOoKE2QE.qgieuu)d(&kgWERjKXh^de2=s*&J(]Vj3LUH1%N(ifofHjaUo1Y$1JfdU
%Y1a8nbWM>l//aPjaamBugB_%6h4A@rIj6&(Wub/lV*%2lqn5b>2m*]\\ntRHnk-ON=6aOn@!)5cVZ<kEWN0bKcFI^l-SdS@3REE!
%F#o0b,:iu_VH+.J[D15mhLU37fde#!=Ud?o9;$U8W.5F"V#u%CX0qf8ibJAr!QG_Q!0Mtj[:O&BWE'7d/%X:Pb\JZ`k$VN)@orgb
%=u98A>1DMd6nXSbpC+[Km=gG\=ahX$!?1ThC,7TjE/ZUlQjK.gdpjrcZ83u5^'(3I0lEZ;2C_E'n4;@lm-u*Sf4i+SekSWeq"AHQ
%GEna,+B@K@)-g,P1n%&!%lI0]s69bC<NW0`2-oNNM@2#?&o4toiqSbdrh4FlcEMTI]OZ->>jhQ8#uq6)BAWK4W#K;:^Jm:C^&&,f
%!q*=A[G]LlHmcs&7gB]5+;VO9lH^WL;Lt8g5<9S-`XgVd5]<mGeY4jcSe<AZe&W'-dK@/n>,e1!&"hENdBsH$/nbdq"k]IXB]opT
%+pNr'%W#!$E!,!m$(P4ZZLf(P)\<kmA`Q9eJ`@HcX$9R39N(rCl<7C$FO:;!G>uluXR\e[5>lg#Y<hi]R7hbOkM[>1%@]:+M@Lr=
%#MKVaJjT^B[[$u`Mc*FHM:Q8_QgO+M29OON$2FUL*Q%;tMbKu'dfQ1DPRg)q7"=h/dsmI`2"OTJnd@rk0WI%#8i@b-5_D*Ig6k,-
%K),Y.oupc+B6EfdHkP[J*gRn-$V_-BZ4Fi`O7HG,G"Ye<%NIh+i2"*h_\G.L#81W%O>9i11(]4@4.D!-'n"Y=**=Y(-3.S#*qgYn
%XgG-2FF71?4\IPl1mpZbE+g_$%E^#"$np&$0$C&XO4kpeR'#o(K:/8Q_DRZ$+pN!"n2dt*N<MSq,65CI(IF`-r[Kr+2.#6-*W)h!
%j/N=bVkA]7&IEM=9#AZ#[c'cgJC[1VM&cI518!LQ$n"pS:*e/s@8@F?F$;!6l&jduoSB'!E;o&DeIKR_V#]Kp7Y2_Y':/T5&B7E[
%M\3E=)f#8p-qDHaYGFK=5;5`bJ9U:\B!_smLJb*@qcss+1D1rK[C2+hTi=Z>RpB,'gN\A1BQPgIG^IIhE2/`.YI1BFCnDV202UK\
%j[KH]&m[s)ip*OP>u><)Xju%e2,m5C1W)KZGH&kS339;gpaWD<Q6I74?61Eq\P,VgAO2,+;0l3R@<&'>koU?V2jd`*]2@q2s1Bp8
%B>'snFZMj"X[Cq4pe$fpgZX(6T,;"O?1Gtpm\52RU@$83$R#b0*8m"F-NaM`FbpHX?IUblTATjf7]4u?"9L<T\(75]>VW9V.+WL:
%'5`-:EWE7Hl0+D)T6>FfValk3;pDa@k'fQ$+ffj>O9.Us44VZGWLM:md09aHT_\4?Da:Ck+!%.E77kP,CB(BU!L/AO"X%T9M$sCI
%p5d<mG.8q%E*<XN\5=8[7\<Wg"_1R"CA##>5nW4@[<imSEccCZEV2KTK,sCEE^Z!T!eOh&.4-N`T49`aD%J!?.S68MHY"]=X^M+-
%#0K.4BbP0.k(r7.bBrF8#Qd,:nd1kiJboS<V`0A$.0N#`MGHVA**>$Vb/B54.177hV2L[25Hs/o2?Y$Fh;Es-am2eH[cUQ?PtH+V
%S>cN`VI>jAO-Np]IB:XJ9W0GQ-O)d:&h.lC?$LInettE$N<DU-iU,ce"oL*0Nh3+te07,OWjKCOYqch\4#gdIfSSQj)h*0l's0Ar
%pplc,jLWjK:Ioql&?oM;l]"DioWN7"("3b);2-0lbQ1!?<TAXe4re2?#UZZZ1WI8!Y&fD/gBfIoZ=7uA)]>j5l!5CN6&uW@?=:7,
%p7X09#juH;&*VlJ.T*>(McTM2=Yi1[e-NQ=+q"HpqrR6Y8opm<bRnO)=>onm(u=:V)ER*<BNqShcunk='XTfmFuY53+<Zd5m4m78
%)WF[H!nlQ'#lo,f8l[b)G3;[UW/eKSnI`0\7<&<(*%$\sHL(56U?2me1I'TFr!:[G#LF'57"639ef#$SrILU$KMFC9\1:qu.9QMf
%C&ZpC[2GNm-'R>sM]0/Y&f+TbjZ7M\BomPSYFEPl8gk/A!YQ<hTU0/YrBIB%*$%Q$/P#e"S]Cqtcg7Y9\i'.@BXas`J9')HP`sK5
%&X<,WF/sdK#S7K7o1Er6L1LtW`]:1(L5t],;9jaCa??t<rui:7+7;MN?W:hlSXTgcd8,`DT^=C<[16Jo+8e_h*.64_a=bRW*[#\G
%6bH/&j`hdRg0^jd:sGGD'>r6<k@R^!(4.,)Y.^(eUh4UJU6s*b,X)YsXGUmlX9O<n9OBCl-XVILH[BRTqts!FB9cJ<2d*5Q0'Cp_
%=YOOG:r,$Wkjfj>IaF:dm-3QfdeR1`O^1&mGQ.U=mpL+p2'!*CXtKs2U#RGL<oW_=o=pjrJSKe\JU*BQ_2f<E-;+[8WNLjqWu']t
%-0[+/TH<).XYh4$IrPAY^&`\aYG5Xj[?<V+aZ)m>=Xh&qPNNdmFC0m@A-F7mdKSA+5=/!Sq+a7+][ag$NEqo&JSG\HUPURafS!'o
%Q\VWd1D]oB3ePC-.BQh.L.Tlo4rq=qFMX"DNP9"'Wqd-g="kN6]^EIgi"$"h-1a^*;)V8a;^6q'$%0nsaJN]J]714_6DoqpQ`-bI
%::d'RZMFGn2RshW,YIO]eSHSCaaj@#4_;bdZ%mF<rFe':dV#1LYG(r+!I?R(iP]c@_5)/=.?e(`Lf(A-o]=t[YB<mi"$notl9Zq?
%GL'fOOlU\\[269k";HXkTRhhbGZ>tU\CnO8RBE_D-Kq#^-.pi.(R,5aKD]4ElMAUYaDYf/n59Z)dJ41FP.PfS/0^r_?53,[p@0\+
%+"$IE0,']&rO$0JH^R5Q$:X:Lcf+M&F#UF;ghn/[+,/<W1KN<mGe_^j/rju!SjRsZQsEuo?#./%>"62th9"g)"lZ7tS^M\B@c>OF
%Sj%DVYDD.25'nW\/,dWJIr@9,:P.Q=Sgfh/C*1J/`N=c98ul%PFV:tP\/.l?h0h#!?csc,@V9W(m?:_@'3c">eNeIVj14U*H)=8P
%ob/]sb;CuFDrG4p^3E33Wk!8&/u]rVCf9FtbG)N&Xg&2=P,#ohq$Bf\V2Jh[GMYk)qnY`]R:0ic$/1>k%oV`TKG97qV/)2`2Ourn
%h&@>91897CB)Xm%]Ko&>bM/:_E2e0U((@'Y35E1=.N$r*m_P2AOTF4hHs-kpSDCma2e2D*@WjlF!//SQckB))B1%DAr@Qemo^G.j
%UFsAY&]j%L[G]Ke;_5GkPs,SY0]@%k<<TXQD>0QUZX>pc*<nn.qEo3H;`')q-h1k(I'JnEDI#J6#:#:t[pZQ_fa)KI[G;tU.U3,@
%Y,DQXjk`Ukm9^/cIVn7--u:J"#=\L.$q^c&Cf&Dt8&<hXn2V>hTUVanh6e1V\@6[0*o+NeXToBjF?#YHD5MrbLZOk1B$FQeAde&4
%_5#Q+@k`,`=Uq#kqMATd=a^UJm>!WPKf("i]I5/7?nllJ"g=lZX5J.#D(0^FCh84m0=qZqc/\2V(js'E++paCIOeO7^+9Jh\"/dl
%Xh'i02@QDuCp$W*_,fpj4_U?U%tj>9S+g</M`FrJk*5knE[Q.D[$Fs'>7*6*YEm&)I;14Z?%$"Q:6kSe9:rXX2,!jOm!))_>7W=)
%A*q=5]ldn!l+jrY?V31.MbDad'5f8nPgbuiO%8A+kLELKku,9004"7R91sIC5kLGjQ^1s8_3_!=$WLDikEmR_$6X"6GFk*]"Xs\W
%l)e;!b=b9FAU09iD_,g?jdY@&;)haVffNo9?Xq!s;G67,n%?YUb6OAPpWMg-j7DB-,*cHZh_]PD$]c+ZEp7F"Z@'-oZ+g,]GF"P[
%Jmp@5ojV_4NB)7deL\0_;iTo,>,&a:FM;*d=l2j%=2N:=N>3plo!ZC?Y?EIIj3.>BhFT*)P"O3h.n=D"Z>pktiE%Y@]"9IOdFdF#
%j7[V(7>WT\XOL!@)Cs(aDL\M34,g<Hj8E7[c0F$M=ai6`?[l=Wc]n.'cqB$nGL"e5<g-Lb\9cf;BWReslu&m?`TY/'h,<]boiZ4I
%Y?'O;@J0$L[BSAa<Ea1SWktm?2lda1dC!"fN>%Z<CU!s>Y]cZc6D0dT6fIlPmI[j??7W-pmB58P*1#1j9&nLf.fZa(:>\IkqN6c,
%osO3^A3HZ)hl_%P:XSk17Jq-gH"(aY\as9Q^$rP@^ODr33pY,j`p%eD\-oLLo!t+[?LqPH9#L>8h-_X7PA`g?/AsleDc/6Qai86d
%Va*_+9'tVAkj_NLKW<(`Hq7%26E$55=kZtRWg/S2<4K.Uk4<p=qp4*^`o29U]2=ABWuJOgWLJlK,C$Mfm?M':)t1AVDm#tp_jf&]
%LZM7h.K-ukJ&F3'O4Y1io4#s@2X_(IGnXkFO./l2l!^o2]KCj+2X4(H7P\;enY;q$3;lJ"_Im(e4a_<sCPJ+NmV;Oa</QEW9:$j$
%Ah3MZSD7SZ\[/E/M".^7l"7?*o1F4PlgCafDH1#rbZ:e"]SS2I9?g"<FY=^HA!'/)EV=hp3RMV3jI1R/,Hm.eVibT`Z4Z?Qn#9t[
%q/@5ef#i=2T[A>@6r0sQ2ppshc:V%r\N5W5a)-6Ol'U;[Na,nV\#&@F^RaX34`?t5HL1A(ea`5h?q5\C^$o:(6D;=-`Ek,TWI8*p
%;THJf13Hkuhb`DBQD`H0@X9mJb(FGBqJ9Z2hCWV%kaXu1dT;1Ect,7Ld-[UF27*.^,oC6<4j<71)4`cZ4l8!'S'aU#WYS%c4hnYT
%DPW2-<o>lBfbFI4`>6DQ1&E6"*3aAW]#62VS5Z(!DS)5BF1XNn)L$QF?K,i]=*gB_\'jBLlq3TT2`H)rHm:96LT/cQJ$j^=_,hh'
%MLXO;'SXfVjLubaY=Co;\QonAQc0c7XG:oV?+sMV2]k%GPW,UF\AB7MTA5=UHV@A>R`;5WXhr'>o__243BHFr-`J@=h=&>/,jj[N
%9jU"J?t;_i.EKW=l]-@TC$`pEl3`pSd`tm0;nKYt`Ni-&+MRO[@s;[_'@TRcBi%NOj[;&e>j=!^:T)gVnP]34+0XN@YK(tsFgFGh
%QMI)(e=3mFBN0"6MY+E`o3T%Yh2UdYV0;SkWuJZ`8u&]hEkQM!gH"EL]rf0cF)O!CIbHkFg!&isgn-nKf^!4A[J`WAe_K%D1S=Be
%48Hb-P2/b!RiOp]fKMOT5"LLrqEZjC)Eat,R[lk9q5KciPm8n'WSZ/=2t`YDib_t8,hI7/Db9c!hb'J^-o:[h4BtX)bXr^OPDYrK
%ZDdtjhb+]2^#N(oI!D2g\a<JIiqZ_9I=*)qVOq`EM0.qR[$]NQgX@oLBlbM?ob^A5[*@0-G5^R*RuM>FjQr;g]ZQPdHelSICh*4$
%O%@TP\W&CIc/I,djn/%*]O;jYnk&*p>qha<[uJVg;/9+6kI*u1Hb%)7``qlrTp!R3abT$K7\;\&hG]cYa2Ls:l*t`8m[]$V+1`i3
%pWqG=^^?6UnC2d[OC[50G@)232`G)K:Mf/4f+2et)g(TGFAGQ,:.nY,F8D2]#LC7r]lB>L1(S"Vr:8NDCZdF#*^.cfcdU2SF8iDn
%h`?851tN+/6Wl&&p)j0cQelfP,5>.'?V"=0l/GqXXb(:?C11Q21:1>[0)+$Xna]l;hS3lt>oa`je[;I;iV$inpjBg'.0Z%Z_^2:h
%^JcW#6Kb1kY?&BkXB[Dc,p,lk=80[dM^u+JDdN%]]Cbc1A+0'$[[)3Nfgll=:sD_/?G!eZQWBGjbh?Cc<]GDO]0-[[ij\UCC#puF
%\g$"-T<?=\:CiD++&oW$IB8Rg^FsHCN;HXf,QC$\\sj3XD#O1'qHVm(gt8_3+&f5orSqCuZhG/]MQVMFT&OCfo$c,X1&kdKFRbbt
%K]VCgi-juq'0!+$U/tEaQX#=^?RiOEnEU:FlbB=NFS#2$TiY)lEoff&s5<`C\N_JVQ%#lT;3#!!$K^U=FeNVhQ7jc:=mm8.;^lnS
%LPg)7;l[]8rN1BCU!.9;qI)bQN[\9dm+s*i4Vb`5Yt+8JgA0!1^XfJ,Y]Z7?F7o.ag.T-421c;2U)e.d[Th>m]kNoRpUCge0!8Xo
%>5Ki]("5+8:s$Bc+2b4i:-H)@Ph5PBo/`ERS)(Q6U@2VF,lOlAX0&5Qem@ZMVq>`I1YLg^H:V@\B@c=fG%I/s27CG:cT"*tDi@/2
%Dl:KLkKBD_n`@/gKS.=<RWn"=O+4pd.8+97NN2,,o]b(Wfb=t/)lkjls7RFZIY_R)7L,6-q+a6e3F2(uGI(]^>QFtT+#t2#I"6*h
%69>!Q*HcJS!REh/`$qO8:H`IXVp;s^%L!>dqcQWR2;1Nr@2^^TD>`),GNOXj156r[+9Hpo)4o#epIIfl?76Z%<r)!T4=QJ0=$U,C
%.fC&$J"U``a^\*&1%>1^aK@kMnDMcN/e?'#O1SBl5E_*3SXV<[Ii;oTl/$mfN'Uhck`k,--3l(dG;K+\3rW:,_t`1YCKK>pYg7[[
%MgSLj.IF-EIX9;VWlI<>r]+9p_HJ=Q5%b;RKT`<V3o_>'6Bf^odUt^(G_l&L=A5+5rbQZ-K$Am5^/<)*ReiqiTjMO7\Iq_4^sifN
%5YbMd!"VEDdLH--:tpQ(!hG)IV&b*7B*4F*j;a>G8f)rpiLE.rp*oECi2V\HK>5%.S-SR[UEA\"_%Qf"Vda@pRXpUP@:UXcNQVK1
%Jo<.>.^fqr!W@S@!>/>]J;2>T.KNhkjaP'&mpM*)KYX\FKd!9XK6-E:3kO>n__mYS!$Cl"X,WRs+KZUH\!o'J9QYqe\$uKIY*`C*
%goe(u#VTIfGb9u)2918qn1iphCAek7j8!R^EpV18%s[?f]g7#8;X/#boDMi#Zt*o'GDh7Dm^]q2%'''Crtl>.>XX"OhA,p!.$KX6
%mh2pf0>S1")NaigM%MF9crNKTIG3W.R>fanP3^h]T+2tKX@nP%X5$`4h/t'nn&")L[LirgGGtHR*=&-*K>V'eg`mflDb-h(d!"=P
%7:<EDf!R>^5.=+"URs0PD6,DkJkbd5lOB0L;"T#rGThk4aum^Y7\%"+S8U@SF'.4q9/^&DSS==@Vo03Zj+e^.G$q^"e.RLO.":U%
%9lP,p?j_JRpme^,E5no"_rnr#RZ:JGpf2E`hT;1A20)^$2JY1phOC'PWq]r#]KP@V8Ju,nOYW`=54BEP9-#$-8j9>X7)_"*8h[CG
%<6\4bXcMfoB4:_.d"*))JPn]7qn\G9G,YKRk3eINE;J7djn@$P*l9ut]BaIuG3bN$4-(WtbemI+<c85(Zb`cjH:h,1h%eo6-mL:`
%%^$<9::^=*rc.o/_!G.@Ckas8<b[RuVPnD//R@8.<Y"-8dER<7X\SV`HbsTOC(B8!TP6\4pQG3EMu:C$V\W4bmTq1[NNUkte<R5o
%JI9A<Fu:W'+84-$:J't<ZB])@q/.BXlnuY,_K%l1k#QA_Du0;>W$YfFNlsepXb_!l]Y8W89U&H&ld<,OiF5Rf43d-@6*)#BL!s8,
%rG:]%=p*<JrlVs,5tT\"DFD#'FrRJ.)nf3<]VdnUo"(-id/!EgSc/4#N!M8ORsM5%)rT?%45@FU-6psn8tm/*DW=4A.b-_]7Xb`!
%/"$`o&P=pjQhX<bQ!FbFcaI0=VVP61V=lkBY)engnOc5a_I$J+;p.+=eMO\9Lo.WO)Uk:=X%@_^Im%7q+8^nBEU=bZY]14=DSXM'
%+b'B3OD%_H>N+DeppSh$gsnM+Lb[UQ=\0]ZY<gKkl`,3I;Uq/#g/c!3e#0gOaHi:E`Bjs]E0jop8EG#\D_bNP&,6%N\HcPg:J;YP
%iLT<"6]<HI59[[dm8ZF"T!5a6LZLh3&MDeAX7h_$%3\%ToX^KhkbmOkoX;'3Q48T;9j!AT5<L/A#R"*oQ'ZM28qcrE465#=:$)Sr
%Vm\@a(`RP:j8]GB;W5=&bSHE!YO<)l2nM0AlJ'uJ)GRi_!8i'b\#KI*a^_ph:JMSed-`35;E9u^#F"BgeD5)9QP8e@[n<BZILE&h
%gF)G-79Nth$K\=HSYPi#?D>rJoFckCb%[TgY`K#$imZ^=-rdn+gqN4Nm9[ZRlf$FXVLqUkUZR[rBQlqW<m4N?QNFhB7X/i3IY1,s
%@Kt@n?Kgm$P.Nm&*ggR"MMn%^m%[F@Gg-r<#]=O6PD8utfUH3qh-FrA'cpV9$G,K>]DYPaXj]l,R#cg5%Ohi3g(VWK6+k]O8sG?_
%rK"WP0Uf/I[mpDK%)P,O#(q8`C5Kd0l<h\K2RM&g82Z(Dqb3F3fhAHD\OEKOh728Rg`pudj:;nWa#)edS]GR^:>(hE3qjsN6jhjL
%Q&>%4PJm9<nhci9*D7)p;QaV1e^bb(UdN/\0W>Gl2\'l%Qf#JP*gN%8#9!Veosn<"4FPje<C'n,4(shMWl8k7O6ms@X+4P]]u/,n
%=dHsFmVJOlijl3h95.[+5b^(*:gc2IF%6^GEAb2U!d"3Y"#APDGk_"4fW)@Y#\4h]^96TW%sot[<hfA8SDMi,V$ogi><``5V,O.<
%E*^U8fo1#m$`]&SL)Cd;3"EU/e6HUl0,q_3.8IQS)0j^=8^3g.]D]X#p`/WIW4fq/^h([C%kELRf)>bh+r&Mq!"5%@DLdOl]!JfG
%h'Paj[4U!F6rW2rB"_JpYfEUUc<T6J=UWI9>.U#-<S'QFIt]F=!&BQ+Z+9],Z1un6E"bAHe$Y>fUlRHPMhe?g`uL@m4CI,L"!8j]
%<$#d^VH;XUaS?k7TmbNo851XT\V,"/+^*I=7(-i83dJ:PZ3=8g[V]W.ioO*=#/#>&!<,T%i*UGdAJ<WJ&UmIA_7TkG?5DtYGR@kU
%]4<C&QUJRqW/t<?L<J;#V6]To9DDTB!YK!K9fD%2$UM<7Tk`!tEB)3e9'iFWk28.o&/J/<d\_-4DH>0-_q7k122*3ePSdEd%dG(_
%Bb4ijhc'FQ!pme:>mEm:#!T7Qo"ri^\4b.a/.!+Mma:lII/OSq^dsQ%SA@1lq^Z7@mFbe,m1E$YP>'[5B*T>@Wj)eNJ/TNIK$*([
%=`:FF,d(`=H]7-I]SA+p?TrE]Y%D3oiBC%`HGi6pEE']!Ve7LF@d">e>(uH!)ok3bZ3.2AkH,KX4!8%noLS]9d,OIdfr`Ip_l!q2
%H<>"8Sf=%UZS!$/G^XeF:SpFk^.51PfS/\>G82T2-,76SLp[n6(.d,dTA.,<2Bf$pB37CODfkl$+me<3k6GU;oeKD2Y:b+P%g/d+
%h2lU5b.t>f:cg_pDA]DUFe!_Q6-6m0Y,"rITTLUk?nKrSQh<Yf_"p#^$L9s.gUM3:.])0SfY%L#iNAh7W$qR_1WlggmG>Gj4ki(c
%Wt@)uTXD95f(&VX%nY:A_=`*[$Cc-;cTc!ir&li4N>TFVB+t3Zp/Ur;e6Yn?g_JS8YKEVJ?5s[jFs>pDqDc.3H]1:!J3pqb5e.&q
%UUtH-ja(+dbiCpo\hoL&YZFHcM*c+?0jP!<l4=*N7Rl)gW!9^?>$QHaI@8#WB<Mu^#k)+Nn!9Cm.K;f\79V(dF<S(:cq2M]^!(nI
%[EcGQm&.+#!S-S.f:?aSMjc`-``Cr57Rb6-?'da$9IoMJ)lW6aZPaYuMa]pD.,%du`5](i\j[/gD7+*)n3Ep;2$@,i87m'$O&9,R
%M10>mq6dpZ.X5o&]R!IOd^>!NEEaqU,g#+uKX8nN_riqS08&iX%9h251TjcJ`*M?0+Ms]ECGo-RM'f0ldQOqAo"8IHK'od6f-;73
%QqK'aG9_*JF1VLN;&Jh"##aJ"LX0fI=%e'\OA2NNH_+T-&OB]KZQ!oHJ_X4#;FoH1<l<VBQT[@"bhk:51_lH6onVm'6'%dTm!&VA
%a%Ra8JCcM7**\&_;;7o+"SIkU8sO&S\>^H&YOTj=r(=r./Y)s;P<MH&m'HLf&eEtLG>#a6B`r8gJDk17#NS!E4KQ6t:>7XoK<(Z(
%-d(#_p;:dHc`"VZ>H?]n2U<U@RbeCJA?TQ(BILp#rV.nCVL>#0C2tdo]F=bNe\l_\H'ICd8W)B9lIqHr.11al_fJ/)T1&#V--LPh
%HPONJVFhjN/]C#28&Ok;X<F=<Tg*BbmD$5I[&i6?$"j`/A=38VEiSXHN.q!9?X>k9UF41GBm:r:=/\,X0a7mA3S@qdK?a]uNU8!"
%dVA:2/?,[A3i*!%eq&?G?DOQc7NtcF^9=4BOl&hmRshGNf!C3k*0BoM(YB4l(a6.RAG,>0&m._:H2I7)0`a#8*q/#W^.HZekSlSd
%S'Per"J9G5=2cmM=k9oKc-J4i[tL.DYSu785TcjuoKe^q,Q6=Zj0k.TWpu/P1L<%hrJ7paE2IW"n*Xo=)B4ReHZ&p^:_1G?%B;:O
%lhuK9maS$(dIe8cL(Z?+n'\UWON1Y<HYdl)gr&*2]jPD\a%A@L`T`t57Y/-CiM54!Nq#/dRA7gq6n*7b9Lgb:Ob;:h;fe6YL\n:h
%G4"Ma(7NMZR4[I+T9-PT9a;DQ)aY3&FP\VnB?GY`'eEVO.tG:L39rR*9cAOTMX5-TjMZkP?COLrkSV0^3`cVpJ@lLhoE/"k<iY#t
%7Y'2.>*=d5c@)S&:">r[;;T%=@V>ADQ780OhS&36J3@\E[?Y4pAU3YuqbfuWTTcuM]_V6N-5]*q$$o:+!58l6eAVf?K%$Rhi:T[o
%#p#BF\Y$Ca9\5GiR+`FV2+C6TZg>\;Ta-f3\nZ`9LNcP>Wp+7khK#V#'SbPFFKf_ch14b&_g/tu2ms[jo;dR4FaXF'GSgS4Zhf(=
%SttC319o#j82)M%&nf*J('("SZ!-/JA0_ilaU.FjETR@Z?<kah1r5t=4<-Rt.f4"/qBQk.b(\BTlp:A*s(6OoM6Qfs9.=^l73M1V
%Q2ut9G.%SmKPYXE2\*!+=%PBq*Oj`n:uTm2il6.n5C1IteQ4O&P*T'&cWTB[E=orgFXbCB+QZGr\6FJ2=+oerlJ^brU4%9_A9SOJ
%OFrGSBb,mkU=B@VnX.\>FAAGT/kZH<DRH"AD&_]Hq9=Tf(f)0jDVd8@L1Sn'.:IU34GIdg-i"2PlHkC]dH5e!-X5iH=CuJQ?jU-F
%DlK<Vq<27PrS2?E&XJbK,LlR@@&uW^@.IdW&0gMDP-&?`ZAI$&Ie-r[YB-#>g-433Ph5_n+P1",f]^2k0k!^%fUGCSfi6t1%fV?u
%5^utKE6<RHdG6i;,,HM<H/ah"kqS?%HUGW/jWXR.X4bVaB:um2)U?,#$%5]D2>CK$^&?[<9YU1'RN)(I/dE/NbAJZ>.Fd.A48:>S
%GtC1A>d*dG:;\1^m%1l,]9`1e/t/J)AlgK7_<Gjl'q\"U2c8p)B^+7)OY609r!%$$`7=$;@gLOK:4k'#%Z$b%[;7<ADaGK4$n-K0
%1S_THK\W>+3U!C,bE$l:Sm`pD&N4eFeD>1\?jaj&/#JIn5/"N2K(UMn=Si-Ue+Cq](inMCeZ3_;<Wap<liF6[p,.92b;,LKoC>hk
%<bb,F]Po60*uU_Z?&0MbrA.hP37?6\DZI4I3H8q93q=0gEX[]!I0l.b9IV.-QZ_bmI)FYMpslVA/r3oGR:(B2l,7011n?)I??V*)
%"/*/cHk+^Cl690;3KOFm)qEcU([`q8'qjEbh[WjEKVe&")B=E0qD_TP7TI@`pWl@ifXp,u$%BXTc\>1)AX@-(acn+,DccP`"L.ju
%pM*=Th3ZKCM0m]%&o?:;Rm=+>7aegee;C\uH<T-ML:;ODKo>gaTI_Bbh92I]BE=+OAqa>*A5i(`;(Qp+GYa1L<Kf%=?+pYppKlL1
%Sb%l4s+/X(90#8O<DSiOX#I2D7]Rp9E:jDee'1'5-iq(&]]HIQ^#b]X5^>75Sb31e"1\$o'bimt!4IAQIaC>P`?sduD?WS)a(G%u
%30Q/[87Jr,+RF6N:ilceEm(())TAK5b<6.[J^q/(iC\&Qda58G4p5&$e>_/2!N1,:r._n=%%Xd@oDrb=c3,,_'eV2>Z]+gN0H0,D
%iP"ZmCs+X`9S)IDh:N0BCtp<i$3t4ug2_#M1#3F4p-mjSJ1;r1#NBS`PE69d4h-t&abGg#f.$QreTEdTgf4HQ(7Vg?]p<=i"3PJP
%BXel$&K"l-MV%^)8N,"6iG<>-[p:<HBgJ[0KQgTP!ctr?boY@FFMMUe.d7o2r7YSX=JWB83g(<4fr-:f#1oGc_go#K3ON`;DmhgZ
%^`BiU9VoMrJoC<'LGjg:Z.V.egM2me<ia+1e^LoOm\c'f>:^A3Qp3V5%/gm^-8'ot3Z-f2@:qOQ/8,fs,ksGgRA`*aDM%TS0.q1Z
%TNuDCH0!],"!D9k\/ekC=LD<]@8ODQhX>::]j<)Z#[KL(Hg/1h-(-'tD#%YGX]T*GG7>UR6Y$n6+&U.hApX\^F-8`$/KT/LM1p;]
%oU6*RD"Sl-@IJV#SuGt2m!;p*#ioY\S*hZ^[cZ<J:jCS:l"#83g+f?0CZ4*fq>+#:,)BX_V)F[%XH5(3WDi;%Ig%6/D5+I`;1c?#
%o9;F!IX4KsdZKIkWV2j6-8Y:7*;86ijUV?'oto1+-cq%KQ.o$bg!l-o=JKa<A>ZDqnCbc!0LZXTgSKi)lP;&O$$=Iic3m99nf<NZ
%XddsWR!jKHX2-O(D\%qPk2To";n5gKil[8NQJTp"X_'B;-#Sq.;M@;b9&fd083nRLQoA(T:f_b8FL?U;SM1[6_*nG-/h@C^ed?E$
%.[=&g_>nTa3)^"25`>Unqm)Q5J<$ME@?,7Mq:".o'OLl&IbcPo!E?h_m/#[U(9"-M<p_<CRL24FZBlIKOXOKP`IXl@K.(biYd9tg
%B/e&iTrZR!!\j.fJNVB4U4>NRG9=9-*DrKKeD95Ph$#OBZ$l/P$t`=6Ena=/[<a`pk/F.#`Pe=Ij#-e>%d^FL*>G%l2bu/kh(QEl
%<AF/#YbFug^UK^s8S2!YcV:uj@.pqml"p7Y2Z6U)U?pI5,:ko*q5snflqdsd"6:H-4h#?&gDCkD*H5!8dV>'WH$:7ri`Tj[e2]$:
%1k:8u/F;rDe0YX3oV6;IF(:+1@eUXACBlq*eTRh!QJ7*drY*oFN8&0[GJB<N1k=!,$pD;,Yhg=0a$r(.N_]Rth3Z1K?n6jAZXJM&
%ldh@M=V"_a5ik$s*cg[Oi1k]S?CQN)#%KF#;%,I4$r>IbKU_BXD*)Rb=/#k6mAAb-74Ujb^:dtZbK7/]!Vi=e4&1ed#Ye1lTq:uN
%T%;<>`5ai)G4[$Ydo\JNkaSIGZ\[M#:gl?W7&Qe0VX'7HHjE$@=*+Zg<*b2RZGI+J_tC)]3Za19jJBs3^2uUG0KbEq'4m9A_q]Y8
%O8joSm2p)PLL1Y8[o*/,15EPuFd5UPrq7&AI7V&%&m'7LDqNh]piJ086hpB$5Q98iX\!W)=,<dQ%QD93!3a<D+p&^[BJ=Z_R)qie
%5nH=/';]EYV_El28NKI8TUAiD$</]98FSs1UF@+/POOV=-V%T81ZT>TjT2;*bP!m:;\CGa<g%tjne`(hO./O/TFJO>)ThQ[jcm^#
%;FM\F#(G[^0/P3M04W&)"3KS"6^T8TKCNX653"$l<D<"W9am\L&h)OlKOj]_dD87_<gN)j,/D+,b4;hWI;2(efJ,4U_;Q9abArj0
%(u0Se@?QT@6q.6[ib6cn4FE7.8qJt;#$FOM%s]NO7O?E3!9,+\g`g=WNd`/*_%=H1`h*f+V]89KU_8i$80oNq[7Hsb1/5<K$lFTV
%7#.uQHVT[BoNWKHT*=F%GJda>PbEa?'/Zdr,WR!(I`X8O-NpIXXFtI;`$iS\Cqt`kZoS]qW`XD#<[e4_+_q2>?_f<AOK;>\6FRT5
%<L8]^Ss-hRDP<"^9uMD.38Uugbiui5.hQ<!Q,p+#JGbeA&ogSk=-Fa?`ZUHIToHkTbsYY;C"u+cZ0#=FX.ojFqpbGg23G5r6hl^h
%9hb8m>$D0AM>Cl:kGh(1]\k"5f>ZEI)J(2WG`M9Z,h^;PSHOkHmRfkn7KT,0!KeYUE.ri<N(f@@@(NU""]d-%0*O+0@?(IZ)U;c*
%:b;kokhJ08"`>/O=s=JMP(q)cVdV?7Igg&D,SNWc\TEQ;Fl7a%9fJJ6<.M8tBm@KhIpm)Kj+MtH$2XA\/[MBs,Vk0$aUo[FF5A1'
%jX&3'8c0=H>*@s'ga#I*ElfcZj+NjPHWX&Z^!.8I2-[k'Ba?N'+X5=\84-p#24LP=ET2nQ4Hn#^+spnN`_@RKZ0lP%!M-/`j45kB
%mad/>3H(C3pG`)pD&T=9p*"b8gFUHP)bUdn!9_.nMheD[iF-q.GEN$!"YNaU67(<t:iYb8XKo,hG;-6p^63e^;RFS-8_ls1<kUC@
%a]5P*D=^i]I@SSAM(k+'hltD4ni0Xf`ekR*QD0Ik\$R\;hbZ)s,Uo7jJ-V5?\3%!aK,Gh$MoC3XhG`-N(kph4oIrM5rD8C]V5)%>
%7nUCnX6-ATN=[RI6n>iL*C+'YO2Y"OfiCglh`MZaX]8tLWD!"A"SdMj;$4WA#(Uc3%7[&*kUS@<E6i_Sm\V^GCmn@!Zu3&W5i9*2
%m8&V/FhBLtET?b".TNV.SV.&'h:<Nbr.mCoL;"`b!0k9H1dPWN0/_<1ANQRi@<J?nr);oVes<L[,s>*WY/g;AVHH2>Pu`+IB5?K9
%;;t'JIhO>P'Tkhmc&NSefhP9hW&\VjdYt59]iD=EW+qhTAlZfsX5^ljeMqD]JqZO%`Zb4L"sF/06(3p"(kd[!?4Gg@8\V8l#lfM8
%rL8DF@KFmsd"FB=7SBU(L]V)eR*!bXLGC<M!r^&o;+cEM60*fO8XZ?!a2L@Ioo%fU.n@W?1(F24\-UHsJ;GqhE'eIU+P3S2i;jZJ
%]S*q0'^-Ts8rNi*A]0cH/W0WJkuA;r1nG=^=&P>MN<G;Z,2*?>):Cc]F.%h,l'R9WFN83o3SnW6d_njpTs9cj*9V3jm`rXC"A(mE
%(9U(.aH8oOECd2?)\;m'[H41)UIK!"+Z;rF0p>bT+qG.pNVeQjMDX<$4NmkhH$Pceqc.'F&m^b@kskM9;lr?;N>/H^*[Nq$/U1F7
%8j_F8PosS(GN[m='L)#[0Z^C&cQH`\E@0UndGfW^Pk@c__)$^AQu--8/5Kl5CDubWT!Bu=r#km4XNmL^<V"(<1sT9WF:C!^n:=/a
%Y;=9k)e<t9&XXt:8M4X*aq6W"*G.;9#USi%LCSM?NAsMhEOCaILHhj[_B03F%ld=O58_6ZE+!M]TEp&:N/KnK_B0naN2:@\#E8pl
%[ePK`pk,jH_k)gG`?2Sq:&)WB8JD*-WePaXR0Y";Oa3IRjcrOJ-[UZWPGgDG*o'nD=+YN>9X9IdX/BBd9M5l1:W+%/]Ig?P0jb!V
%/E%lg^>rFt^BE%Wp'Z7.;E:/40.5,'I]#LX,&PEtc`IeUPcbptIB#XGpk><sm:$YgN/;r?Xl!Luk%of3bi#]a>f+[?Q%CMGrf+C<
%36Q5o9%k*n^HpX;fg-@Th`C[0eglt.dV]I=L!.i=:>P`*9A14Z95Su)e+/!Y).lOh-Zjh`as]7&@+E$Es"R*oR'/Em.`eiC*$CGS
%[sAIg^dLAJ8SGRaF'A?=4qPKRV7tC58Y$uQ)tRY/UaN8-=*m:/d@70MHU7k\?8J:2jP;=78MO$iOl%u2?!sKT_@Ls'H'/")64)m(
%'Gc-!CC*4m6#%S\8;]]E3-VKG,hDr0YO9.Te`<,2C0u#JNfqS,mF[t3VTkBAQ^:2-hd:HlEqVd^TMm&V#1PL:D@HZ@`6o'HjI7.N
%(`K#gj5<rma:Mn83Xc6F2Hd?@ZqsKuePm<dPAtPC8gGeI:haU=;_mZ<O[;J^Rdnm"e3;<faUAo5lkq.OI\Rpi#U2N'8*C(k,E3:\
%/qEp9Y[;s6&-CtkY+Ude)-1qOaI,7jS<r'a0t_YWNMQ`#C"U09G3_*O7T@"kh-Jgjp.tA:+cJ8G0[h:[R.t[hP2C>8#p$mkT/u^X
%VKn*DU#VRG1Qt9Q&""+.>]9`m&[Ff(%@i'sG<k11W>9Xi1($TlA:KuDV4hT'XLhELGt8T%,,rZ6UoE$N?e]AqGDrYRFgIL0B4n^L
%9:"-^gMNN295DE3k..h)jH8X"-<<cQHmf9gB!g>B]G/4>?5$`_&(B**\;`n5A4<o?M?B]WZiuFe4>,\Ibr`F\$b'%jq)V>UEoETt
%.2Kp@2IK8(eXVqr,-l\"bt&\b<T_\fBRD4g[Ob`'T.-LO-aK!QXY`+%4]Q9?E<tfM>AmgX+`[*aX&=jC83kCXhWCDW8W^2*Te'%d
%39e(+D2TH\Ga_flU4k#lVkRkSH-V*lRTWM[$aip%a/6.bk_<]>FP]UDU5-MpVChRs-sDG$YD],PRh,s)1om@,*p8i\`9g1o^8UT;
%\*M+S$E$?tr>E,r])LNgW5slsA.lB;/=hoSDtukQYob8NEk!ODZ)j2oY@(6@4@gtX@[%L93C%JCMCdK@Dum10<+]QH":#/:PuCoi
%7sq<*\f&Q+BFWNoGVkHD>R8E1;,W#S^hSH/#AU)nL<83blr\/3cSUc"Ej/Cm-cJVR=^\`>]PU0D,3gPlBp!P??5>43aW_N]mF#%(
%AM>r4nJJ+'1b7:i=o36.>r2<!HV1p(4_`f44-sU9=XEuRhsa!o7$7s!B?2(3=]sgoUr]i$gQc@V8a[#CPl]nHaH._R,85#G,i'h<
%7?Z/?P(JBaL>>rKc%+fD1_gbI:q8B(:Bj/G_T/>5"BKZ(*;-\1q*L/EHJC@a_H2oVeR,Flr&k\84/SCA-ElVLXps`2SbJa]@\h$"
%Zhut1;i5>%)F/(och.JXGTd5;$</]09+?mLG;>\2A=K@u)K!UL.C(6IPEV.A**n8aH0ZiJV_i1cFHe!(G;tMS3=d_iNQZ?;47\U*
%1H03+_E]Xd&D.[Z8H<8Pi,ocF_1T`]$_Gq(8dJbAGanrU1l\dhRXl`*1g'CS4JTD7==RID.>SOoMh9@8E"7rW3(O-HUI&crTK(="
%J[,u-XZB"?W/T"iGj8brdOfe!"Sts1-1.#I;+cSWH;*4lZ#%G:6]_I65%55YQn2ha/h3ROPG7Q$[YL.9n99V<kJ8#W#\nnkU7QsL
%BAo8*(rqK!BgT-3c[7G1p4[%"'uP#NO+m0+k4"NZj"/u2ZGa"KRLBNRb+\ui#)TUhaOXJa"*HnmGe6P?Q%3pEOlkF.GI(oh1H-oF
%&O=hJ6El24HADr6:Gr:PYIn!jpcce`$!)54i#-LZOWNH^\$?X<F&j[IbN2c^8/6lfN`KX:#&+l<e$@6Sd(pl`Q7,(&2M2WIG++X1
%m&"`\32qQC`i35W%?>@B$>[1)`ZfFrNWKr&[^$a_]nf"X;)7O7M=*M=TqcPu7OE7d0mMa(-#Y5.42H1$++t,jLmbd/r+OD\"Q#VW
%=@o+N]Ga-LNj0e,=D>cQ6CeOdKMjp0J/KDdG<X1=<XK-OGD;+](=Jc@&tB1KB30kb)baH#\",oe6>=N'\l%6#$5Fd7ZA:IX3mOBh
%h7*TUX#<F/bn(<WA=co^j@<RGMu[rD--CghXs2]Ii_^;ie>-q"]l!Cq2US*S;."1hkf\2a[u&09`"SFM)6sQ4G_!+;MQGIk`.=,\
%(1As?;'C-td:QJ*[JJlm$hi2'd[UP$2c-hZ>&nRTPC!i8d3nH3m__Vl3r_:->b7M3*I[:"95;%%Ol$TaR(pP!-kn$=&d/YZa\G,d
%LLa[ga'#Ks3#BRG_P,NH1ibG2'I0ro/4hQ5KnBb'<C8Y&T,#c]SC19WdY1L57jOXZb>,CRXD#".GGiO\3?&d3_+!hPf%T-7g-7bo
%q9*r]BBh&0\%f>jNP<$oeOpt9Z&Rf![Ho`&2#BC/ZbZQLBe,+ZO`=bO7%+p&-V[8uTX?lG]IQ_7=\6Ip#X0A-Sbc0._.aE0Do(Hb
%Je*Uq6d;pcUc`?%:?Pns!q4KgnTj=o9r,:<dQ$Q]-='=(.Oa)g,fN/3#q2;pYc6!1#S&N/b(B:"Y"l2CC$:,R^=!+[BaZkO``arV
%`"*59V/bEcKH'qZcrSCNMmU\\m:uB+)BCapE:$%#eSi,e_Errk=:e`>(J#F4hd&nUrdquL:m^1D_!Wd%+[gm1bQ^%u_ET7.aqY.E
%I%mJ9Y[USi,glJ.17jXS8RYF8(50X1S<Cs"5ZfV]_5S#rZ`hj;P'1%W@nDe#VsJIej6d($::VL"`c7Y#kQ_Tc_qDd9Bejf#=oie+
%QM6VSH$:oD_.6CDV^-3TXlXhIC;f"KHgHnXo<ho_a6b+67=fO!5f\`'j1gJHm5h;k3Sn$Ns2A`m3TgqS<n'+!Qon!A3848fVT,Ti
%s'dkGU`IL$U>V0pQTB$>o#5UUN>km:+`E`J(SEM*d"7P#_;bp9(hFuD8k?l6j\"c<9#bE_,_2Ad)T[$Z/2#Ooje=9E7n'>?JDm4H
%W>['sieI'#FXPFA$nbL1SqXZqes_E%h;+:gmk<H<O;Qk0@_]2Udahiu&'q$#oL\II]&;alDj?OU`EDio#>#1LHBXo(inKP3%/?4u
%:9n3A8AQ-'<[*S;`/mJL4SI-)B^?usB>p=b3scNF_Eih8-)q%FJh!r,f+AkZN@21l-fNLY_2#9.CUM3C"%8=n%@"cP<buEU4^]Rm
%U,c(l`l^M$&=-.U(pYH=E]EF#!D>.^*D'FQP>'Jf:V;jS`j6lf+d,J*,\]-akt=Er`=p*)g,qD!JE9?;rO1BC@`Q%=8Ya;S6kGP^
%!2T.n"No\6MF^s9kp2*>G,KI1c/?hX(G[mVf7a*615"0_(7/OPedV[k/K'Q6A;LX_<ZcNhGGf"WVi;$d5up.%H*%iWIVM@m)tKUg
%E>%Vu[Gp[M>0T%'%TgQ[WY)t</r[2]-])@aq*$AuChW/N&6M'X8HNfq^a'6*J6$V\E%Tr[DhVW8hfs'2P-dK2?2tAC8hr;*`klKB
%8A9@B$4bWYZu]rO.-C"J3mnC:K$Y]7SmJX.T0bXkH?oU!nom]`Y$N4WM\`39@q2om_5WQEo9PWTfF,GJr.I'+d?9WqLN&FCecDkV
%*+5Ik6S%.<3-$Aon`3aTY=(X(U$Zc_\"oj'<#db_J4FY5J<Q553f]C<O0($s_kAtcVMJ\gE`!aH@mrE`]L#7g/3LQI<>&[ob%0>i
%,h?:SYMiRK>mmb,9'Be![]Dn-bltV<%-+G)%;^S?%>>%/GfpEt;hF+-a@]j81VCuteeoEijRK#G)Eu.")CPr8!U'oR-2%C:BlOTd
%K/id:Q2j_B=C#h=L?s#PIm.=l,5KFW#U&a;'[oJ*3DOVp,Ge]j>-DS.:sno#>1L#&Wi9#$N8MlH;!c.Rp;5%KRgXP0.?4Pl@7XXA
%8rO**4=ll+1<\Sm[dXS;?D^:@QuhJC5<OT%F!Qk`;%A\,$s$qQ?F&PjLcgU3!-JnUP<"fD_@or=_C6dM&lt,?&oSOs'%'!:!b:%&
%PA#]hKk!A$9W$Ka@h0%C0s-Cb+u<HD8SL]uIKi]EE-u2b#*W!tZ#jVicp!gAdM*IMJ/Xee.1-<$('PJ/^P1iBGnu;K#,kfE(HhK0
%Oq;gg%'Bpj`j$L1P`\@i*M,5ZnTP!lMF%peX@*JP?aHM=MMAY!OL!r<6\/^C!6>-kKnD/N$qq!`MC&MlB*H`8TYW0j"Tt=&:WKGV
%'23mnCq'XqqNJ>:*[9!,:8YsLA']U"df-LA:k-e;UJ1Q?WZ)s9;!]WrVJd>a'mi6c-Bhjo(R(2?a)>tm,p^KD/#D:q)^O2Pb/2`,
%*Lk/GU2Wmf6(t7R<e;<:E8a*0:Uh0UB*u+u+tcVm'8cX?@HdetZs?N4b7i;.h4:jG8D1LLqd$Q]c9=r!m),bX!HWAViKj]V=e'p8
%=3j'hp8@r9#:R-fgE[k881;V?(-Z>cV.%QL$ULihK.[;/DQbYqeK(hG"ASCe>mQ0Dq4J/49Wp@-_HFG!+f*EsIE5S%=SOiU4/kE^
%rk^f.cMnmj\/s*5Hs2-noWb5I_s[GS`lsB)kAT#bYX^8i_HJidBWt8.Sd7:K9rCR/E9o4OJ6U9U8V-k,4X`;S]T]5Z(_t9AZj$IO
%Lfm$iDTmu8$er>4XI-'O";`dCTY0e6T9+j8.mbCR3U$i%=D$n]2q3@OUKfQkd`R$t]k^C@XZ$>OD;c_#TAQP]OIpHOT;k0fSMBiZ
%F*7nZRJ,BX3/]mha3_3VofA1X4^SGdH.#tIZ5rDlU=%@[<"j*hX@02+.K'e/HYWa"5G@5tZI8O$4Ih#*d+p/:FZ0,S!N*],G@;Cc
%gGE5A$Wre9dkQhbqA2WN`,>l7eqF)B^F[9)#P(HTQL3i\WF9K[IUNj?9S.sin=MEAf[96G]d<c82&j]le%u@eEI-&-Xg'4(<LI5p
%7Q]j+/,OJ0$@pq2XZL3TFg5Mn,UfU'(UQgG5]tuQlR8RQ$SF6_f%J98#n2jsd*q(+H7KI!n)4^_(fpq?Lg]8*i?bdVKb\GA&IJBU
%g#%L7nq%66JgY7B(NYk>h=t[l^JdAm5#@jFih,:'!IEOuo0d"6a.:b$HYaRo.F@.kURe:@;'af[1B'RUFh:_V?r\m-&.7'#I2<+1
%$P%Ug:Rmb,0'4XE/lLH!.Tu7arV/HgT3^=0r^hImB,!UU^-i`Jll2WY)>=fOr`BYC;A-Y@Nt0Ob`.p\,0N&P)&d2OXCk<iO<cB/(
%cm'#VGt*ll08h$.Wo0C2k,]V9(pme'^;7jN=\i0ab-Gt>_G^]\A^F:6V_KkZPDIFj]?)ab@VCP(aT>cTA#&lp`43Q,p4G'mHBjI)
%7LQ!L+b!RS8eTuNJAF#e(b?(e'aBEHb/7I%5f*U`0UIESX[!B6Z*lp7+g,(uM1`&I"j_Bq[^M)*"s+%P)=M'sRUCe"PUj$Aotr`?
%&PM,\:)rS:m*-9+FD\S:UjeINLCmp@YR:U$].gI%A1PY9a,i\1G;8g=?pKbCij$q!G0Z7>\>V!IE8Wes'p1V'$8A8VGWCmQO02U^
%+;=Fo00J^GNo.\L/^LO64%_#bCR:$qr'k)t"^X`Nq:6jr;icTOD`MMA3tABWi5@T"S:mJ5K3ge5'89D]Xd"j@L_7ZNb$qH&nq%U'
%NNm4bA\I'a-Xjhup_N9cbj,(%/Qj*683a_eEHe)jl7VtD&d]mUT(X:fhq;]]LGQ57\iW>-4=,7oZ=BCPPu(U5i&n53bHg;R4mWJp
%4c3mMOaktSl)p7]Z%r:.*\Z76@>.?"i>S7'"%ZVR?'.A11Je195KSgb1*:Jl_a9JMC$Qgr'DW;S=ZpW\Emh,3T6<:C$2-3!'?'$C
%.uKh.ZH6o?G3n(sVak$VQ_43</j"7FIA3_">EaU(a7().'4=g2P(_kM!<j)77dip)4I/Gj=6=37kOLBs'ehZ\96*iAf[HR[-:.-G
%=g126S0]na;[=e/S4%_N!Y'a9[gDEt&Ln)nBOG+_eT%`c@A]rt*,H^LoMZgN=Cn%V$lara0$F<QV2T>Ffbm'.#e895QG[mVl\2fr
%XY?l#)r]U`Nb>I:JV4l%b>CeK=QK%?>e<@J]8u;rj6]%93gLJc]A>hhO-*Fl`B0ZeX[L6,1)=b\-sCd+D'r/H?o5#]e,MXZ?e-2u
%DP[.;r#b38,5e/Bm*!&Pl.PL$B0%TUB0,1+5u[E_Y)?25QCdT\^W6l-+\V!k<0Te?%h)LuSA]T$6itI-Z:f^#mBbh*Ipa8@,+Yp.
%r#eC4%FrDH#r=08.64+Gr5U$r#_.ELs%iIhs*hqkGZpWu4$&BUGt#g@\BRmdqDb>p5-YJZg[]4.IR'A7g92bn^0u]fj!P3u2rsl!
%R1F[?^t[C\LrY'h\UJbop=8Qujj!Ifc.FYeF2^7;2FL!.HY164S^;[(g;'Rci;:/8/>$6N>T7jHa0ZO-oLXb=%832@U1N/[ctm-+
%><eV%U+gY/@;`1dD0CiSh!'NpG@OqnQ;9,L*A^-P`;o^mDHt/3=kFfrqLm8[ell+dbq-HrKYmY%fF/W/AhcPGC"_2Y?AH*p%/j+.
%[\cdN8R)X%VmgJ:%Jj2c506dkY+mj_ehO!(3&L7t?AJb77p[b4o"6WFF_f`M?6O?T"XCC+)DEY<0Q(X-EhtXEqRP24a]aG,;-Ba/
%+G-P<DfXN`Z;QkXXnDh'.Q$g1[nP%ikN\M']'47edG1F5W*&@nWd&_.FO;\siIm)[1RQCd"$flHl6(n@0n7'[hQAIaBq/Rr4sB]]
%?!jGY=I@I5'XfXac(Zn5H=?,+fI[GO-PmOWl\r6UchM+QZ;'tP`PQmu@I#+Pr+;3XV&NLpmZ^oiG5=/(B0=Z6O)++O&DFtDTAKSF
%1RqTtGPs`f]CfojRB?nGQ$q(e_H-*MA<>P`L0Z^+r,<Uo/!*JX+0if6#4]U=GU4e&a0sjIn[ihF/9t6aGgfKM-Y0ab73^Q:=hA8D
%:"_+jA0tC_l///)i3_>2e$9[pkJf9dNm4dRhBL>bYM+Y;R:[c1'`*\&ddo++:RVTSCiTnV0,!npc%a>6I&</nH[Bk[Zdi'bXJV5?
%ba0r_p-@)$-qi8SQ%dHe3p/UHrr1a>)o*26IIif[G?ZXDJ`j'(4?['tmEfs/!0LOCK8gDDguX<G1$s(Y'Eu7YYKQhI)t*8)@:(Ks
%GMjZq5A5+n4FqA>#_OLLb)5<g^#6G/Lm//K#;jq/oY0!g&3uV+"tGo4%LXZk<$W<pi<7+L"aQWKatD6H'0RS0$9/,U()Ndh>0@;)
%$AHTPV+NtsKaI7hmrBqAW7gO.;/O"fNnNhFSRWT9;I'7/dp`\&-8@pel8:J(C24/h!2%-?^eb7CIc1GX_I13O,Ju/TjM5oH3p4.s
%o%V&*SneT%rO]N\b(@4:\:40\ZTLO>.q3dMil"u&BPI?X*DPnE>6RF2a17QD0L$->"O:S6[+0QjQipj45HT_)!>/0bi4Ls5"$"gY
%cW58sN*`'WVg5LbmV//2NFC0]*P*L%#AXrmjW'8]MQUcR65eHChpcTG-`ri<Vb9DK&V`H4!<=KQ;To8\ZB6E*K-rJ7ng$ICJs)?1
%<"ePcK1us(4$CNt-.>\s2oZ$DcL&eCcBP><J@Gu-SdUXFVPhU^99L)=@J=#M8IBc?,8^&&-:'f*gR5dKelf,L,gDls]%,gs^iSu9
%`t;KcA]!tZ;N]_8&Y.L<-MiNjp;_9nDtA3I9m^`kUj(WiS=[_(GEfc;1!MUm4a1dhB?@cNN)+4PRCh!r1()7j)-i^jWJe=7)H@Mj
%DDYNdf.QT.lk5XTDP=%&.`ID4\9#ht\tgjESsfhl3OMN2:'r<HL9H6:#%&d4F-;/PdaU[1X69T@]A5GnS@7IB!p`27&EK`(;'S6S
%R5)@O(E"h<CVfjrou9JFBhe:\%.LHuiRa"]-T0<"SUdB/=R]m(9cu&V68&NKc+7]lf[N<T:qk7MnX\L1N)-$[4j_pCaR/T$[J*lU
%8SI2Ho3qhJ^l.bn@VsoZI[5&7F6\]"mU7uQ`b4OT&VFlA?a%TMk1-NgLUXnaY2B9@G,m)oGcj6C]b6o>6hbLgUJ#>]=5aDgVjqh<
%<O4?/Z0i";&.TJXPsLH=.T/59#>eclQij:$!8ejMGA0jGlqXH01r<1L,LeR:l`-,6CY!\<U7Sa[8cq%pB2u&D`.63JqcOl"!G#8p
%Yb;b)Uij^oX]Lc2\u<h1QH%$RFnJXi%'=;:BT.788S8G`k>km2:@SC,C9rSn(Im6%]W78D+&E)<B4k2$[:82EK(-C#A62`V3q0Rd
%GuFr^,U_$#;n%.T%b++IVeP'`ID/Wq_:k9H3TnVUh+o>]M&L!*4)N;U=$pD8?cig/;=i)qFu;t59Q.%fQZs3Wo09t(ICFQKGCA+L
%]RG&,pFMf":11[8[OYd5ZC"V*7W6$T$FV#fe.`lu!_#IF8-6$Jk+?&!&%cn?]uj.<^h^Q4lV%HhDVB)nRi1?=DJ!1Rr%nqsH$<./
%GIQkZaNtII8AUWA5I,E7P2I0UH&O9B+_$K=4)c'.^'lSe9$rbK<Cp2F(bmWeSBt0<=brL]9LkFDU%3qW]kW]@L4R0#.IC,5(:c3Q
%jM)hp;^f^)%/_^V*Z>%X,KNV)rZ6$sWKOTQMiKo(Y!R3G2oO-Gn'E@P$QoR<oX\sO8^\G_E9rPmgR(*F>:DTEYAJp8c@=JHcONDX
%A[JbkPe2rJ'[IG]7Y*]/%Y:W)+_m\!.3p<+AMgj</[XchfjOS!;oam<'g1@'^@j@L9M`32Q+PRn[U[ShJ,?`!ri4lDo$6QnDVjeH
%g2;Vl^Nk/pY>9"J^+E]J=9M6XgE%%rAI&E+QD9NcJ/nXD>c,&n!@$R^.$9`"Rg]`Z@&+i+,V#!q(I.sN^*j@#Q40-c&Ts[EW\R9V
%RtlDY4cToD[$L&n=:GXLQf+;J(27]_M^X*X5XLo&ps[%UOoh4dAPZ/oUZpt\*\<aCH[)qV5!rt0%UC"HJaX50VQ!1u!$0'@*,r26
%h(@I(c(-n>4aKs_I:P)h993:/*7aJ0)!#,/<,4U-A*Et\s4In5BDGPRUI]dNfT9`hi"QfZUR+%YA>kHshh!sH+.Lj@0S/L5>cjHY
%"(Tk,OX>RG@Yok)gaX"<KB?IhMMG_fC3C_YFlJgV<"TWAO4O)sO>@ri#+,LMY;i8.a],(KXkP,da]s0JKXsZ')Fe,!'4usqOsE+:
%.05H'*F5D(S.e;_:,9V[caf4QCl4CL'*aa9F@IE?K2.E,RlH.@nOe79TJQtpeRu88T3=<7he`;^1Y7a*kgP@A-Oc8eWrBb?s76#9
%An&cSVVcGX_(/<%^Q][57E8tj/VrVi\CukoqtO-ta=27Y:&/JC$X=p[qYEK_2NS*N#QU/VGdVJ[6;E-Ag8m^MdF4=MDP?T8?RRV+
%!2bbq<Ar"S3Q\n!N(Ho'iU5to-^+Dm)%7Sm^em<g!^LNt.9$826q_5K>,[0-Z3DTk,XGfC9Hol-W)4`nPSTrl4t'#=BHg"o`#.FH
%NNI+j0%%S$6nhX7'LX^!j]Dr0LS?4G&l%@kJ\Y)N2HAI3iDc"Gmr)+"rmK[Ld!)WW0;rG/`[".)'$@Ca!h;tO4_0?<qqIUThAgDl
%"(CfuF'.)PME'%o[Rd?/#!:<I[U&b?o)`VGE1/4F\o)VOl!C!;6j(2?>A^OBg'X!o+Y`;"&-*.)J]:YiAt#5lm(LbO]juLV'i[T_
%=G$#$QG;d2,mh#.jVJG,Kn`oQQ\B#]&FW[hMDsXqTZQ6'YR4DtQ06lV&bp5=e@Mh>m,5:NP6j.BaZA&(\]dp?&UC(RF,6aEH.@?o
%fR@orW1C-BV6;K7j0h;$e8GeB>VP!C/dX!O4ro&e0]`Zf"m`YC_mc4Pd$hg'[Vd_FE-K4h:&M)PT\orb.6'M6.BgdNG7lTkiRSZ;
%d(o[8P9AL-oT:k]Plg`>%+ri@ZX2R?\2L`!e5ZQ:cUtVRodS:nN>@d2K0n6bJ_As+7>#b>V(r>gp`N.>grnZ87?^9+lVcG20K4Ku
%*Q%)ucZ8(S?)<GAonTKYO?)-AR(LlUiJ_D%+[#%XbH[ECZ5S/k:Oea:O-&DdX[lKT;M,6("@PW(5P3^(Tfp*LAo@hN._[%i>[4eB
%L!XY8^It2,`%F=O,amihcBZ+PMI9QIpS%O4`]f0^j1G\[KushQ%9q;K\G+>afSZ[k?d,OjW=hTO.S(\fV@-T#2J#9!.`U"910)EL
%rU@kY=!/?>[ko]]RuF*jG2s6J&?Sa51r`n/eQISf9<dqObAmk#X;JZ%6SNC?#qQI;Z\kET^t%&rH;^&k#hB-beN&(jB$,/Rb08ah
%AnJl<'JD?H!F=YS"8K&bWWCat_R.m*kE%96C<D\s5AlM9cT;\B0lQb!3nE%(Y`o4^CJI=_1&qFn8<:]k)+"8D^("nu,43//C!e5i
%@Al?T@67Jtq9e[9b:Ds,iGRI$N5Pgn(m:sXXN,QFR"ck\B<JTBa+fD-!99%+9dn+/<gWSB7;*HIPq"gck-kXn)/g4_hb$cTU)c;X
%lu]j@@;6i%GZp@^Tisr*@_8t8[lm/ONC@9U1cD1.E$AWL3/h+%G-R^.6!uq#7SXFu<Pn[s4!VtX>K**m$*AIFr9/.gS,W$PRod3d
%I!k[df5J)9!s$MEAU/Ue%pGDEC`o-upjJQ8RK=&Yrmen;7>O6[.WhhLOrqO6$`Y0dV0](@OX,9jL_gKBMPTcakS,F:_7gLV][7-0
%=X101CS"'#U'bs^Gc@hGF,l9+atd'e1a]fI!issOfbc0WQ>Kt(W'=7&/c\5OX:uc_B"5QqAXu/O[MOItC#LQ?8$mm$VheOrpuPf$
%(L7)0"H=fFA13WZn(e_`lntpcr"RkF]@W@"L''imQ#omJg:I,/W@cU__7!A</],F%Yg5r9/PfJ>f0Rc>A;4Cn)GeMORirrBm)H5[
%Gsr:gos;2^LPhf&\<)pd1U<$m$`^D^`66%%m?hQLr@j258]0?Dn5@^c.j$T\mN0Pp:J;?C+jbm988*bQ\`kJkDF-1EVg?02F<)>d
%).MmA:!:-YV,f?9?#Z8cn#7qpG5$]GbY8/c.CkT9LG$1BD<:.V?"k&&BkDou?,I]g9O)b]hn=IpI9p-&SoX`q_.q(S:^"3ToAm&2
%m?iU5!kMAPI;h='P^@DMXAB/5jH-<n3$Y50/!sgA9"J0Tl]XZt)6i/K!BZ<2l$GaI*QMV8IZo!sNtuBt8`=g%E5!HIN7X0mBY)8f
%>kr1kFRi@.anlcMMhW/?(:e67N@^2W-QhZ;GsReN&<BqV/h&6Er^]V"LZpr*:G(=K'QPL,7/MKK%6DB1M8iEVV?L8t9%(1)/.g8R
%hnq@5;9MRT"/TO3OeFBM^M,I`7C*a[C+`l)5eRgK!RpWS7t..k][*s[Ccd+6Fk*j`)a^.Vo(fg:q>:"aW`<Ij?IBVipVmTaY5anV
%J8XS181LIEX`#c`N$>WGGrG6dI4c5JhXd/$Via*<4F!_.52G<\!U8uPd5<"m(X;6lYH2EqXogNarEKMnrso(H((LRQOInH7'3Os$
%\ik`\+,_%Zfe@/.7Mo8Gh@V.Qe!%e+@3%Wl&+sSXQQ7K5J;F5>QRMO17NcRjZd.qe+M1Qf_':hc9Mub00/,n`>a+i)gDl9@?ND_"
%WRI$<G'YsMNqbSW>22X927T'D0(,7Gg:'G'9^Sc"2$EhEL+hF!]m;K[4hUW%[n_$I?SNS6:^=i[ksP(s6qIj8dqD'9@*0*8;b!u,
%C0l/(:F1k@:(;)-jncR1U3@IcUZNjZ*GGeEM:[`0Cj?3(cB+Zj>[+tR%GBWJkkB!'6Lg;en+f!7q^LFdCI`jJT=>l3h39q)Q&5W&
%63]W,!$RT"_SdU*Qm;2[!G?CUVupJaoRY'dd&?),koT5K,$%\n#cp\D$XFRJ,]RXr>"JS(Y)`Et>3&]<q^b%*-0Q/-T\q`.d^'eh
%k/?J'r#P]G0o,.*Zo==d']3@[;knE-b6*K^or\YI)V'b;l34ZDni#67dk+V@D-Pk;^Xe[o:D_f`bBq7^ij_ucm?0/F8Q[f!/@m)8
%?/cZ+iYUC!kRtXDP[AN((qLtD\g/i:_l6qIML?hbSVC")mZ3O\^1=f>8l@lGdUJH:@?e_-UEm:\j8Dgfqb[tBULY/;bcdK8e_X'=
%-qX/'8SVTfh&drB+!kVU9%#Ccir)^e>MeoL.#ImNM2P4dh^.T%KbCMK\tm=9UIKBgrifj,IbkWL=,dcI:[Na<BR(OG09'`%^?&W8
%X]@2A?#[D.n#7p",?C1=2%>!K&F&*Ml/Ub!c-9;LVY9kF@FM]-oKkGrhX"Onki6L3WPg*?i*K]H6D3'G8TKc),pDWAFO.f+Pk.;V
%*tXL.23bnrfK%.Pltcg'7iag>^I\H6/SI/k]^%Zs\iS]C3u2]]k:)EK%P4Q?@p,_'UF(tCiYbHPr7CIcptb><f/Knjh!WD+\KMA_
%jscbtBfb)dcnjL5*1AtDp8^^J&6KuD<J(^6q!jBWRaaInP[?SSmY]Nn?BP'el_RV=28_>uMS7W#`"8F4.s%aD:/[J7s%-YqK^ZA^
%,hQcV!sAj&l@o\bL?G<B9[]=PosM_b(Rj>J,F&qI&eS?4H&d;=J`0N0Lqjqi)AZXNljJ[XYPW-h9Z3j*oKuDGr-6>>lJAr?q<6pU
%RhHgsE^-+iQa9-\Gs6BHU8KWaDeu<^YB:mRSUla+0el.?!':T)KLH[WbtrtFZcu3\\iogr=0h1'^];!';LnX.oTY0f3'`=ack\kk
%&p-/fjXDL4R$>6%4c!(?8hX8FZ9VkD>'$>BCi*rHA>N%&4c[FiT4mpe-J2<M14=,[ft+;rY`KH>=-c(aXAqJ`Q,^,Xl"-E,(EC/6
%gr52\DdL,jgMFMsY<Qa5D:F.@j3rS6W&%V?>ct]l"Aq0/:&Z0DDFK\eissU4Jpn>e2.[t-P8h&2J+>@i&#V;V)6Sd'b,6N+5*uH_
%1i0@GO?SqA-PiQf,Ps<8"AYW&]`\AX^*43;dl;@U4l+2(F:up?@NoOK<P<sr,F:"J6G8,dUa/[;TQ&*\#\`_L;nutcKfU1n*Q.t4
%\7Ja[*PdCW'1ZX7'XUnu@(37,W=G8k7B']D2%6=9Ti?NV<.DY^GJ@+$^Jm:ZC55^S:o_'5WjuK:^0dnS?`G#:<C<ac0,7`D(T!Fn
%AZ97R/k\WOMm66KS?5b6ceq]"*(g\79+CVgp%M,PpIfWrWGX-7%AheUV:tgCg7^bfhRG@*J%\8eRU#<K$Ht"7ht4Cja:\JG$DEb9
%<=';%UfA890`bC_CJecI%CNV!'DSYP<F`0Pg.DhK9+CVgNC0[b-oDL2VYd3eqk`HPV<3-$[ZMK^-k:A6GGV_sd$XL>;VQ;nV7&tI
%)!t/"*D3_,WU>57mXD/7I]<<qWF724%&J]Pe9JaXGe_aM^XRA?e3&taLJi1pC+%#T\J+[7.]inQTN?HDP*',^1*7FjLO*p%Gg.qg
%]"Du'G3dGmj?`>SPtMo8<Ok6W7/m/PS"&#bh>b4gnC-h"*tR+YFX#]Xn6Id+dlUY)eW\`DU277USbju:\jUemZ5$mdljucJ,1a!]
%'YkWQ?T/8@la/J8ffl9LHKM_=!J+(CN!i$NQGcT-NX.q%]TK3*fc-F@o*L8#ge(E=*HRr)FCf"Z"Z$=9"$&L%]I&dpO8A:4]4:C-
%pjp@7VD)6o.DoHt4pOEd21)7j-5FkPPF:5DWhY@#dhV42nZJ!j1/4*@7Ln"_D1-^I]6Lafa#3AN(-nBBls^7X#f@?6n1lYliMK^5
%M]h)A7jscI"$!`g>%<%W<TrZ&_/tAp@RW&+.8Z=Zh8p)"1UKfS/BIr9F4ka$6ndK%bK1M>5=1h-d]tZ&7UR,IhD`L#nVq'd0+S%3
%O2<oA(\$$mp!4GED$i"?EsV+d3XSLVeHoaQMulhb>27XhW\e"\U5,:<A9\-+\3jM?07IE;PrbZ[e#aC0;Fd9Rl)F7X9q63==p9HV
%/1",D&d[IkQ:g("hd1g-Bs[)+hgTkYT5L7.ouJ*nnsZa%-:,JX.Vi%K.6dC-Nfm<CBhb_-]'pWS2uf2:H&HDN!:Uce]"r4j6kfeV
%?A0SR[?6`-p-!dOD^>*1d%sYCl$O@X!C;mkUqC<Lf5Ue<""RKXaV&O>WtKT.eV*m!4raV[Jet@]M);KU.O:lPoK<Ep!*=k"@gn".
%,XD8^!h.'*Y<XTi&2f"(NO96K0i1S"*g:[SQL`-;*Z=es\A5%=`gV]b7o_tVaE<*=*@T&^"R[rn#nkH8eEMhLH,/h`?6-btO)l8V
%]JaUSA3_tek"1UJQh0=bAQ!HS[?HrLl9,50g:moNVAp2!JfDN[U*rMK"9tB2l.:n'5.D'@'S:_3S3e]O'a`4%J;k5G1,)dd%G".I
%B2fu3Ciu:*!R5Br&Kf&d6>lP0?aY3RG][L9$.)jRkH]qEL<*aVJ-Fji&kbdEhV`ZrXT(5LeNfW)Z]EZPBnbFU;8XOAbmT=U#)]?a
%'>c(#bQ9"S.$E40ZU#raFe]KZ\M76OYit$E,,?Dj;aLek/Vp0r'*kA301bZ&e^o:l;ksXC`.H:_mF9H.bum$:W?:.!OIUlL5/%+[
%6!64^)>P8umc/YI.TR*Z!pB3ZE3d5.9(<3Vq,O]u"_<q72RH8+7g=$VWQ.m`ND_+r;C2jYU2o+W1,I[OeVX*Pk\/E5Y"?B57WNGn
%)*q^s9'Mgu.3L>f5oDIC^Xb;c%uUpg*D)2+4qs8+40!*>OTE<#OK)/b!ho,cGOX7Ei^X*V!eghCdtT+Pn05pVBG)^J??j!+TO<"C
%9j<h9/33ds#BVBY6!h]1@aojm`IpIoYaA,?C7d:Kht@>U;n3t,[*AH=SPdIucQV^LMPGt!,7[]&ZkY\F_9!97,&5YK-q4H""Qg]r
%UFC2)*,^,3'5(;7a$gk+(?kMe[spTshL*uSE;T(@lPhO8gkaaACfcU5.^%jAZqK!O&?d,AGKZX&+g!I50A^)%9H4?5!deM6\'h]Z
%"&c5;J15L^"87,YG&QRgS#tXC>cBGb<Pg&?GLLe%l&9&\b9D);;^Xlf\gP,hiTfCiL%J;)\F?'9`W'oMmkaS)I#"]4jRVI#S"4Or
%e``0'^^Eg=.n22T*oo\e5"WW&5j6NKBkgJIafVO.H+rd@.t_li04Q2M"!lahS&s'"^'<C89f'tNh0e>aV82-D*&.!`5?Agl)O5?W
%aBgIsgP8ALM0!EqX+?3n1%#f/QA!t(&8u'Z7ik@VZ96>0FqkPTLkPUKZ7-6R_0#SRE5%2K)se".Ff95L1(6KOgVceqKC`@oI8Wn<
%`J@Z?';Rb?;%)7FOn75+i"o2k7IA"Q!^)U3Ri&$hoO8VsUZo4>J/BHjVL^=<LjTb!"Y.+`OW)$53<>g.XL\W6G:SoDX]FGo95.K3
%^7>Vep*f*KX+7-]gL>q<TAGu)Gr<suj'_Pp]XrXeiTHii^=aQ2[BVi*Nt:97i#]d5!s")*n.!B/-s]G#cAA>C2m5j6_47PsqhL2@
%*<)6?SO-/;E5D0*F=#'N7YMa7r=)8"XEb+Hja&YN,MkQ6Z0'#BB^L6AfR<JGrEPChF1)&KcRuh:en+UBhOkj[>.2bsRmp1WYLuqR
%#VRn!;OD=nCgjAaM0Zr6!^QFk%b*+A$M!*bi)C:h'?'8/&lFD7JB394r+tGX4DtAG"ouKuoq'L;4ItO^jge[!$hL2IcO$7jDq=WS
%?gobNY2=9g.;PiQ+%<4rpgu-qbbLp/K^+E!3;NU+gTl(=s7<kWX_'OU_pbs3j+&9c'uKiraNdA?jh[T&-!)!4LD:OTn#c0M[W#/i
%&^6_n_V9SlLXA`YTed7T0!P/AJ_V9#KXKA.Cbeb^2f%/E$aqONUR),iOaAI40hQ1G1b7n_hKd!nfSm*feZ"uU[A7!n1gB&j"jJQW
%Ei=#QfpsF:?6ZU4;Ycoq4h!ic"UUHk^sjHi%$ahUHpBn2CI9NoEg/Zq!>R/242;^O3,hldJqI*=Y@?M#+XSU+i,^>EP&hV-cPY]<
%+C@Jp(mE;k"tJ`f-4rS23`Asoil%',Xc2O94+(uMZPJ,udceR+(7#JJ,l!&s0=OcATNe0k>_=#jTqn(/n1_aSaT[+/;C??\JfkrD
%2AX_lhcupji%!ur163&3F]!-V/-BC+J#(:KVKoLk)SpE5>i_pC:ok@bhZd80EkD]?l\5pS2H/;VY_?_=_'ub(9CnIDJG6^Zj\)qk
%/(<m#N@JT-nt#'-1S0s.a#24+\iBW]*?<^K>SuD\Vht'n6./c-5g2n:+]fr8c9dK@KPkT_9ed!]9O\+D]G`s.0ZiB8E*#)?#^W3H
%0m28rjA1%O=[H<6r6u/1?+jkUkA"[O#Qm^2AtkYZ\CTTG,XFD--Qm%5+K%lZ'QKRUFT-oaO:8?,C'cmm:P(61HQ3gV@E<k/S^cua
%\8BFeY+rOHL_1+l_c/K$U:@Be"JBWiLNqAPZd;tKNi%i;m*r9tHQm+W\u%s*lpV(qj^Uo`?eJSA%FBQ?J.@JAi+58W6BVi<rf\/b
%1'9V&0\,+A(0E5%mjQm4dlcd1=OB0!W?H,E85$Qt6>t@F+ZZn45Kjc)m61b<Q8*<+lh,8hNp5EZ0N5"EOc1A428k\O1h<[5\3=Ff
%^0pgXIO&XF.0:\$EOM9Hf8(X8Id%r?'ta"1@YqYGfrS@p4JhC@6R70GRt)riNJcORMH\St!r<t:#Z?M>8<f`^eSi+Q\f^D6iT6l1
%oC6=\(M3WMND94'HlD[Q?;hhD6=0]TonT$/2C]m@nrt0K2ku.)>\r^o0Z1VW2DbXI\2I7Ph8s_r<A\0aLj+89I-rN5;=32mMQF\E
%P,1*N79sJH<ucloUcT>aZAGX"&[rZQ@5>CF/B)"/MNMbe]WbV>,U_QeYSP[E&>59U==D9?4lfUW$4k,jLF&u86gM+l-qlsCn+1tP
%f=nFC:]A't5Mt'Tc23siOP81X2,fm+S&8mE,E@R@#535u7Rkln-so?nZfjIO=EE$T:0%`ieHo+oh<<%BG!_[Rl*.%R4f8.J$?gl5
%;"E)rmo7iGLRLFOJ%(6kah7"ua?(SmVqPE0bKhJ][oHJ"<7tF%]<*]`N_2H7b1WWZET=dRPe(;r1?WYmfP&10HhmNgedFb&\0?q\
%GhD=33q(li_1oa;3KD'(^9K+/LQ@%@eoH6BPh3js&Lf_u/hajFUQWPM[\JB))*-pBGO:ca"F-Y],oR8Y/!SPgj[F$"/UZDKI-&Vk
%UY:0b0=$p(<lXcX[^E\RA1t3q17u7HfNQYtD82+kE6YP#<e:r&QCpoK<&pTt]UYtl`uC.fWeRCGVeX%"[(K+RO-k62h=@^,#-DEb
%]&;.FhD6O^DJeQ6*Vr%d3u5AG]AoFR;-E5sWRgO5Z>e4Xp.e$jds,Zh(m\:lPY.!)`i$f=Co7GG*ZUl-p3ab"l[f/?clG&_CF",e
%UoS7pr4H&A![d%@G$R`\>\"E^r)=6-eZ1)X/@0"(m/SokdH+S8d%!Ie[8LcZ/D^#T;AlK@f:3tSV>%e=$U4;),I.`ETOXb-ZTPF`
%7DVOAQ'FH+r_lchSm"0>Y8%K(L)S-tLKdYW>,-M;m]:J!NGtB#r-/Ff9hmX^Hp9\I1h:>XNeL([FCRg2REM+):ni`D`D!*U$U3D;
%^$$_8TMkEV:3m1YfsPL:QCegglZ"RNNiM^.?%;Wg>H6dC.eET;Q$^+!*#bs%*%UY"Ngkhc!2[Z(_i^]R=[G-hdF<h]a*j\6+^Uj%
%=A[0k:gQV?hFK5/,GE'k6f'+KMj@G@M:YBP%NQj<CjAks>'lkVqQG</n2K:MED0O82K&iMoBh(`%NNO#SdrO?VBsffj=EXDUd1Z=
%9][SbZ:eYKl(7ErUrN1WM#K7BdGnQL(O>!fl2)IDdeAETe$mK"^ZjeN<IAK`<rlSt<t2=[Q]7<(7e6PAQM7"?bu_T^Hg2DjqJ61H
%T5X)1e;`:(,M1EB>".Lsfi585nL(i8Y!QDnq3K(<g^2q/<Y7$#bMo7--U`SI-^'K#CEC$I"@7KVIFsF#8?Y4j)c,qs#-_cIJ@i8\
%5&eT9?n'Lk,C$ir<*n&3,?5Rs;;?@]m5'@fRIYMX"s"E:HkSWHn245<8ds0X!R);mh*+/=^ljj7JfCKg_!2:Ijd=n]!F=A$e<Q4a
%F]lU*I[*W,-t(;G#[c],%kRfk?DY>m^3bVtlekI`<?dZ&bime/.@G4fX=4]e-6bN_(Z<B4'c>TF`rjaL`[/J9NqlO5cGFO0&rtJ8
%[r,qWOKp1T#%*.8]L;n#E9^ECJI/"#rMBoO*ccZ2^/PjPbc`=77CGTk7N0"+&q0g^4s"t@J`!rU#R)hY,]+qlm]Ap]8!b?s6H%K-
%es,/Ok*33b&gMP`rB^*Jea*3fpI?m4,&9+jJ,#?\Pl.c,S1[tBg?$Rl8X:/2cX=/iM`Al:^O(<Kqu6QKGFQEk.`YK-ed6^U_U3=U
%-qfJ:nO$TQ6uZEui=pu^o1-FJig%=h&]IXa+\cCi_BKt,RY<0.!J@mRbXG&/Buicbbi49`5BI%5[qr;&XaSNNY@%1r2*UiRf:u(8
%2@j/e9s_fBc^u.Ka&bQL-\S*mahoTkS<&(Qn^M%!2#j5[@Yd";R,^(T;N1"$Z)8ADVBCQ=(DBOqB'k?1f3#pG"N%fI<EQs3pTZ@u
%Sm'@lYo\@:.>EXWMHS[s#MU&):FsM')?R=6E,%+C(,;n;Gh"!J!\mp'-X<BY@i%[qCgWrOXO?.5e#1eGoJI!)2>Vu9oVj^jI?!f>
%NBZ=PHX_t$(L^=!fmq&X*fhO$>pGA-9-]p+q@c?lEK@&^CLm;\c&_5O#g"IG..fBc*neT]ekWDGmV=XBZB%ABSQmBXfs5=^*neT]
%MWS\Bqeo^YcoeXq!uj5B\Zb`)'\,0*7*<^!(Kb&;!pc5_m$"uq3h*bMo**\]g.`X/$9Q5gln%=fat1gos7l/sh8T&Z%U7c-b559<
%rlgYL[rdpM)#R+:IW1Iq0QNOk(eCe@Qs=>+"(E0d=@-`;ThBG'X>R7NSbToc\[%GcFrFj7_6'5.fhu/L`e*`trIPOVj:P'`\.4H0
%S+Me*\I,\^#gJWF'\M-"6Usd2I>,n?Idj'(dq!^M<Fe1Br='`T^!\:HD-2QV@nbi^Qp&-e[6kSO(s68AaLXZ]g!PC_,k!DNpoHW+
%II/1BETQ.qkL%Ve_jAdlNc.0qFU&M\:*:WmZXj7WUXDV"O*[1:c_BXhMk[+eM"cjun^KtS.aG'aDA4e+?<%"NF;64l@JX-B4:@Nh
%!V?%5?oA/CptX=/SRVQ`cTcmRQf%/DJ,AZO`oE-NqA$^CoF+2@KJr<W7YVHZ,hO$XGO[FNa!_V,O-U@ZnM.kQS2D8*2G!c3L'nN.
%_Z`=@aP)PYUu2_?)^2i/&)In*(b/RmTk`3Q4kjq(AK.eIZ,E5q%G)pt*!G"[k$%=laS"'l\b%7e!`&qi#65)A(?IPVLbYS6NA_]Z
%opsqiD'GiZO2*Fq`?ooOV'>:E0I)nFY6[4r[q/_#N:tqU!47*RPX-"HkeM3Y+\D#a,TDhQ5T-U)4[bEKbF5-g3IhQ+8>DJN8ME&j
%<Zl#5p:4l4X_J)99[S#8J;e4FRD@Aepr_5.8-:cael\q1&D5"?C1?oEd6ee["X5@?5Y\.<EG0g#K;4d<;^IpIa6,]QK%^Da$KsIr
%?"hM[$-"YK,U&<R$N$%_(LtGs-;*Jg!]<_"4*WbN77$R?b)'o5XhSbP!`YmV)`_u_FfI+G:9YUZLjMDnD@9]4FM.[?B!iH%T;;,]
%*FUnPd.IGP[4RZ-=phgk?Do0mZ]R&8fF)Jd8RE`8+<X7@0hh_gdJP2m*6SrkI"r^*/'O[J=F]m`i5?W"[IQ*\9NL83?&l2OaQ:fJ
%f5j!pE@*eU?CPs@X<_WnI1,u*G!EFkO)=UnB5>-J>N!Q1qm#O;CjYA+_b"]Pa2glTmAY"i*8;OT[`>Z?EStYMO*qDqf_.;54cXAT
%4_HgTm2Npoe[Eq&BgEfpT#\;&Z0chpCi.LH$hDsD4LRB`D9'3n-eE@Hm;#b6A[u\q2dHdkc)thDR6]<2(U@tkf)oZ&]@VH=o[%d,
%0t&'W[[Wl;SC7,<)NG-b82+&p"gaG9_)07J.^Yki/U9Br@ZDYuJmQU2TXu3:INe%PWTuR8j>b]`9sROJ*r6ZIZ0d!V]-#eq#L:nD
%hm^C^D>.PprRghjF,#n4^1K-\E^\WQqA.#Sm;Zrh*8;M>cIV^A[ig]JO(6r)f_3g9VN]`JVF7'siO74]V6&_.jg"2uCjR3_>MF5V
%JipJ)O)<31gT`BBPBHJ6O/qm.S(;c3[@kY`C)omCg@d#*jQXH_g[94A!^3o]F4C)@XQ-4Uk;4Q7p\"3m.F>5!Jt8+::i&tK.WWMs
%1n=]-_PhHTjV\f=>U>]Wq:p"lb&].qTD#:kX,?MuG@-\ZZ*cag/I5k@_q=Z:[QP%hXmMg#5oA>t`jUZ-mBPi5VmJUhY4"=r\a?qG
%5oSLL`jVeMm:kKpD,5Qfdb+7M[QTUecTPo)l+=-ZH(:&1C"3+$:CV.gF+Ui7<(#D;(cBUI@9!3&:CV0=*8?3F%;kjNkL:leI9ibY
%XmNQ8JJm3[`jVAAm:P9mD)ZkNbh.(p[bZmZ[lpWPC!:M2"8T%Q)(4D%QDg\tLUS@4^#'1W_(ST=M#3JH;_d4-_#W!Am@B:PfNYDi
%NGrnDW<ND4>$[gO'Gu0t>#mb_bG(UOr%hja!J&,`'+1b*TQ>q/@9)EWM2nj@6Sq2@Q1ln>hiq<"86CV.C,O#b#/rK97q#"!`n#;I
%oWcG:L"O"oU;a__1GU*2"g!q"r>Uo!,d+GE6o,dt4fkfJI+YC=f!eu-WM6"7X?#*L.C.-KYF\a3[(p/ZSVXE.-ZPkA>N-"tTNPt_
%]?"R-gJeb^9M1J?$)K""c(N7F2T42:H]!s0TL1SkEZ)e67iahgI#nSTF<P)f?_oJh]*B20(hO5:=')46hD>IhW@?@nSpNTd"+oB[
%o'F'+OL;p7`#kTq2]DcCLH*UL)(S;*_O+UEQkaPE'1-f,)m/-O^3WmeCSiH2B#sHtj"Gs?hYm'#_lMO94$+\(YDDGc51+&97[kU#
%<#GZOL4W$BfE8*LM\cqp1>')mAb%=1!B:`&-0=59$oA.b'2t*:/h;R0qfE400UD'J)2fB!F:.=o43CS5oKg&:?1Q%WC@DVcJLcYB
%E4JGBO?#dn%&$onoM?5jQ'Q+A6@4f.70$;9Mpd7L-XsAQX&rkdTYG>UJZDEq!t'PA_?:>`)C)]r0>4A7Z9&YKkm]EiAY)"C;I<,#
%FHH6VoEWOg`_ZQPq%Ia6<U0I*$GKqc0qAmrISHtG_-r3VOfZNQR&FL(i<^/,UBC[Mk;j/,l!'BJ(:ti*Hd&J'`I.ai-<E5?BBu^h
%FP6>[UK[=^A^Dl#),W[0QcN2DU+c@4;:6ab#\:,DA$2*ZJhM?YdFX`MeYGT5BXq#Z/UR(umT.N'F7Ja8-[VJnGSj<R(P/8ol+$NQ
%p?"#,lNVE(/K3Ldc5+"q=]K>3RF\H\_)WS$>WAZR;e4mBr5VX\eE73ghrWaC_E`5hSZhUJG00OnEC7GA/H=qE>O]6Zs-^-]cagAa
%]o?,^4#Luk:c)di?`$7_EDUNiUkP6A&Ql^]Qtju[JQrC:..j<gJBD&\&3*ko,m9K4b8u/3KRbZc?e`_!q:;Ktn5Jh?6m]deWWl'$
%m(,^o!TecZ0=`F3TRoUY)Z2ES,KT#o<j<''\Z3>0:4;WB=9B/(=)b$FHB8>/q+W3>8(prd1#&9WD-PdYF(j$l1_Ak8e3K[n8HYY=
%,sZ8nn>hp+!U.(WqQbbs,tHLhW2)Y&L71/U]DQMOq4L>PV65`S]&8OpG!an&D.b?M[0*PW>1Q"Li3QP;?=*YP]DM$mjt@g+hRK]h
%a-CU+4aU[orZ*XWje[dX6F.E2UT9:LZkM.%oYaoGp"K,ZYu;U#E>:0t)^jm/TVi9;#Y9@K$KHdsapM;u-997,jlB#YVCGM5dj&1m
%aP+2dA[K=eSGWLrR%48=]sO6"NDZkgF[oL[>.-ha:@n^CijtH00PVqL(X@=%GloWk632!^cK9?<,-OTPDc`"1AN&g2]tptW26>u'
%J:VHuQ7qMFUeg5s[AJ7LXjah`Pe0C8QK:q9QLuYaqa$.Rk,i<Dr-Z?L]DV2IVO=RHf7!X%no*X=F1:(OA,\8?FO_RV-7kY?X;l4r
%Hg+)pcE@[ifEDL=/k4.g&4L`]m8l-*MK!B?I<si"jgVGN"2)\BT+BQBJ(jkph<SFV6A$uT'lmV8k7_+/b#iU4=k9:P%Pg@Uc<2tS
%>TkXGdE+=!'DnjO.\gUZP)kc01oa*G3L=^h;P3\T#*t*<ZPM->!Q*l%G"HCd_2oX)<']J`b6pfAPO9PMk)uOg,069+8psV1/I-I`
%>dqq"!s<X_7&EFYnELFQJbu1i6#KjYY%bq:[H!K_<k>1)iiL']RUTh/SiHT&nP(J?C/&'#bhEIr+.N\8<MX=[nQr%!?Wd`0UUto&
%RB5J\2?R;`Aa1iEF[rFFVW'8o`VOJJ?Wc,hh[SDR/`/=h/Zd_$MjeM-C,?<)*48H@QRLd09sXY,",p2=\?h#=(/4f?fQp5t@Za!!
%m?Q*5<nfg)/r@c_@1@`cM^Dq.f_'NTM,j9D6]%=dlXm2a]I6dH]G@W=>s6dR4$)/+Q+Ck).r@\j#^%podNB'i7gI$<HlRgcrIWpN
%q;9[>$a""EU[m_7s/M0fo(i*5hi7G-FjW41POddS&nj`p3'MT&?[&<L.I6dpXo+VWJNRgLs6CI.mPSiV':<7`bMB7-c"K)WYu)V;
%G4Ob^ot-]fgq8*Non]"qY)$TQM##dd?hT@/72![d'WR<1^db+N<*l9'#cqQff+43FNsK#(9]!'O,_tQ8m6qO=l7T\$8I@oCQ3t0)
%]Bcc?D+[m.=<M]c_kc!)c=5J<f`UFqm@>uf9.bb881jqWUa"/`FZQDPWnY>=<8Dq;"5O.C7+bp#dG_P>g$U:(JdE078"'WO8]piu
%)u:s?E$#:`L[Tu&ll"$kAI094+$T41nhd>.Rq^$W;Oh==NVuOr9<`#pZ%D?depiJFR:B'^L/as%LJ:R.-bOH,F'3_/6!A9[;5JS-
%6LV.M#uAgnQA8WeAj$XR=H/ap4\]qW(7KT+ETELdj$r-pHTu[:6m_HR0QOXKcd&(]'fDJS9:00MCnSa*8@L5!;Jglb51L$Yh02Ge
%.*J4:[(Jgnlq6E<$Z:$#Q`TG^0Ud%pq_\4,Ct.nJMs>tp?j0Ys"Seq3`>\385:R3@.7nU#i,36d=MSQ$h[3++@-,+8(4(CQqsJe)
%Dsq#Ih].<+GclR0/e$4<Z>_l\W?;cB9(3CG;ZnlP7=h-Ps+92=pL%Ma9[E(HaeZQVK]bqW3.9%Oo__`658uUgbB69c?O_%lb-_l'
%&*s\QA!\/``FQdd!E5GS@$5dl_6THfn9i.F5mJ6*_BF%g:_X(G*ot9MQ\8On@7]6FpjmT-i4P'h)72KA1N"T6f9tYl]oY47OFjlK
%%`>\g3?"k+(Q@#qW=;r!5`&GZBaGW?@;X(lZqqb_$=o>elP<^#9okU'kT^D"$BkTB5XZ_?!$N2MV.PA-#dB,HA69+gT-4IY9Z$60
%qeR`RI$"e$1d^V.C,YuM]CnsYX]7<fZ8Mns4hF,1csgJT(jIpN#n./X_#haAI0P(+YXSd"Qom7K6j-HLa^XZ-&-7*\>h%O&L<pgp
%OHZPo/#bTKIpBam=/XR:pu^,n<H`OI3^4I8RI%kIN,$DOCor_Q0jpdg\%PhACd^%(EN$\G.e=sZgIWf!3??TlINn+dK\fBWS!dS5
%9,)aO>)N=[ifG[(p\C$\*eucMAM*O7Dh]`Qm9-]\N6$4(Fn;R\80k+l8/oGs=P+]"0o/=sWjFl]H/M@:?3V'S+<s867&WGreVhU9
%/J1pk5/Q"<3[p,M7q"F:Wp"[-Q,g8]]=`R`rcVp4WaPVqQ$J80(Sd7G=34`D$1+(B+K_'eFi?a@]ZmRq\?khWk)m:(ppO"VQfZ5X
%Em6[ghHjGB4dDHBGH:K)kZi=JNj(H6I)&n9*pK-W+s.DPneeEhkpY=%R:p=eXWmZbQq;\+PYC^TG?S!$.Hoq`hjsZZ3m@9`2YX`u
%Wi-?70-3r4]]n_fL\Ql^]XTP7gT(%*i&mp39pJLfnaN9#9F(*9mg)"2m&2'bK6%?,i:1dW*a?[,;%X[6L_CmB5`1@EAO+\3>_ad>
%VXarIAg2EUaQ:kp>=jos@7=%.W*7jbU_#lEL<7o1it7"]W(h]0mqMpZ=i:Y,a<03QD+s="MgHKd@Nt<<,PWFi[.+K_RJ1!<`D8+X
%B%r`Kok^H0nXqZ_3-%nJ\t);]Y!([5i!!Ve6,QB^h!Qs$jefX*C:%4\UDl5LHLk&mEXQ13=O^Hacs4E%:3ONp]XHK"1hC.dW$`EP
%*F"#;IIlmo`at@kI<pgK9D,TVG#PBsJD(!9>)l?jq<!a.$_-A^dqFA^=h2YSrGn%tjkSj=**^1L<Ec@O<F'8mU*r(9fGr?P2[^c%
%`2n(=`\<sZnsKq+$rNmOQ?*!VKoqS`*#>oG>e1BhRVU//CLF6#C>I)c)<m)eLJti@rAUdQKXb*SpVGsch^1S1.a%P1]O"#@riCCI
%AR7%^iIAJOrh%s$jkC`?8t4s%10lc7m1]HQ\lmO6Sa4A):8g_X%2s/PaBK5\$^j\Ejf!p)'jb(b;n_,?OuL,"PTcoq>ID,/jP<GJ
%Vc#>0DY9UNOnG_t'%dXg;jRbY8#JW$)(N62!f1K11^nF$.SoG`>A/<:;[\_ek>j0Ql&r2[I_+H\?/ALcZ;$f3#Kt'BJe0([(ppYA
%lnA]:#1)9W8I#]K_aG:%%24,>ZVX1in-e"PIF7b*`gjh!-'S458_)l`lVZPp+V>sL_;g&;J?TT=^7Z&eF^d!08<Q"GQ]X=#[\hW4
%9?3Q%XV9=YP#A^_o4!=XTW,?/cr)7b"/I)H]>t.>LD:#VjDkMWFB6><PUef`AP^\p[,j`s)-@OM`"j2`Yib^aO:S2aB>KXnS:snE
%'G.U9>%oOA.&cTGUM=RZ?8<XNf/$>moSe"];1B;k8Qoc8?@C3&1NhsTD65>nm)MG6g9/p+..Nn%,ke\WEk9]_c5ShV`,VVun99.H
%SD[LI'Yc/(W<6$5l5mX;aKN;><U&.]]gF@]4[iLqH!u]Dp3op;4p0J&"5.SnZ9MR_[q?-H08X*Z_srYWfar*21D(76U.iN7G&3I1
%00hr4OY@'*r+%>kRm=*<Ve4j&R_[u7AVd>G::B;Upo(;F)3\euRCfNoUa@"gR1eEr&.f8SLgt)>3t.Y-8tfph9.jY,iqrYA;m!:$
%*\\d0&67@Z8"!eR:aZsiFoab$jFkca\EC9J,rLH4K]]W^`XnS:HG1sJ+h"'fL[i!:-BB@EJf%(8fa5314([O:"^)dhTeCt/GW7lK
%,7hOYM1Gm6W21E'Xg\un\RF>gq+SFfmD4bt8[P4B'Ut'$UnA@8jLpPZQNCSQHiY"6<h<D]TY$Bj\1DSSL8N'BAMdu'JZMH5be%;W
%?(a4-Y(<FC23`,=#q_gUA>cdXZR=pqk17DKq/"O*kctc/,P]@T&A&`Of"^;*KT->QCXaZ`kVs4njiiFEAf)$'H.u5LJAbTUK:)WT
%g]D-;d@Dj#R%uA$IqUGo_JA2&T1p'M&;OWHQWKq-fbF0L[RSD7.3-$/q2cHb/O0W0%A\_(WE'4Efrg*J**pj<:ObiLbNLjrT^]'#
%+#9%rD56m[\JhIc2L2OtP:\4c#4PR)i9h%lD)93Y$.3anQFDC9FsYU9\);F8hGYb-CT"moQc<\#&e,iE?oS=<okK+E@/^m&&#a2p
%-atu;VnW2bg"PJZ0p/a.Un-n:1pPT"O^T)sV:'J6+;?J]>)V2cH2eX`I[4CMfNhYQY/,(CD:-QI;qTG<:g\V7o#rEm-j#)N-+U=O
%<)1"5X'$)B7q^N]Kb]l1;%cqMI-BcbUsc2m$cUZG>0J>u\i+'^Uq&"I[-G"X@sl#UhY11%+n;5iVnsO)fPKmGLEE+bTp+V8i8T<i
%a_lskRrpFPl(f_4FeE9d,K>Vglq+ltS97bnDO<un=a(aJh,u]#HC$e&4R4<s1HJOVTCn.KALY)l9??AkJuW`AWB(3f$pMq=Ff9D+
%nneYVVG_kgo$)#irA8fj]c)t=mX9s^A9[AjI5`L`IEnGPXW4i)PE71r%UEXkX8/Vp&Z,r3!d$K"7e!7oHRYT>?!7tT9JWQd6'?ub
%h9\tshJoH]i8>4Z%NLE>,8:Sfa@TX?je`)k9RB,mL9](#k_7\.]-seW3c0UdPpE2ClmqPa53l_pXfN?gXZIF,*qbo$ejhL:=P=R^
%e>6Ho!q,Sa1;57H!Sk!/;GX;,+q]H2h5Ur/3P3eM&X$%tHk.]t!N?YtXOZ__C#1nX)D8B\k?$q]BpmK>2j@?-FK8F_%^#;Eg^L<d
%"0?W82[lP3(5$aQ1)rM`RgouiUW'@pUOC_!<NV7H(.\E&qJ`q@rS,4uirTGR?d\aHp"Cg/;5rt%&]g"inGa;XPRj+JoF(S"/\@BJ
%MG"&LOL/)k7Zthi3=.,TEi!.)eQO/n6p5Lt\k[-gdb6u/0A.4+3/$dC\f0XCQ6nQA=+H4B*6_<<Nru;AkUkkrod+X#S@[k*IG:$C
%ccj2Xl8mZ-CF>?X,H!j^e:JMMT(3Y:B;7:\",o=W@H,rFJnFl-QG>6[,Z0]EeD@Dgc7rpcZ"8pgE4"\.3b>K'$jCRVB$2\l64r"]
%`&(-K:s.6U]]%][cG<F^N6pC=7APpo0q3<?5EcG=HXsBa4pV96^>H`Z/j-/'s&tal)1miP`?E7(5Vn5%WN]rg@qPnHXC5g[6<ON.
%C#=.>7=n!o(!dc;E_4W[d.U_qS'9Ho!Ff3I.?l"b('%Zq4p.QnZ:$?QeC_Qh1*jp(/Ii8M8pQl;+&@S!G+,_\Qm)\R07B<fi'[`t
%0ef^])>cDo6BAbU/Y)1pj)H`$%;&2_`6CJ9#ef.if6WhJ7I4V"\kX_(),F^W8)dDfc.LnSY/$U1+!gnlH&UQl/*a'WfoBnSkn[7`
%\u;EhXeP'k0n;.rbh1[H4E+]n4phE>ein7!mX>OVHi(>1)47nrXS(`4%V><*\XV3tgZ[T2]BPC1O*@.NJ-a@'f7m%`PdY183dDCS
%l:<0UMBqCC$uFfsli7YHjDOsPP(A\&P7aLeMR7/4OouaZ[0iJ;$%T-q3g"O!J[:nqgmtTA2\WjYm"?3T[t4j>\`I3g&giHp:MH)&
%F$^1X`$kcObGg(8XS>fH`%eaD8HuLeafcYb!#s2QZ[oI5Fgf'9NqI.S,-ZnsdHqcqMd/SVEpsod&/ZB:Ou/.$=$+FPN[]=4]!DUW
%am0u;63L-A95k3$(Ds437UR+\MM6F#^k7f9'CE0B742P-G`Pn*&PIg?bS_'C`F_8kbT,Z3g's>:ZM,ddCZLqLh+le2BX8@?\cfL^
%Fsh611mVAe&K8ZW"(X*W>L#3%YVNV<4eWIgb+@M&+Bf#95gmb#QWcP(+6m!#*9;Q^+%RL:?.T*'75=KWpX<q'eo\;TU(mm(YMYd*
%f+;FN,+p!gq/o--CCsgK%B\<@Sb'-6DEaVED(KB;E3b]6P:>GPR^O=CG.ReJ+Pr?m9Nq`!hbn&>)qRjG@.a$jL(e,K;o2&Fb)eJU
%K3mY,@YHA!:P"t)iq5>_Eq,d%ff>a7_rba]Z\"G>bK&3VY.'lPd-FK]8s=-E4Q7:9FgNW^\;1^G6f>umNuj`<@tXj"+UH)_0Y/VY
%d43oG.kNLDKJpd"nT/5"b$Rtc](5ZB=R_(hs-\cSZR2%c#T5Ua)a7Khn8)YX7u,*L2F7L^&Z,P3$`=^C1FMf`LNn"S$P;DZ#S9Pt
%JD<q8:STSAG9r)T^VO.YG<\\TGf^ZqK/a.I5WV6,0.<Q!rFVEi&O!t[,f<s]jdQuZh_c=[cUsI.2A?>lr_2)e+"kW1*Y4-C7+]BJ
%]ut'-4'J?V^%(%.bngd)0Q_sQf1+CmpITBCh3&$\2rRt1.8Ec5CQ&V@T-E6l\=dM`R,[1JV30>d5;,1%T76@ZbcIq5*-TXi#oQ)_
%?/G+"i.U/ck+"APX)<*Aie7!ZG9?:^!`n?^:[jY[p5Ks:=jY,+XrQlndRg4]&i_QmfK@;>':;gNjc.WImq8"3?YFDX+h)*+Q6n77
%bJ8+:HU&(ioT1`VKN1RW&b/c!8V-;(0MH1P!k@PEhC[rU"iiCDb\Cp-eQi`$S>1d-'RccJa@I,9VFW7[E%H>C<@Urd$9.f1;3Eck
%-Y[gY@uJ^*k'cfFMuc`4RK>OqTp?+Ha`,fcgR)gY6T$(.>.2jg$>rohguT5-hk>pD6i26DL(9G)O'=)_)@,-OIHmehYI_MXem:JP
%L]Ul5fNhQ-hg>JOP&](rId./EhgM<".\H7j#=`kDkVVa9YT(-b/qO(=?BuJ]P)Lj0-bAnZf!<FD51kFe4+*!da9"r?X_B5Par4B[
%qV\lmr@Ec/3:rn_S>I`CPBS:7b/si&/=>_`[Ps?#S/f<(]q?\A&Ejp;!d[4dUSoY;S)'G7V[,G$g&:.p];89'%U;-f7)3C1^lB`O
%->:Dt#/p_#Au4aM1)4L[pUma;cIk?Y3Zd5Af,A+>`U-c2FWDS2)'Vd0WaLWmonDNC,`YUfGh_NDB&Q^P5-"5Pq?=?Go5-lS>@`!7
%d6sa4"[^9I\i&ZMf95D=m71cXb]RG+8N8Ie<Z[[8I;o*N`p??HoQF=lckinn9jmJWUnbFL=Q%icks<n-):j_F2A<,R)j4%]2-(<L
%ZX%NLJZN8BH!X6W@sG--]#gr8cu-ds)+$frE!M,C0RWU)&<pSa="N\?"Rf$TbH[pDDo$i?N$\h)a8o,/_\>V[!m\%tPXS,#)IPEG
%<<J"GjQ_]*%Sh?o#o!q5qJi\&,RtF.+=V'cn1>SUY!S)E#R1o\0,k!p6Z-W]2*/*F_H%M+Kk`a4[&Bs4KbHm=a1$)0=kX4-H.4:r
%=Rs?^20%->cJs+-HPJtZ8l@:5?=Q49%3FFh5uO[20C&XXn_m-nK\0)QAQEV=&n:fBlES-7$dY^.\f#=<+8E4,]D0pd9ctX-N2@Aa
%7?g29e\fcJd'-!e_M=lkk"!h@*R=p04[IlI<Bt%h)EhVqP6h-p7unsH"%D>"nBh<+:jOtJiFDDsS7tAO\h!jKegoMj38EdG;6CVm
%h=1b+W'HY$9m$RBj=O`leIb3A!sG(%D$8gEQ5!^F5alFs0XNSETIA&:)RHOJ#Yh[X;F/;ub*_7g<#S!0DEp&P'TF2TR1I<HnRF:F
%=$71o*,APc6KU=Z*(p)`?]kg?>fZ;]h:Vi$WI)WT1FYrNK3t0*:)"dhIfF_8QsMu:,`X7^lc-?\Me+FV#<CVK-^n&/5j)mIVU6oY
%+uHDW]"lUdmFGqk(99O,N(pbKf'"Bc1(.g8d(D"Ih/uWM;mf6D)9AZ7U!0A=1[EC;oK%)j(s`?/"@RCNMMoL!CS'g5DLCjfr2rsV
%/!Ut!UuP3um]t%)8uLi\_;D<!;r+s,,H<c`]h<KM;8Lb`64Xg+;oPp!H-riYnlK#OAo4-/e[T+]]:A_>V:0KKo!c3VG0AURMtOK5
%4%I(.jK$o:SS-83<s*85al>naQTZ6op0VaA?bO5QYYc7h\#13V^DU/_Oin.^`=Roa!k:R3$C6H8Jd=%AHW8au7=.Muo;Y>?kB(ua
%A:RPDBVFN_Jn^,cCUnM(-UCJ;="t2^30q!O.-*/l-+sh.Jlla$_%>=Y]7nV'cb+95@\3'\]KBj+d-(RUP*bd'l<N6.(L)/D^CjWK
%Wm@B65sn?4N)*LFTM!'Q4<u*$-h_cf*G]\V\*DKL0fa;#"h&ho8C]WjTA"g>7529#bVX_4^h0S:e1X"n?[QV'psbS$5BX_M)\#*I
%;GAq5<CNP62S+L^f\ob1RQh8.rMMI*%%l7X,a;)aS^\)X_h,P_VhRu![-RMa:CXZu>GM%o+\<umF?&qlIi\3,eHrSXc"=[A@%a3>
%*'Lj$XEnWe6Ia=_/?kViQQ7*#%M.%drmsFCqR8Du>T[:eRY2#OjZ3WEcrAQ>M,b3Q]`fft12lE[A)KI>:kGRu/[.+p>UVnm.]Z=E
%XD2<_!X[R]QW$DNSgrjWpcrP'ZlGi8-e4SF7B3KSaBFH?UtW%P?$:<(g,r%n9=8E3p+4bnrhS6cj.[gnW,Y[pik)u'E;T(smI')^
%\(?,?ICD)P/2CL2VPeW)M?ZDpWI4m6,RQJo!j5*d%)*V<<j;bljObD<);bI;7cTe"S^A!`S<KR(;@CBT6:T=63Jk6726TXH)gnU'
%Tr/a+ZfQmXkh>pUj0**gcGp1TeAoMX1Jm6j;!2=A=i]nDAq;u\&2IEDjqTpBi9O)"RIHss`HJ*pX.:R;$A!D6II7mKY3"Qd*2>C0
%f(82kIt=Hbb1Cap3UdRPT=bgs*knkQQtDN3on8(a6mhhf-AjDU&M:,]nj`&/EaT[`H0uLH^?'iC%q),?[[uCNq:>`$<^&[m$iW9L
%5Lhc0-DH;7>o-ji,-?bV*+&>s0->(T$_,N!d3gT]Q)Y4((`$I.W@korY-`s*-(EfBMnF-`l)"NRb2TH<F_l>#)d7T\(Z4DppNc<-
%4'd4u&\`C6nYKHW[eL3SM^KK=ontK\Raf:mDkO\\f;L\"$XN4siaVFO_r=nlf-4JE\G/\pKYO_jm/"#2B>NbOFn)RjYBb)if.Xj9
%H!,NSb/<4SaBtt;$f,r;^NfJM^<aR+''g@k>!M!7lTa,aCM+7c(gb6WV';@9'J0?8]E";TW_h4r=+c#*r+tF5'K)cWoq'L;4ItO^
%jh\8[n>0((a4a)lU>9oi7s@[YDq2Fl%dSEUft*hQ,@<Z@KYl>f51f@IP%X*4=r6>MVfolod@#n>o/3&uIeWC2l^Q_F^\tB"Hjm;c
%!R&q[FZ"24C-&P/.mV)[^e..WT"KZgr'VW+/(B-_>nu)[dAu?R$?tbL#=7S#3P3/9#/rlAbSWa!Eg@7E),X_o_m&&.IEkMh^;FAL
%;tAi2kT]VEMNPNd9pLXR(tgC]cPpmjk"=&h]AOF)"a\io=(;%gB&.L1hV),2"&cPYnQi,i@X.-0ce95;L/XAoEu^HCMK2t0WPZpt
%8h)uA.+/oFP.gI5JSG#9gL"h/Dh$Vk8DUsD,7;.2TE6h3Z+(@.;<&Z#ZOR9b/"Fg-0FL[j-<X[b/$3uod?ubB0tp1>$qUq\b+hs_
%63pGm@Kgr^9Yq&\(89mt0#OEQL1Xq;"6T"VY,A"nPQ4q;@PI1Ci=3JR!&nF@-(^>D.3]YQah9>Q.71Ki0'JKmhAMK]D>m@:"3_/.
%'YNgJHf.l*;r9,F`g/Qpp=CMQcm;7:(SQRJj=;dqh;epWMEM&N+g]"c#7i&$(@+m$auHV_dd1WJ4qK>S;M_4(dK2f:a>:"GjUtJ`
%hHF]A5*1:l].W\-Ke%./Z/1E,dT6m@4Mb$K35ZTZI>[RGdU6gh#2CgZaLXgU0_41'<09QM>`uU!X_DP6Z>sVC'VYUqa:(XOZ8*=-
%N>":e!I(3[RS^_la]P-#V\/^f9'I@"/_d)5,cEkJ9D2tB&Q^7O<OWONrC73'*L""8@k.,&,LA%[c47&u\th)>4h2q_W;nmZOkMK\
%>Mln0/Dp**LJ"9N_=q7"Cu<i4Fl,P!.'U-36e_>7]A=W`PK*L#=@UV'nF'EaY&.Z4_?__F+A6Ib\qG!@[nKd>B1/0D8S:qY,><KH
%H<)752BZYp(do,hD>?Wd0k<CW(KmFa;i$SF!EVl+c5/GVEPm.&e-`*(j;&.M.E6_m,\/Jo8EoY5!:NBjb*H<]K%g$3Z!m)8HGm3-
%fd,$u?#OU;5eCSG*3NIb3Wl$2kW4L'Dkp?b5?t%pME^A"49EeQq]V;`k+QLZ`4]WTGUM)Z]anCTE*F"#:`;<kVP`C+?_+/u,5=l\
%h(ffaFr/)^,CO/(]/4[i%YdqtZ?p!/9TDi^^-Ll8Rg_--:-+Mb6#e]3^+\\r#V0)cH:Tfu!+56"b.,_hlBlu(*6i&OPEP^2+b5a5
%N2Z?gcegCk#m0H2`XTi#?6B0Zqq^#9D`5YQ!0/SfGa]d1S4!<l$;csp&Dd#9i9-_qh`7&I3/o(XRL1\9*+7%<91A.Kc8'R57k[&b
%5?/U*l\0t28>0HWpOF&#$AmQ7gd%Qe!KI$3He(h%7I$87KX;Gm/o\8;1(bX.=j%.7Y/__4"cKH^X7*G#!.]U+WG<o4pI[eWLOaSd
%<cQ`6AJ$e.88+9:0:&D&J4QfQ\T^CbJ7f\7"`6g8EDaE3DTS'FBl1-5]oM<cmCfmNXJL"Z?PCiAYUgf#?7:M_1*qW=):u")<uXsl
%]@TgC"\`"KEdr3P&1f"3HZ8fiS:SM4.<&fcV3J.d+l$66=3!THX6rDQc`PWDG&XaO.6HFH+UJ+6%AbP@*PE;hK!(B>E#2K;\D4@u
%l/>':erc?sm-_?L3oY47fhn*HQQP(t^"`MZqQHA_oZI&4q#6J:/"'Y?o9V2XB6K[%OqM=?;M?AlpduDd5]!Oc<(-P>J!$N!d]K%=
%:&FmR@04LdN+l]%6.WQ)+QlVq9-@0LpFZf]7]B^Sne8$i@0beo,^EDg>!6[-KVn@]8f;+'\>e^Qp.`l.CY/A#:WI-$fqM#-p;mc:
%h;(r.c@J+r9i6)V(F`Wt4E&^-$fuQ[M%qlJMl>r_!.bW?*P@7X%m/uWT=g[^=S$6gfb6QIL3jhnLahqGg/9D$6nY*OB8<)m+WU=M
%^uOVN6LY4;!ED-RWZP2;@%Bp]_1&6>_uQD3XsTjP!"cO2QrGtHSq^FST>na>DS##[F#f!sC3\l$"#-3>\eBPK;:g/uUdsCq-VJ$p
%+ht_?mL.inoGT3U^fP@`2Z[Rueh>_^rTS!-DJJ&[Sl!0KJRltA7fi^!#SuQOi[)]N03bWO:(%tKmL0ET%O04F/^M,OjP5=I<>f*<
%<Qi.DiMeBB.cL!)#Y1n+MFC_(YP4r<4S,=&3Q^-%IC2be^'IGpp2jE`;;,2.*'>fbSbqIW(W(ShceX31[J]iKVR`m8m40i<[B0+J
%ql21npW(gt`(O87LV=?]/SH"<foP/c>g6hb5p?3:P!uMDgMpIURed?m)_K([]m?<YYD2k/^hu#MG%R!DjUQtsnUZ/L8I;5k$C$,V
%hqf9#O&(1[Wjs38eUeUDk!u&EjrV/,J,/WZ41#:JVW5hR:K>;$:_Uq:7G2eN)6='P+LEC'RR0PugOik%#eFiLPq(9#QuF=r08"C'
%S31jNJ/Zm-i^UkWOKC2=Pu\^7H0A,XI"mk,.Ro&a$p?[jTmo1F_Xru%\E&mRX-,5kntSKq_IaO_;j:;GE:.$4X92ieTa<&@.)!+4
%@oV8./3kWn&ae8VThu6*+TrB$m86d,"1+)VZOg5TL1^gE3_I@8IU!-T?Z(E0(geoEoj&SJmG,pqLmV;\'oVpNEMHFM+T:#gIVaaE
%c*c$g>16NpR)T<[\LXKQ:1l25Tf'midh(D(\ZPfh$]0.F,bK<^WplgK:.mZaX4p_-LRm=;BE`<]q+8F"D$>K@cNYn2f('E8.f\E7
%,(:3mhK,73o^dek],\Xqnl%\l$Vfi?9U5F49H?(WD3T5WlcE0_4lr,4mT/f0gU&iESXK*JeGqgVS-hAZOl./*NDQ<Y(aK[3$C!KI
%-o-(C@1N<&?`&br#>(Mi[Qr7jILA3sY7)5e8M'<Qa^POT,-4&7K8sP-qJ<p:F76+Pnk@&uV7qMj%!N0IBPAU!C;P+Cf0BTUZts-[
%hnZH,p>cEQ.t(6caU!`+ZqQG#G"2pE$lGcY'FtKFHO6YWUsH$o)[^PDou$+fU&YmEQbl9DLg>Rd#5u0q,9&;8/`44%"Eu)5^is3M
%6u._ia!C4n/M.'JC#V1<rK"f'[c-%hD7_pRJSoZn[?S3<++N-`g03?]RPq9]Cm#WCUW".l'F*Agm%l!RhIouB`]B<^]MdZ@=2WnB
%Y7$2%7\mMQJU]&5hN`bQL#>":-P=t8L;)7<VJjU)2cJ2GCL->c1e;\4<(a]So-&op;,\n2]e-f<V@&`J%<o=F@d399@Q+;jD8MNN
%d&$eb8%:"_^bVuX']@DLWMl@iYblAu-*aDWE:]*?^M('?n`J1cLBWQ+!E'GgF\*5u+3>.GMkn8bO8C-T>fRlcd1ubMV2,+1E/8*X
%2(9D4$sf733aZ?j1C0^%9oH#eGpB+p,_^TJP_@E9gohl@pdu_``\D^pXhmF.*+?i8MTj6m\DOFl%<FL)^u8$dgfJb2K<Psn%+@kE
%NaLiJmWhJ]8MOS+TK38N0Sskj%G:kGe-9GhX\C#M(r3;X:!c8&.Z&P!kRZsS1Pe^_!+(7Wr9)hHlSgo7;.ehB=7-C8.<@HXE9bM_
%_Fc\!8:oDK\Bl1TodpM#d,]1ET9%cl0>.\,"/2OaI%ekF[!\]THCbB0>k=L`9[g!f4Gb'C#l`(CJ[bo48'q0I*<DHlI7JNHEjq(u
%^2HWa(]&MHbBN.UW`A-jVffpIQn5[D`00RMg-X/(]/(G`',SD*iN'NZ\^7F/)R'saOW0dkL*:$&+3RdTBQ4+d)M983Nc;YlE3B?j
%*Z-Jga:!57A,Tl"U%%V,Q4t7pOn\ugI/_5.S<J-`.>0Ct6O#__iE[m?S!eE$#"Q7i8d["a&6dcn@<7(KI5gd]4_[ZVf!\f0BgmB/
%/3plp[i^FsQZ]0[(;2QkN+4U.aQT;F?9/m/FG=*n+G]ahO9GTG^6_2$Dq[DE&0Ts;W_8B%Fb#Pq%=LW$(<526b=R)dUgcT59SLR8
%QipfpP[o_u?i\D1X/*/:jl4J@ED!I/Y6-%Ykil,H8@#[B&s!rBB_4pOl+9mgr5_5/@EuF\B]uhk`Rkf2XjXpK0^U)N`sF=>0u21D
%df"BEJ6eSo@NH)e4gu>\YFbo@*F7/P?Udkg*GcdN6D]V&+9jCXUC!HqoFnj!O#[Ib%kadM)aT(3$ctr8LDsbq))K0/W8h544(-V5
%ZX;+!]#@.f\_SCoBuO5ho!p5F`'CEp2g@?r^%q/@Z\oL3r)=CN;"IurbMhmQ2hSr5SHc4"JOB@olj58bTAfIR4s.<a?[<B7o?,k[
%Kg+D@ns+7[\K/1sc$*nO=>P]^Y`G'0i8;tI]]b0ak_Qn8Lcf^%*Kc,Sj@)T"77ZFD,H+Y[/bPYtJm?4<q:KuOBpu'<$Ks0GdRR+N
%+=W^PYu/$^)PXfb1uXmUKfYe+64tp8RO1.=&[(tqQ7rJ/PL=u8U2`Z<<EIZ;RKtGfn$<(ZaP^/R_(c.l=='rd2l*(oZ*;6h;i!`(
%_5abO5YFNr"+o!q!=[S2G':9N6:qW=Q50Z5ASM$:#^5R47T2MQNNb:BX5t('(\D#@9%ZZ%4NfGnR:>*e,"QDU)UPIS3i9auGi#CM
%Vf'=&1qh-JDcV4&h=;=4W30ZW)Ah26bPQ].JIoSo<`jo#1euD\KajGJMo(k$cM<V!;e>mJ#!BBA=U#NkIRXD?KQ%tuN).*5"0`#k
%iOheN)$Q!cEt=:&V97H+kmAgN%c\=U&d6%@!^SeSM^uRVpjJf,SNPI"J8Qc@#&n;a`j8$(0Yf8HB@SJs3KO?gJQd%a;E2\,JN&Jn
%$\t`Y5d7ig-ud#**uTFt#J.II*Sui!VT@j=_i%[P,ZYcCPp76oKj5Ep1Q3?OaNqQ)Rb[bE`qGW`q-b=Io7Q)#T>5YNoX<QFk7;^_
%b=f\B.BVd>lqKZFEN'eL&)`9Cn+F:o\*r3m`t5?]:K;nLYb<pWEK##;c*.1:V_>(uR%U3C%YP,63I@H<.*B0<?+7K+fW_^E1*fll
%"\O<G&d0Osfq^HjP^#LX.YC;l<QUmlU*%2_=hL$D+lFYtcO'Io:Ok>'ZsZ1rI6lcp>T#-c%A=[C1t7dllnXnk8H;bFSmX^PY[i\0
%Yk3W8&9J<hT8/s#6Hg'El9+*p-7&5HZ$>OC(KXpYlJW.H2O[MQ\fEO+3Q=D^OhiHe!>hEr'#p68rCm#ng2s-b&"feoZ#%c!'r1C<
%/dft*"9JDX,6lpL@uPadCHK1*[_e1;$Ng$$=g,VK"uD&HCQ\lTQ@[HJRH>DeMQ-n+)lqd55XU^h#i!Gk$9PLa2o%\8!A>Xm^OG)O
%$.1eJQ9j#,X6"E&KJ"5^(9SKo+uqF$VNW0Tl*^3B#ctZ&":T0Xn`WJXDYS<EkR+gt>D@o+O<])J.N-c&4qnglp]M#>!Zb["jZg;J
%C;M,ko(.T*$(ZUg;pQh!2$:qT`kE.37(.])?r9g/a\#_c+q8AlRSU_p)_;#>eXh@r7#+O)MJ<:q8`?*R3]hobL$Z)PQG/5r&hokB
%pX.Jg0uOP"k0mH-b]K_>'3+HsOC62HB<q)UjJI=h9r];+`cca@cW@T'V-J<f#OY^cS_EA1TdHIn`>p,:W@?Jt>t50JNH><GO00^(
%VsLs0L&!YdV<?<U^>4V24+_6J\_Us?YnkhY<h-<Je0U(iJKKVJ%%@TJYFOXa*fOpn]"U"D0TiqqZhrY3++DplG?a^*Xd2l:Dm"WT
%MOC'm"[5Aa5Y"5^?L[#"kR%1i#]\e*`!-$qj."tQ:-X2YA?an;nj$(/])=J&?<WI>+XhHi0+C@/$V1>O+S;@`MI4M`m[bm&1J/b1
%.n$]gr$h9.1uS$[U_:%g>#,;dbc]OQYk'_4`\K.Ro`roU`D4YTPB.IrMo;:D2YNF,i:B?3MI#Vc?6?7E=tAR/an-V$IupuTV@VSB
%Ne&UAiEF]N+FOJ3,e<5Ef$c,9Bu'g':-:\UZf<(:D_ZfKX82AjO61FV_mKV+:t5#$7YG[j&CZ1m6%t<D"'X!s96b'c--HPPM?ta)
%(0]DqYT.n"d[Io6pU[*HnFi/1r&GQ+`K&=H1!/l4Sf8>%"9V!m\NV+G.:7CbLBNLoNmI@nR[1.A9@*RPm;'F7JpcsS(8G,-8+:G7
%MUu?.YiM`'!V<,U#d6bdee)6_:$MFHT<Du)%NXNQ^hlj4Li(bN&DRp(-t>J0TkLDD7dOD.BF4"!)f.aeb:03T%W9Aq5jY.jPYT-u
%*\brEV^uJLFiZBQ1`4d5*)p>9@e&N7-:]`$I?iV[W(R1.nH06oo/S_s;E#D/?N:MU*0rI5#_k@-Y/]C'%Hct^ZQ<3S>.=.pj/dU5
%1E!=1hstHV/H$Y#>CB]9jX6uTTI#G^qQWR8RQm99r!h&P8eu3T=qe838,G'K>bDMq-h#eo_Hj"$E$i0\7pduU^r^:!4UuH%dE`at
%b<^X2/-&=S9Uj[@0CmX;^(bBu+R2,LBb:OdKPkpiF+TdL\?F+a&>Ej[97[MB;<17]=X:[+Y4<Uc(:pSR]Q@fe28HjEh-<l[iA$$4
%>833d2RWj245#)VE(pgn@H:mf3n9),s0=pMjXajhn,&^@Q8p[dT\<H,#u<^e`(_n_enD3X&f3]YQ:B.lbIc8oU,[[Vk]fJ<Q]]Wu
%R:004,b2!NT9SdTU@/'1iUH^,pRd5O56UW<$qHi`"<ht2HKjG_c%k%t5K[c;VAt*U^E.u1Dsr''-<GW]qq&;15?tu#0]9im3<&Ti
%LJdu1Am/_YTB3uX4cWcS?P0R!B6G1KHc;91Rt!JIWtak>EeVZQM.`@FPiX*r4q.m;Tt?]uP)JsmNa&p(<LqmPA:D,JNa:LK@9i+-
%j'%.Rj8)]lrs=\MLV)V_N+uBV(LqfsapQr)*%D%ujRIOa8`[@$g!Pg"X+;V>9P.*P\Z8FZ@MY\[QKNP0T3M:h(BDp^A<IcC0=6UO
%A&Q!pVH&_W5&[15f\YI&i1<th[`rkn8"+HreWE78;UmGkTT0#.OWN!a%qm*YFkFZdS9f;\C^d$G$ZuT\";qgCW]C4UiYJZW8KEr-
%C$NdM3WOKZ,)AmqeTcU3+TWroNN[u\qPqSDolGIV(]+!7#OOp]`iGk<c+0@UBJrkcibkC>oG=`2D;'skF>+e`XiSNdVpP#&TYGT]
%U#eq9:KM/\fk.J.SA*2@BkonP&Zt09)POnD2<#S%Hqp'XWF&.F-0I$te:N)HaYS(dTR:'b$f0(nVWDpTWoYfn;HGV:9agC=jo)Q/
%Up@!"Ri)1_J<"^qNnJFg/@CD?e>CO"U4trY]'GMI.2,mL.Y*lRPql^3[Q8C4V9Gh@IqnddFA6D]n2qau7o9c2H[YM;S&=rU0Dtg>
%C[<ul6c>i-<HHAR5'g1I-_L2>q?`B>QM:j0&U+<&AX2"k2tAa_P^'l@Rb8TD_A>cB<\//mq>=L_/,Xho^Q,Nm>LX,Z8Nl(R-C$go
%iY1%1527_s@oM[FLd]6BdrgV$P>"3\8c5qM%\!>M`cGJ1OZ\YDTm;STIN$+oIi[ROI!HbLr:+]?N9g*u`ZOC%V2hW<dT*J#'HP#%
%(],Hi[rRPG2D&q^0P9fpnH,m1.1iGp]d*Ee38;bZTqHI`*3(oIC38m:'lY5)W_Li]\);H^It""/K5?O>g/mTHk@nVa@sf=5r*d\H
%>M[GNqK0H@GNs*XhL,Kqfu:V)dfd^:m\U)g)*MhJe7"Nafp$4#eN'^AFm/$V7r-8Eb7?*GjiL!Ed7%M/Ksd.nf-X3NHd;jVK,/::
%If96(qT\Eqo(AV>m/H%kJ)7,7,L[A]>p7\G]:&phcc?p:!&0Z?Tl%dr>qQGO\OrbmHCd8kCBH:r,&_tV"H5j4eX@(?EXiL,?">;$
%>YG^i8%BX+M(;>YV%YAZBk",Wf+rm0_WE_D/upj3i$M&Jbhhnse`fV]V%Y'4bs3`'BLJb@(tb]bciqAN/jE<IUkl=/YZ,4+V3B^8
%Gl(`&T^"t[`D-tLij+.2jri34-4"RUQ'ssQnrg"&$unO..SN8V>6?:0]P&E-%42rqB<jg]*pa$H:^+r-B]qThA)IeJ@/;+K;Mfh)
%XnBP8^*T[d"=SdP2eWVYCE\396BXjNFF9"/MkF9J5igH(5*QO2Ag++'AmDJ=-IM<WdFA_RfpL\'\d//6*$<O3YkeFFkb.^H9*YGd
%.GCj\OV)u`-c>*C,'=T2#i?N:>^H&>^gK8R;?-qm.[tk#2T].C-#Wdi3J5ECRUX2]n,SDZpV;%Pe=&Ka+(T$-QT\Yu!WHnen`[g,
%s*ak)k,6rm]0EsBgDjUaH*3OtRhgnh@NqZ>l@ULl0[;6hI5[`r9&crg=R^h[W0$Aj_k\qC"X=\63lL.)@>le/$1/;s;s2hV'Hmr<
%+q/a:("D^gmdM\NTm4#YRBDRW6?CBir[Lp\CY##(?WLrsNdW;1FZ!=>c@)Xm2-WCjN$M1.k;!.O1<".fi4"8mjj)uAF=/]"AbSfP
%jmk5\\:p6XOl@&JSia?m`RhUMR@c+A;j[7.7p(C>;:71\I?.h'gfcguLPf<R*76<s>#@tc;V5`GG)?:W$5<9#_Tj"L/$$p'^!;Q6
%p"S*eYQ&^Sh>QJT\:/Y2'cr!pY(Z&/QI$/;-UMe!J7BM8Roi/-.g%"pU5FJ3([L8bf;qRg6lQ_g'`^MJ_,__9!/F^+h&q0@8:Cn'
%1N5*@\I+HI\&O8:]9oYO@!d]O5t_9T"9jP(Sk*Vt:G/@n,gZm;XtSo[?h+Cp$*a35L^o+%LFG",U8R[=?l!&49JB5]Y[QIkr[D^a
%To,psI*LU8ju'?A*mpMUg$97\J<@CEIcQd_XJ8`<C[;<N,Pg1W0t2g,@[*&/@in2B\0YK)$m>Wr3,@b5ocS9_\L!RFaI=d#n+q?*
%g>(l!20l3Cf,!2VEuAjp3]B<g:=/DX-01b@L#gMoOukU%M^[iFOD7"gc4-ZEGjAT?C56$)g:>%B.2<WkUs;-7et->@^V/:E(t,2_
%Z0@<:=(EI*.2p`AJC[DY5W+3mWYu:09-\*7jdHaF>K>uCY(GTb8u-)EBC9f2qA*kXJ`=D:;+)(hlG_\P8qEle#>*.'l9`X/l9Z$D
%cM4$':%F\TclEC''eK<]eVisGSO>@D&dO=milE(NSBK*\b%g!O]Y;SB9?sqMHFi#TF.W4dCYI+YkYH![ecJ-#88KjTZ5bqU8jFg1
%b81D>R0$&D\nD+0ptQ(&WqDk5\'Nn%45''UFis0VJ%g??Hhl.&gK1R:Du,U\W\HY:ZNDG8Ni0&,QGJS!6PNQD`q,*T*=0qhf-Q:S
%5C"+l:_KH>/C_/78?!4Ee#neEN^is+7PPfRKm9=q)IJ!N//g4Q7FJ6@M-Lea\=+s6!9/PX<24nMr4j^qV;Tlb%$rGD*o=$2krYT]
%#Sm8/EW8+LkkppnbAMXcrQ'2<gGc<bGQ$L_Va%imc(@59.&@7KIij(0qs+bWrSas)7d;p&h`>$n+Db-JUm\;q7mVRjHK7c.;o[qX
%MlGZnWCJFZq!]nY+5Wha.PgYV`s!MK%.F%pNh?."'-o4JG1G7U]+br>63%=,ciFR[#7r0mVGs`&R\i>*(:;HZ2H!!USK#%PGmcB!
%=#)u\\Qcb^?#s!FYV!iR%U6ugOW3Y*^`7J"okoP`G75ln)ad:3oO,]_"WC+qO"$"g==MLQEL3$/]X7UT`RtT@?mo_mA*I9RR]^oB
%9fP4$7H2j-*P8tg%9-4ohlc?0S1E"pH=*#`cZn^Q08GTm]s$\NVlJ51-@l_MYYk_C@[)q)[j/&55=3/-rJ"=]eaq-dK#Cg`nr,0R
%mCoM7ShKJQ)gq91&'gVFV28:!\V\psFmK;f[\:*Q?EF/*p?'7M:#XD0XM=c/\*raf%uWPbhF6S?IJ;mt*NY>%plDj9Oah]Wp@.Ui
%ZKR>9pMW:1GuYmsULH^IM8AWALBZX9e]b!m'1Qhc@G/?N0/D"e991ZpJF5;SpXcTTIsg-2A#AX>XU3#aL$kdGD:r#sF\6dVX%6H)
%qf`jWm+0=L4?E.G6+X'9_&[#&Pn"Q%-XZeTF"G5?.;^7n)h$De]Sio\055n8lc>iNHh5GRiUs6CJ[ERB%XBm22036WKJ.6U8!A5Q
%'bPCQ(/;2@-AOUJ/D=--F])e)95bM5gZihEW74bB1b")1<8W]U''SlUHqr_LOMIa^lV5\9"Ire4'ND6KC0N<'"dRY+/\U.)&uG?2
%oG%FNit">0d-ZS_L(Ls!R&SW6G/8#Ami0,"V]09o`X1/+FB$t:[JAp#_&JH.6'cGMSnd/rI^=$4_&QOtnaoKeN98Sk[a(pqgm8P7
%G6ZE??&3MQAMDb8NCa,IOPX/4dd1Zjgm+1"K[=n7S1S*Dj#8Q63Ig;9`i%N"gdBo4dKrV(EWkuJs+#7u@idh&G]JQn%spQk]gEW2
%a;'HM$5cInEN2?@?qCMV$g-K*FUgpUec\PQ/d=N,[P7K@g1P'a%f$(1pL[]kk/Mu90CXJLgXSsg?satWe9ICN*rAWXI#jlaPY*7$
%a%Vh;Dk?t&K35C?bTa*UR:M^HW_Na^":tP7JH-7;+P)h6Z@h)E1$N#u=U5)g_H9&r$73;jd0!+X!%,2h9pf,46Ktts=bSYXAFhWC
%&]5JGGfbKbLlP#cg7TUc$,XaUj&L^i`H\6n[amKt8_#f@-,S/Yc5js!S!_OAD\@[hVI.RW+\2]sLqt"nG*dPZ%_<&fQKhPV63j9Y
%;W*9@m%A.VU\Y=Ll!4'LG=-0VNe6.L*er[f5MO'DF#V3VVkn7m?Gga2k>ldm4/Zh"m2l&4EFBN;5Q,TnmDn[FrqQH3SJmV.OPUSt
%4*Su-IRT/Uke?\p"N'LN;i3OP!%K\b#t0%?f072T8&8]fIhDYW5e[o<!sY'pY0EM>-sTHi`hNXWl7(B-q#LMs]jTptC/;9!;PAp_
%(+H1t9.SALS.K`!+\Z?(<[mM=B86`laGE[W(#m^8Yq5HGA``([V1MM.d8Mm@-DJ/[/*LONlj!L0M%3QJ`&%s8O_67_n,6YeXUeJ(
%boa#.X5Z1d<DPd%\DD;W3+(bg5L4<5fTGpIcSO2WE0A[MKa/]Q'_c[iiqKdt,thLLLr9f$6(H;A2Kh7&<go!3A!!>L7??m5jf;am
%"d[q;'"ab#fWLRC%`s(BilQYh%R\q$BdjThZP7BCn<Wh22Q>;<.DY@)Q)j;hQZh>&4)qZ2\CrLdB&[R3n>09tg.kmi(Tt1S[f(N^
%qDk`rGHUoHY5VdTVU"Nj55AV5BH,JggP8ZXD).8K;0EYZSk-dqn4$&?i;B-n0Z,dRP80BXN50"o+;-#G[k0&8`Z;?29tp#IJgf<3
%@3.Ck"2'+:PTGe,i[iJT`6OZ`-t39KMlbZ@fuIOVoN8g7[m_m40/i,F?DIgaDq+$b`F-#[1>@%SgtfOY3+'m$*5`YAZB'hPA"'cQ
%=tJG:)In@!D@$Hl$(dVqpo+F=Il2tuD*$tjD1(&8<XacDD6r,@,RE]]"t2%K_)j0O#SqZ0cUka`i;aUh-l0>)[5EmH_qVCf8PB/'
%C2?R]T_>pkN:X.]06#u[1b?QZ/X+Hu^A[ieO,]$\6Y=bT6cZc<6R?[C0f"IQ&njdTo#+?2OsipI*`d8S9YC^`6Tp"A@U,QSYq^T.
%(pKTH'$k_jTC_FKL12[=E=r&XZXt[[@<0.6&5<=^,l2.,$QV5$p>5Pmp\j`45CHc5BqLDgA$!i3;<GIbI[XagWXfGjqstVaO#pmo
%qcW3IV63sG5<[gFF@\_nFtXCDClR4(LfuTZOJ&e&_%p-n1J&R0Z=Be=[]"%1bsT:q!P8bO?g#^E@BZFf&*NCCNskES9q8^S/pnNQ
%Y)X/sLP;eHJfQ2@%LZWuKra7PeT'R5\7!@\LTA0&;hf)IlFIiSgXR_!XBik#B\1YXg,0%&<61*R[93ItC[.q?J!b?U7D#^TFtI8S
%Ce*kRqGFj?)MbW&%7>L2g@\a`^2)?0VHlEi1r#l1*TouRA>hP)f0)d`cVg)\Fj2[Wf?oT3F`_ua2$L6R%9Q!QG5[fCjonuI;7hj3
%:V2XqQ`U;IHd-`\XugeEb.^n>,i?#q2q>'bX5h'`ET-1BEHPBn3\8olip*c;AQZH':0\eUY)Wm5r-GmLY$JfdC[J"rk2P%g2*+r5
%^k2m!b/_X/cAEXSb_J8]%qbA>PCh%Udr90YbrK`fDaQIXYNk6V):ra.3!&(c0.nXj>@G+[*?8*@Lrg*d?.!X0ciu]'+N:maBB":D
%,Y'2oJPb!:d3GtVBkp'b;R+\M'.oF.]QZ>rC7rRs%m[X)CIuKc8ue0EYM'n*E&rTC1pWm2)=0/oA#[1A8p"9UaR[*n5VXH+d;W,/
%Tlgn<;bgd*?!EY4W9Z3c4"QA+WnD2C8Y"SC2;CrGU'>cl:;mG2i^#fE#'M15$!X@H50t(&Zh7q@g8I8Fe_BPm6_*"1SCkso6\i6f
%M1XUOOOQho_tZLAV,!eaE2/'.mT:(4W^s-(+/r$@,!r#qn&2XK*2&(l<MA>I54T336oMla_,N<g(H(E*/Tfm[hD_V3NU)R?>d*Bq
%k^Mf@(S5j0Go*&2,<W0oeF1A(N;i7oT/Zf>l),UuF[4LJ^Z57T4;#=Tj"<%'_k8^u!7)1L(3]c!%R1"'!JPJSdIr=GOi@m1!Q*2k
%C5$mhn5A$Y$kWeIU&^NH3Q.+A/1\.E8_R$>WORd3/3*,*P_I:t.ES=A7&_8dE\l6#b]%L\%Mp5XYe[YSZS@ga-:-u5DL:2OP:O\@
%K'5R0[9@=<(eTcOYdCJGgIPKO]63/>,[p)BGH=@VX)-N3b`:doR,=T`/1Gc]C#;AHJ-`@+@;o_(ar@<<88X8A,a!.t9EI:T8.+QV
%+-K6i0\_\X]]841#54dQP^U[eLoRikPCWNa.AWoP3D(^ieCYBiQ:Si\g4$b$e15cDC^l.60+]c@ET>W*?n#cP!KR]R*?nCs.bFI=
%eI?A2USFVil&Z$H?*k:ZbIZagUJ79,\rU#l]F16oP7C9f_/\[ODi&"#@Al:f(,<cG%,D)l+579/:p"@%^0j-gWoULC$8W^Q[Pg5J
%C?#kDns$DY8BL\41jJ:jo3*Xa559sqBONGj'3[=?lLhEaY4Y&NqP;At*9u$nNXr>U*er<]`_Af$&\KNb]+14_el(fpZJ_%eKo#sq
%\9b@mUVQJ8T2psRJ)B*YXOfKXANqmtK^_TBj^a420sEe8Os&OD0o!gAn6@BCF1nU_(;'U[akZpp2gDWkLnQEEJP<BbNM3o7Ce>;M
%[hd$_@gb16c`X:$/BgjK5<I%E]s_X5.3SC?-.PO"Y11=jDY''I'[F4Eo1^0%&(SO\@29,cA!AntU_7;IeQ"np62DP1&Q>3UQaROV
%c%3mKbs?`P0HE/eT24JjIdj\(;0r_uA0IJnf5W8NF5qoZ]M6=r;h^Q$Sj2+<4YX?dR:C4`Nie#p+!24_C5JO8G`A+9/CkeS;9[!8
%DRImX$4)^V)40pQ3fI)66BXO``52>`EJg+r7kJkDQedg6VBcPIWoR-3'4>tCC$]Zo@&D4MR^B45.ol)-[P[[2B,!<i3H7YWKHY-G
%'#2@4c`%8,n1R#(RR1*R3T4=7pBdMM-AjbiJinCK@;RU:pdDV[AT)Sa2bm=B><ODA9bWdl/,:CCKTl)-JdRAaXO]WrGaf#ia<D9b
%jJBo*4u9K6<F\o)c>AQ*AZL..aCQY*E:^rV+Vn@lC;PpH6cJ@q8N(J[>C5b$X=[XnPBbe,9A@lQ0.0FKo@6MiO*]1]cS;@DeS7le
%[[M6-1Tqo-mTcAd6P"lLRfZ<aZ3e*Y'hdhp,Gbp6i7aXM?!e<]!p.;=+P.h'71?h1OL;3m.Rd3_0!]F2We5Ck>dlK5m\W@p;O0;n
%/[V:A.&`9jE^g:5*8.c:%^br`-P]&.$\o0,p*NeoVH<efU%HqrWC#?D^&4s`>$UoeL$R?^#3ne<?GrO55@EFBmlm7f*XEVO"QNNY
%"OU@;W,)Y%dGP/$*PEY/;lr[\\B,qlZ:BHUPH--a8etZbjB4l(X,nR+-pKp%'nsu\]#t0#bMJet/:k,e3++4Z,IBL<i&:6$hQNg5
%phK(_Dl+:oSQC7rFXjf&E\hhf0u*QslI:^`Ah'/]^!aZspS:0Jl]/tMrQVmE%0f+U+usR?JaHM=]uuPG(8U)OZ%=.,,`nsDlf'B?
%7F3;C7^`p8ATZU/S*c`$'YL]HZLtFjl;^"ZY.#].KQLApGc'N:cNSXVIYc"eil'"L?VdZ"T4,nBa?HT-"5$DYpLUD+cD.uG>@G%r
%g5QX_3N*$FWW=+?dSFi_8C26r!6BH-WF%;OiP>P&V^(=6n"s.P0&etiW"SaWT75F?qr=ThSu;[tm-cA"mJ4s9igIL$X^LSdirE`'
%*b:(:.mc.NG8TkmEt$V?U'C/M$VIjfTtF:0PU18qgc3]$6Rp6Z7&kK;j-aE&qVK5:k)5s6>V'p@2+=Q*gN_kgi`2L^G3IC2/\%><
%$jF<&G</M?%[CiFSCg)j+Hg,=r+mE-;>!dL+Ed,dka.d`#;L-RF'/QG1&k'2fY#&H:,44Y!5jj"C^#iSiUiFVnfH6BGp.5Z+akuP
%Oh2e\H)2[4NeMsd7:^X,j(/@h&!ID/Z]I4<U-*o!+2:R<9QrWr>5Rd/s7l3\YV=:Z#%a8#/Sqb9@6`A;o@p[6a7=[bp\s:o$f9ud
%4o(1@(CWKb$qlDcf,bC5%5t`B%S=m:)j#IUMrt9i*T2Om%*85k)#<ZO`4$VG\4n[u@+TNdb3.s/R7$PhXF'V+iF)DkCQ2auYnEVR
%8/B\52]0"+rOe#qq"Z'h-]aRAZ-bW,+><MqS[<<iAS_>5Y<U/!E0>:X[f'Ptr=R%\j%heZiV`0B9ciE;9C9t%>R"heNua7.Ju5d.
%-3FH^-.*5EW_`n\,-ZDC:*@K`qI#5%b<m`4&9X@Z("s*.+!hD.i?KnR8KM]%_X4@$Zeq5<G^j>hR'NE%;pDD`GVfXR:*at6LeeA1
%#@KI"=d!qq'%d>rAIWCp+7rSOHO9:mU[cG.=<+658NRiK<20XH%lM5SF/FZ0"gEidkS)WJ?+r_4<iC0,C>c7n-.-4T$:i>XfIDKd
%'::"3;Y6KD9&hQqC/T_58f5lD%$9a:4&'Ff=\?'Xo8(pt9rOmG[-EGPL_H(@*B=+_@a62;ZrU/ufIU.,pKcl3-F`\7&k,p0AB=aY
%iRR,"XhX\o>f5WZmDiqV6h?9.j^2A[n*jnh,$XBS%MLrh5Sk8r`([R5o'm7]WIPs3%MiRT?)7dfT%S/&(YHp\lS/q_D8<&*>V9AY
%I#%PQ8a0fnM>jt=Ou[@XYlm'l<1RO=0u6&GnV1j@:U#_%"(1ql2/R%QD!\-%/M6QUH]r2p>hI/QV-i0.1(WmWE1*WWaEK[kKnn"1
%C(1&f>ju5Vs+?n.7Ul_+j-+SH4/48\7I-</Fht7[q/7B#%\%oA1*Y@mRZ-aG/:J<hic)B>Ko@-[E8^8jn9A&[4=iT9(*3toO,&G0
%_ntGBiUO/AGZ]2Q/3Fuf/fmf4*e,=d?Mr#+<'A5D\BnhV+MD[@X/eS=;*fZrI=.0XX*u/:H/he'Pa[@(penT-@n8Um;$%UN3t5:%
%C<"W9Qm<JOD-M_9!a"&K$(Tqa7G2d1Qp#H,jV,F.%5Z0$\DYCPjnJ-BpGCd''gFWfaS9ONPIuHSbjo\X3-kOZ?T)b=r;3H?-S>?[
%b($H(<lep?p,;[i"03q]'=]`EUsrkT0TQA>I.1Y.Cf#S4JHeW#%"Fp5BaM<&jt(=>"@7E5*oRGZg)ap;`8h%s_1U#giqco9huN5#
%eV"="Y#\FS'h4*2hF4H0</9_ZK!nKEcU)k7nO\VL^+!$IG4Gm8Jfm5Y&-:^/ZY$)?']uNg&LqrK`&)43gkO\B]7'3R>OU@]lPk'7
%G4k;#k+p2bZ[L^6;i[V(LEPa0HsY!q@1BSS3/H$QE54i=QI<^\!4j.(A1Of)i*_(0J#`Sd'C_UBYsE;KB]Y.:D,,at^h!Ws7f9(!
%6``G)l!:\^i%u)qBNRYA\j&KYVWof<?#5hV^G[?XRbAN9?X1BHc;XCb>M>,C=q"-%V^[(!_$`Or/-a@_YR@g^5$Z#ier%YDpAZQY
%IH0</hg`*s2%701^VRgP[Y,st`WPE'i&DN4%j0/\:<S]O^kn'BUgV(RT7hYqI8_Y2U?=^WCKW-a*^jYqk7#We!p/.:qY>ba:n)KJ
%q;g#jI?L4_<VtLZV$AP1k1`cV5,SLLWp:CDp<i?l3dbYqp:Kf:n)\GtcQ+-$oRIF+Xi9fbZq1XD1GXFFUHN%1**k4GekDu51jefg
%1t=hF"2fDPnS'9'P246(10ujJCk[DBX[kL29GmJa!Bl'8Z%b3?j,X"NZh`c#P'm;dIJ*BX>7*`>$cJ)0.gK>A/N*=Qko4O4S:jZT
%jf;Ui"d[qk1.I<?'q7t<Y\ZH]lS\"["ksQ!s692PbtdbT+.dWHdEg%\F2=Abkeuh6r8*Y+4#g4dXqjS'1+65a'A+4X'3O0DiG.+-
%Dnm,jE\l#l?d<^:9J\"Ho-l6C@4;"V\b\-)*2_T'qGIe)c@.KNj!<18,+%?,KlQ)!KnC3.0M1rAaQ9Wsof,P9\4H;&@)oH?WnVkW
%P8Cb7H-m'EDZTl-(pb`7E6X0N>i:mA,MrjDcB_cR[iN!ePaH_<<O1`oNh3?KD#foW4";s4[+[#/Z_?;o$9=Y3rV]'rCR^!?Zn>_1
%YiUO^_::.Tl=$Ci&!PkcM)i&P9jBmC-uA>3-)5pM1O^5<'D(N9;Xlqh!8lu#85$+j/KPu$U'`!K"D]=C$PYlM4d9($.i0;hgnmP-
%k/(;O.ju"!"O<!0%*5-n>XqFE7W>C(4IOK/+<jH:8Wj-F>nVO=21HUH7rQ(!N<I,D56SV8`b%@"\*WW/7lSJ,RNC<Mr=sSAiMTVH
%2`&H8`44LT-DP"^OEWNFh2_8>1hH?6%V*GA[DTlRCstjc[Ch]-@5`7.LbDAZeJJ>*;bGZ2?'K`ilb1o\.='J,HaAb0[dWt)jI4"n
%m/>d@?'CfSJF=3T"<=7SDccS!gQ]moiYs2kditc7[/AL*k1c7KbAdVXFM>ZPNbX5k"3e`Cji'N'WrE<t8'eh1<@$/5@L^Q#-nP*<
%,J4t'VKXR%/Qg$dhliU.qV(aVSOU9/V=VZZl1Kk\dn'<-U@d6]d%>@]nReM[n,)nSNg+p2@oG=,D[.EsdJel/I2XC#FNYKkf&:ZX
%#Qi2q26)Nep(buKa2(AB[UAY-6sqi"I=pi.Hf.?Pq@n&iZ![N9)qTWkH*I6VEI!$1IWt&d4(Z+bXdOIcpSML,Ae]o$TE5ph&1KKa
%&+LeIQYL8<L=&W@e;oc_Qsh\W_Iu$oqY::=F_ifIoQ7Pl8"s0CIq?b*H_C7Q9Xp/%"/!mkTCmt&KWt;Fm'i&Ja]jL.L3Q5Fe$3#W
%[SZH\YZf:fA^Ps'`'`QYU856,!<.X%JBTI&9U!2e.(_3[^6Qt4M"HPdJh*8BhcOFY\.(0<\s.psWifBGY767b`hf=_Q0l#K_VSm!
%U$sWVC5k*)c8LT)'Y3"0N1!on]FRFU[pVd]LPshB+X2"pZsYY=BlpX28*COla@=^fKeQ`,auV<;orX\@0WAUj4Q0P/6UI`(#WeQZ
%A\^A@a)4Zin-+j"4G:2_W6gi6<42fik!R),2?KDLm2u8QHK3N*,=S&QRTuS&HOgT2'/mR4n0p=#"E0&<,q=SU_7N&"6dj!Coe]+N
%g`)@X_mVM<%oX$K[N1HX?FM5r7jlY#IXP*BLp)qN<u.6)?EY'#O'*fWKsTiALQRBNilA<O3>N\$VseN?TBO&Hf.Z:^7kLM&HoC!o
%8^H^JrUOaSWc-V;2O!4ZW*!Kt_NQ'n@d\;EJmQpJ\$JhI.4>Z.-d\DRgQaT%HjEb/-HFS^JMk3-le<<>$D5#l3qj@O3'Q7>X='s&
%>@s_k+CmZN?AU=OVf+IgQp\E+s!"#b6t3.H&)F,/-_./k@0e[OdY48$!?\eY0&"#;!O;1pqsg#Z(`Dq;cH944O5g;F7C8L5`)38F
%q(k6LJJ!($VXV1X6INn/oJJ8R!`Nub%n9Em#Ai#8G#ELeRD+sj]*r8c_2<HR?GY7VN-BBWZg!]f+?-OY?,9PBDY_U7o&3kCjL]lh
%W!2`'FLCAYi8UY6FdL@SC4oSIRsm4N[_S;OX7GHsk,!\9;DGKLCc/Up2TFQ=1BB0iYQ:BG\_ou7.pgD#3!d_@3A04<ni\Y`bOW>A
%hoV7"KWW%9Aq3]`^=J_+BIB_n>.ks1Ml@3[*E1#"\4GNM;0u%DSBho0.`8V[I'H@3OqOSNfN$WH/5;2e0J*%A>[rMaP7sGO$7m7S
%AWU-ngB]mhrCr=:6N4`kdJ!QDP9YSQs*o@pmiP>1-V&jEHa$u>?uc?1&eBO%Vi>tkeS#+"lLl@e\&d,YfkFpLUkXC?lG][6<0mg.
%b/-/gb.K'JfWIFk,a8(9PNbd81_>qfE6&Q3P1DYA[DHcW#Tela>*cYj2Ll#`I'qL<0r\8C$qh7$4p:V;UH8Sh*UKa;A(!W`j$aB,
%^*/1BjLJF+i-bCk,;T;]+$T+a55of46QEph-[<*Z44jc`/38.if*&eYZu66)$6aq&;1ip.#ad+b`MZa>ki%%Cp;:Mk317UU2YCQq
%8BH%l'G*p^G,d:7b9f=V'Tu@baJQ9dR+RPf$TT1X3!=lo3ld#8&RofL?+qi-/(Pbl;?YpWc)VN'OC[G(ce+Q_Tlus`[nf=/'Yj]<
%TPZcjL/n\]`'@"#L>)JH'+AS-e%(dG2#Ks0b$dFs3*/P@hPSohR6+:sYM;4D"(6H8cGE84&WlMK[,uj"m,apak]pLWSuDC=Pn!Zo
%b4KP<FMPq;-2B!.X!\`FK+*WVal%&,kC-@0s4Xmf-dHt]IDm!qcd-c<!<QVndc?C.;p(aLjq!54aa?a9H!d1Jr@9YHq]`NGp/ni-
%]3kM0qpc2o2!PcRP$Cr^9\,,hP-@"2e^7(rG:80dKT8qu.'[3MJEh]pK=_Us2P9;(_+H$hnH1]nK24V)R*JP9/cAk;J6_OKmQ/EX
%$q6j/RA%<<,J5rn_E5cpG8n3,%Gi9g_`<>?ofTr.'V9,;r9^(t'lZA>.tQT$9oi(@cjQX&.b`Mi(T):bg3!rDbTK^a56"N2FrS+3
%4I3o8K(qlKc#Oqh#tdN\#GGi#*"HVlPg\,APMjq"^hVW$,[rH#7*42J'DeJ<)l/?tB7P5:BG8p>*YA;jdqWc(G&l==g,?;EG"2SA
%BiRFN'ButHDXT%n-%s"-NPV<`)hC?5cpi$-53gS.@D<$d_'hT^k]hit*R^Ri#I2gE\r:s%!,<kZgr[mV5884n+&_('6d,TsX5r8p
%ZPFEMg*&5m]ck1/!!n!$"pjX6]<?d(]ETE9(qq!qBGZS5GZ>9$Y1Wd-M,/J=bluDA?YMNZ@!IAa=6N%6U1",E3a*WJef+k2cJYI'
%=:Zmo_e&?cmpZpqmi[o0/XI`d6t^G4%GrRd`p[sFPi)Tnn.*:$":652hJ8KN5%5\?=NcObo3#MoLAYk2Y`OpOT$We*!8kK]M,Ni=
%d2I^p//s#bms.R<N`M`o$'#rl.TqQ9EX[kWSfo]%WEX-.R\CM*Pi<^\d-_,0LVD;1At)r6E4c=!>'1`,-"^%3M@CV-j\U!U72i+]
%?ksS"Fh<4W`R@[s(/<e&!6@f""5-HPY-V5kXN.GBp<l4`dYoUtB4]m&0fgY]6:<sU"SNc0gPhPU;W#91i=t_hnJ"X0%'QtO$Hn.h
%n]pW>c`.?pk"\_%J,8\*i0E2JpVX!0O;[.#U"nMDPdPN>M\hMa$(-UDGMpcedKO7+iiJKb6tpV4A1_)H[b47hWX[c3a5/1ZF`_&,
%;j5]pPL2duek'VYL7N9@;9<s7D(t&H^lVC4e@;ocEb_^]!!Fr)i_(_f,cRou9_Y2DH+N1Gi(nq<?*73@>Apk6@'J+47$GI`S$P$$
%340/a)qMqZGdbC=fNjZ=AU.$<Y@<2V`;\aqA$V9]W9',Y'QtjarIq4qNT?qt#(*^X>.:_'Z+DF3TY3I0-Zg-"[Ejsf)&%-.,dtsd
%:Jh><A5:@on/+Mo6!>5\_Uj@k;3W^P\g+T3;3[2gLiO4&Esga!,tV9JdZVSr<@(Qk$#,eZm'2VM@Fa;L(>R_5(J/D]oa1='pL1.g
%0AWjjU^t/t<9PPJKOi'#/jpRiaFKl@MPXY=Te1g/Z'TRFl.(I'INgsie(&Nja<SUK)#07(foE0*/bP>Rp9Ld(1<qEr&N`W'gaS*5
%bIkZZKl+crP'N7.QBp,R1QU$+Zpk`Fa8*fCK@jHlbp,/&;h+$g-O2&fqMS9lC6>!Ni4J=]1@Rd'!t>oG$UK:0-;!k)S;gDJ>q?,*
%EW@UI6RE,[:m3]nq%c"TYR=^o@N$b:Qj\NdD92[VT<SQCPZt8m&8Ar"(C/.hX:,UsdoS9q($n]igSd>lD)/leOdA*!39oYUT>Ot*
%(@$r<A`RT[8=p)g*1sdeeP<V8X4&p%RMY<QEOD5U+ju0`HeDHBmPXUf"hVE!=.c5:rtj_\lVZqS`<WNL@,[=F!RC#l0uDdZSN'*:
%8]T#fggT2m&ahDo8sRAg/sE1).FRb/<:6%J.5WEl0"auLQWjm8bgG>gF6.'MfR$9-YRlJUUTrTo.0t8?h6]0p2lt1ffF7CG*%g8Y
%.nA2Q8&#p32g)aN_OHBUcV5N>(CmHR131g)ii@p*!>E["3P$r@ib(pg$qS2YL6P4d/XR(kb(lsR0o>-k>bRL"jZ:0h,G5HuN(HZH
%YBWg\[c"a[:,@Z>@6^+Q4u^dZbFI=AZ'NkJ^.hCDQCgMJ)gDbGpt-pRnWF:dr[Fg-OSo9!TO5dfPs/\-U-K>,1+-LIHaqAPZ&UPm
%#T5=a@`FW^4CX7kE6<W6YBUhJD,0me5Q&DM$D5LgT1(CpMp1[&qha5nD/n%3_+hhu3DJ8nN^qjlfo%N!DVCE&S+:Pl5&[D^SfQ"^
%f<&>L\B-YT.UdPX5E#9^FY\^7dNe3b1\8>g,:=*l4NbF,HNu[oD(/P2^VLTP>;Kb"jdN/<1\:T:n*T`G=6&3"-@(*n%h.1@Y\t(Y
%V!fm]MX3Vu/OoIaWpL3DX:]U!;02"[W/B-Id%jG*Ltaj=>03/MPjGgNMJ(6qg=(H\EnOUV[QZ$B_s+Ku2>V#7Y8ViH#-1A"8R859
%GLaTC7CM)P&oH'PrP5q4n,!=Bp%Q-g:Q[f]N6-D]4U)a$p_7,>X]IWCcIp=spE4B9Mghe9PNQVZX"UBk2D1JKrp.W)376Lfo"Ust
%[qP(1k(HU@EE8_Q)2[k+#u%@0+WC.k[t6<-)3D?I?o`34DOG\n6m[CY#2AH6dTDd5HQ8'TId_Ve`:>F=_f;sU^/nmKJ$!]M_WkS-
%\GQ'_Np(%jp"<k(8fS=p8]1qr`5"nPON=MoN#]h!]c/WH=$L1&*!aq?ojWH;GR%Xi[L?;Xqun!?THE&Z=-O>!jD;V`;mE?0D4%R3
%k1l[)_/=4"Dok]tq^bdhOk>F>8U3e%<\<s-00\K'*?Y)/fLa6Jm@(]aWe%mMJ>Sn,]$'l#2lAj.5Y4/$2e7hiX$P;K;^\M/GjI7p
%:nFeK@.uSo?'j:25hfj4r.&ENE*YJn:S7%fnk<\X=//$RUE-6RY1cJhZa-Uu0AS?c@J$tV+W/3a?Rn9C!<^tV0e%n=.B-kK;M2]a
%2Z,3"E@@amb`<ga^,2:rYe#flc=aX,L;hl7h+WMFE&nEN<+gu1b.%jM4.!-i9QPW%W=L&`TG]:kEKL^*>AA>t;JImn2Zo,*U=$H:
%1g9JB'&7N8XdSK^p$iD:$d>@lOGmbkVQoQZ5a.(3f8/lKGnmE"+MZDaH$3"YP0p/cfe?HBftk(D2[d@aj^W`a65e0?HomWIEbq\H
%^4ukV9]]W\K5BVA;td=R5F_1t2QbTk+IcG2OU<QH6^KR?96q`;pEoQWhu3&2',MS0H@%.O41$7V%^%W%0*8\$iQHu5:qAVKW;OI1
%61lHso*jK0EVUa7W'M%jQTW$u#HiRsX_Q\leis?2cq:VC(F^s>Y+qs5Qp5SbX?:3i<M$'d1[%cc2uHUd+.df`E3?+eWNXZ/.6`md
%iZOXq?N*8D=?SW@`Om(Ks2LkcEY+m.;lBllGDf3.>*i2b`1Eo\K#&L9&TkE?.\Y;EPdf_Mfbq!Z,Wg#VWOeZI%D=\QZKtFl(J2D!
%Xt\Y@ZU-bGaerX(Pn[,r6ZfdAnG!4:7=D1-UGT[@A>cL2[_S&q<>@n?YtHa^8D1[grjlLhU$O9e'p"+RoBNkI5F:blQD#fg4'gW=
%O8E3QRLcVt&0^VN,_PlLWbDBPW?hn[6%,0dMq$Y`a*1=](Ol8\O+0@D!AL4[A!@r+Q(RU6)bfUM^.q1C>>(pQC=K^%%]"WV2!B>:
%6L^L`,$`#fIFqmV50U4gr4A6FZ3?:B.]_<)&:37S-K2tTqJC#Y4R`k![q9#X$kMX]%6q?DLP-X&qFq:'<(XlIHF;Wo@^ZF8/NiI!
%$e^?`\!q2.&ZTi8d]+qtI)","!PGrG$:34&kS4)(6rn8Ld'e.;?NaM8>;Q0U/ECUIK+hgDr*N<ej"YVlFj:=b%X*fM`=#Vk,sWIY
%J4K9dkj.oK9pQ=R'iq8I]2q?i)FST%1_n:>Tt#\%=E;4nCs_;lE&$E-&.s$sp]5+[B?#!<l:DrrLc\n#p,Df"FjA*j`!e*7=0Ej(
%;6F>ORaB^u%BtV(XbSqN,k*Kh0QR!1.kNK,s+ATpYcuGi2l;C<4,,Q`l=MFi6,1F5XqIF8OiU9qJ[:`pfgI`1o?a[l>6b6:_59Oj
%N7^/l'B/QjS/bp$3D+!+S%(PRKAjpcNfJn2@2ERD&rd95>bJr=TM/"r="0in9P?E,0FY0#8o5A=N"@FBCW+:I/Pg/_=&0LN<Z)s-
%U)OHu]::4fbcK2@j3i-_CahX&J#J)K8KFb'M3O97cgr`'_ZEV5<kPC,IR@$m8f&5c1V@HmW\4nCH@M]6&.F@a6dh8,Osj=#%bZaC
%:XoJ8-R114L^Cp@_ZjEb6liV`+:aP"lt-ltcRM#)[:m>SnTXGje@+h;?S)3.3JEmI'W0(8:P3GM>&./I&'@"h:BMF6Scin^PbpbL
%?PF-bGa[-m+r$OZ0UH(/^#5rZNhmnh!P$[8P_o^]?kK9=A1S&92B3G7HkR;NEXHh+qeW7k>R$puH2ZU0eT`^QU^5hjU`kol5X(_R
%IO+/^j+LIeh^l`9L^]&d.Fj%-Zk,'jc+d)4)[M5j0,F*+3_6!OGNf/g'XKe/h1XY:@apESE'WmJg=;9_]SqN;^CSMD4[-?s3]B_F
%]2sVUF/:YqGY906J;N/q"ZsG4?oFGNi95Q%r(Nk#g!KdnS$oXQONfdj_D0hiK$>/SQ51&t!L/tCTe.aKo(2*/0F]&^d543;njI2-
%Bq+=J_DlCb<aF]!?:9C?0KR.6gt*keF>-HFU_7D&0I+`04WlY-r>rG>$7$."6[q6Xq9Rph!h%-1"aYndJiB!7P[n3k@T*mm>d[*p
%jclW'"mmf36NQ2M=R<%7/1jFbS8U.@4HRWP0[jgfn%d#$nCst'#prcPe.IG?R0BVO0f2/RNl3;;0q=ChXfAo%TJ1&"2aHFm3!YEH
%M*mfuENdX?h)6.N)994GJRb*b'CsE#CDS!'3$hK5A=&4uJNPk67Ca23#Gj!#UEp6Po(7`h3=t!^7ccn,*8o'rk\L8O@$hcRPQhUc
%)9!eijoqC)bG=>GCR>g#3)5?s+u?Y?;)2X^&g]=L1Ba8R4>j#8H?LRZ'idNdaF<JZ?e>nP#.B=WLZ\lLZ-77k]??(H!5D]0@J4cL
%-j4-IEGQ%e#hA?6M9jD!4?H_=SXC$eFR"1o_c)n7#H$!)cONq0B^50TLiAXCG]lK23'n9;nTs;2g>Y*@(.%*&g1qKFP"UNR0OX9Y
%?.lQ/qNpsVq891o7kj73qs`p/^h@MGPs3Oq$%rF)jfBaN7+rLu-\BJ@8Z\N2^<mfKqH:n8GW9Z$6jaj&@Ue+pns+n&eWoq3dTAqj
%XUo/,:`/M3GVfg_.qqjiKRk-ZC2'&EdJ8jdJl1DD)c]m6ZZXL`88W!6X^bsDe[Xrk\sh,d0fj>o4\HK+:"k+`-;!oF;_a:(2<b]$
%M%qr52lN<*2X4L;@$OI_+-T6.$eTe%nZ\&8$YXAeN%jHlSp;X'.KJ=Z@;U$3aJgtu9F,]H"C7HUQ1&.$D1X$>$1RT3))"X6gs8;"
%Y6CH8a^QAFEKR$k$?ol4:GgNeKh74=BsHYC91cEm1!=V#j)TiRp0.iCj>G^q!84l<EfP[NW-I<mHLRYD!tn8>CjE:[=\.0(QBj%9
%;W=HI>d'YW0uG8>Yc-FdHW8!"$^+V_UP""Ld@k,;mfGa4e:&.Z5gnl3$RDfDOMWIfOi^.idfiCF(8fHY$5Z@>Cf-?tgrR'\F._%6
%i+V)$N3(V7&lu*dO`?;sps2?Ya!S'+fC3eU>5RiaK4M#)f^jq5Qp#^!@?PXg:*NG:-5!$\Hh&G6,[sQV?`:QX:_SU6]*utNgC0K6
%.*Mnh,iQb$!R2[BW%1eZ'R"oiE9]E*+A!o)@d7KUVbWdVE6=pP1RULL%pi5E5ak4"HkN]TLD`K3o4=:Tgt4C.+R2$mLD^4dXRtKL
%J/*UB5++^H!YBj%Q7R?SbTTNW1P]G&c?-8#Gc('PU8/^Y3E/EBP;ra`=o/T6i3<'u`bXK]OObG5D.9h1Sj@`%pgP/7C/`FAb3(dF
%Zt_<<:TS:c?F1QM>)Xg\`i9g77>nFN`H]d>XD0Ir[2>rJ9FreqWYU4G9E;C7,MmHl!8BZf6\K(&@Q`s#A#$UNK,tjeiK;j>>"lsN
%/V_GL/OjM7Wl8omeRGlp7ON@tl<s.]HC\e*g2BHg)"(V'>)`0i;(VtU5!(HI=NBtYZkt</YjdNb0j_4(X%$6f`E:Z"r1M#2eRH1)
%0ik\!1luJ3=+m(\9L0:!3R4@&N#+(cWYXV"(*iS%.#/2l@5QA@XD0J=csj(k0j_4(b?><DD*W\dRII3)8BV/!+>(Tk(,P[BA[N@*
%X05SV`i9g77>nFN`H]d>XD0J=csj(k0j_4(X'1I_4>g9"EOAS:2C>:@U;_B)@]X<!?F:V#>)X7L`i9g77>nFN`V;':EUM:JiC/[0
%Wl92q<ij8b0>`US)#UI=N#+'Xl,O14RXSYj-Ve(Ce9uj^0fk/M5;\4UC,%c+$u7RS5E'>33e`N+0q<m'(nEi;:@(QhN>D\g4XQ&'
%'5mm1TrDO$Mp\M6</^:@i6)7!SN<1sZ:i8";gB>?k6ZSt)2C&0]_Ng^4-)2=W"u-aaJ]k1c6/lcN6WQ@=q&XdUKWW%+JW*KB2L6M
%kE$9-VGAA1>)^`MUKWW%+er5b1l#%gd5b`:Mt+14YSP,taG:Ua?U]n#)79+teXg86'4C[q0Ala$<%m@#p%HTP6fe1OL+?)V,M\#e
%,h+CaPD>g7lJQP%JeF2+"+Bi[`YR3'DN3h48-:bRGuNC*n3,8p?^W[gmW?4'l.Q`1FC,TkTKlbZYJPJM8>!Pcn_1cW^tijc"m/7r
%E1d@;IM7u]'BaqKD]N)dd#0&=o&qg@6aRIl)-/%*Pj.6Vip$ce:%A:AoB)l#JI+82Ui6@+KRP9cel-p?%fILj+:iL>DP#*V?3JmT
%D2TXH[b4a@TuK>'3T1M).NR8,1^_!NTGG%nX2_T(X.@4Tbu0jiRYHh=;Rc]JYthN^klCg-I)5X@g_D1nmDoDeK(F#PeQ2(GEf4Ph
%9bZTLA?;^l!LssVgrmf\d%1N4rWapVM$K(.e&Ip1$P][99/qV&N$(M3[Y*PKFfBu/'^.siX^E7[:iXE-:_'C4A-j/-.*&Xe<t*_t
%5quUL`/&3q#,8U_0b,DpciCFf*#%0epXL^LJLn,]KMWThGWQRAS).>q#PWQ1fti2Sl>07?(Y6/$F<<[`c86;UO%HU>!]]HM,$Ikr
%<PlM%isAgFS>Q?LXe?nMCa^.'1TO\o4u>+)hJnC59F]c*KZ7-Ea9dsKhMff=OcMa:oK)P\ePo?F\a*G!Tqg/fq?]V(N7PNLf^u)!
%9<RON"rIG6[+ifX__>^LZ1S2p^?h:NBMJ$p&@,#(ABD6gSt?k%&N)DEn-'K#%n>^fV4t;UOP8A\Re/j+"gap[T=L>7<r5H+><B/e
%!9nUf@S,Y^HDFN3<B?:kmceuj8Lf\h5`,tGBORW*&dCJiQ.rlt:nCp=le0,4YrLF/dP00V89Ks>g"G%JVJp0$RHb<YK,ItBFC''\
%<V`>IX[8m\!"h]E`KJAql]G(j<iLc<F&1n*T;3Yb+%Ti%#qa$eOb<b]I$MQS5,bPhHgCKa_,;bTG?PdC/L]l8!dP'GQ>jCR+5bGW
%'3`-2#n!ba2*"At"s:)RB)S0jL*T)(Yjk-lPq<N7L77pR?*NYg:%`:KZ.NGkO+)MQ:Yo!ak$;+*"k.Cr-L<.s`0qr#"Ps7s8flp7
%HoWP?L'3HQ",s3*2VupjGn'tIa9_2>XFYa!R#MXrE0HhR/E[[f_JVuE<-L!V1jGupU:<"aJ]"I:.iN[$+:0;QIE)3]=i/csmY.Rl
%6p$rUr:[`Erpo='ZOP$(K;TZ-%A*uG1+GCUGrh<"K5JDm19s)Q>U(E-I=*`[L[hd(J\Ap;`'%3:(F/b`']^e"<n5X'i%7=#6bsgQ
%20h8]!+kPqmO6V?`7?o^/]\AA(.H,4fs_^OUHMsXZsd^m<2L:@:B5s:Ll?9lTeKmA.+PQAaMgN5Q0A03`.;6jQ,8.i6nnN<L:h^i
%oLJ'p:CZ.hHM6mYiIVI(JFtlaZ%SgDWCV^X23;k2`CYOX9E^0V&:Ls<qtoV.?4di'rqq$k)3]f$Iug]V_<8Xl.!e(>KqP2:SB+Q*
%)]QZp5uJu\]%//J-K`]=5&Pn!e]fr=iJBDEcF<$]gLpL((@3`?*L<-[%kDcH%W"@.l&Bq\md\,t.[X.E!uX/G&%rZP1':Y>6O7Z[
%e>,IFb71=.j8?1-W-'T!0"!V!0\/8s[Z84WEaVh]`<cW_(S7T*oR6:A`+qgE8GP1OfRErgqY-U?kQg??3=@h8rr1A.`jn6Pl[A'X
%j_993P^1oo3OV\)E!PJJZ>kaQar3o<BNj9V$Icr-;<0_.5!g+(i"ZWkL_LOE=tm^.QF!4jhX/brCr9&_4eEMtXL3dKA.\q>nHo$?
%O<s7+nOjY0T>f#WOH?a,g/45boIfW$>q:90f#cc_LO6JiJ:Q%t@Y^F^Z4ubIK4VI%&(J3<QAL3Ze99SQZ,"/cpbWbF#1]se'F`fX
%FRBpUGCsBAcV=N]buKJ]!B\*pOr\JZ4DsBE^<?h=Os=?*Jh=4fN[.")BuDX;D!?nPB)]ALQ_Ec[5kr19%ZaDZ8$m-;;ec[gO&,(h
%92*l:q*Yl?P!)\)nL;+'MTu51,VQBrF0q_WX?*i]W$Rck(>P'(4U)W.YUi!nlpS<V$e*f.Bn37iY?C"Ifp`-2;G"J&2Yd1*d8JTa
%JE)Qm3uYbT8)qk%4$Yugh#Skt96\/RJc5"ErsII#,Mh,qEq:R4+g?-F>ZI%8_^H1_IBgNkT0Uj.q;kFjnQ(@Sa6?%'06G1EP1W/h
%d6R7d4AR.LK[t>km>I'NZ-C\_r9!J*5CNIIVdD@U`+>G0^U*)Sg"5=\!.rh>LfSmY,u?+>2aI;($)6%W)N)k&6[t4,4()%712h+T
%;DKc0QkW\mQEh4%7o9[p`)S4L66<^MNg_,:lB=1(Tg.a2R[$@bX6nrJ[bfm4:U_t;')!;hT!.Jmp)MN9Q]gJ@?5apW#^^IRdUT2$
%*;t"T@?3FVSPJ=a2HtCLII,L1L(,LCoBO%u^[1ad^l/,RNkNMh6iZa%=p3^0(HLq7Z,;VCcKo9YK\@TZVuSE$Dk\I"Ld/DjWP1;)
%AU!Uo_S[bCZIeVaI9+6s;Un\Kfh(&&Y=F28l.c'YdBR?7Ed?UYNs`(3m?.Pn(/'V@:i_=54'\f$jWH,MDb1_83U!ppMJcZ3*E*0f
%Q:.V_CVGVW]-nRd;7N8I+uQ@2=cKG%DcP%jfZe/s^irXt(I]u.MGE$ah<!%"aWl;WI3%W3Gl?D@\f(R9mg)`6"`hd7cQoOI0C[T+
%?jeNr&Mf"r@[g]4Og9>Yr,oh.6eUW^]drM,Id-uAVcHT!,*4W2.UaA)Mt.P'%b`?-)A[.?,r\J<DH+Z"]kjsi)/A<;$[*N45-%=?
%k6I*.U1?"<42J_p#;u&9s618Ic<"E3]D#Wss2(dVrOe3/(V2*rp93pLI,'6gq;\CA:\>]\8FJUfXe*0uX:[HHP#roK@&1$FrfI%.
%SF;olgM8k<`\j;so\VT5(KPQK1s_\90/6MC'CX,"2H+N:&njZK'nsOVP4mfZE1#Q*H:4LO(W6@k]1BI9c4Y\B`9/>``MnM\&Ql!i
%3#?qG"@;%/(jiKM:_1G^6n(il>J@\4)Q<J.6WR<fB+(Cr=@-&n$,Hu7(ifO<fZa$U_+R<Jfha3s3M)?1fNS]&?gkg_c""-d]*5VN
%/CZI/m(lk34pYrmNP*6s`\FfA;@(D/8/#Gr$kJPRWRaYW74?Wg*%;l?^r)rbPr+Mf-#B(68lWP:=S7Ms(r#;PGQ$NDoF!JX8lq`t
%R/\X.7ZK.%AA#KnQ]kh4mE`;sr7=a5s1%m&T76RYpRaW4S[d>US9H":*5h,Yg1u9tQE-F5(EGVK!h[^3mR<W[er##9fI56fZNH9A
%!g=RNM*rks3$9cpkc1Cm&4\M"Rb`?*1Lh4WPc^&)"pc[mMUUdiXW1OQg7P3Pfl48YLL(>53pS2d5?:&gkj"jXF*6i`0/NjV(rn75
%/OV,lH=Dj"_6JYen,$<=L<)W<oFM*9*oYXEGG]u"W&#0qm&8a.8fK<s`47N9:uMjgW(TkKQ8#5!,WGi]fe^n$RPU#:ErJ`kn]RFH
%<q4[FC*V&jG'3+DOb`6.duufRO4I'Ls2Q!hF=N`"d[7?Y@`OC*_6Fe-2+r\6'G.\AZT@6I_,*?7m2]*&mV)H))7p!218jPR$#/ad
%)RaD^SSEkS9`oR/MN>IG13Q9\dD)nQNZ'&lAl5-q.2aW5Nk)Eq]Ri%&0uVZf9L*k,NF,>IYm':F$sA&"gp(/P_F^guHd2IGce+fV
%F1^MsAa"5:/4Qd+P:1%AYr9^4Ls)@B97_fd6m-jtGECR*j3WD^V"/jtn;m];Lf@nD6/hDi&Y?fL*de-X#!kA>jQ*7W6f)Q]B(%l_
%eB5s@SC%'Oe:tFUiq`GtUiZG"k_5"&$\Od4Rg,<XjOgnG`\J+/M[[)`a<K*e!e(7PDV6R`?NeuQOHd@ij.+4g#h8<@Ul5Ko,Hi?C
%3j?LQZ2E*/!*b4%NhlCZ2!NuC?MiMHc*,Zn&une6<2mp1rqtsR-cb)mgp_T/n)[lRctbs*:T)g278;TXO7.(rWb`F]%roQ2S\F4i
%4%n7o>9GD9`3-diH2TSL9WoqjN8<`I)cmLsGY3nfE2M0LK/k7#Vn%7P%bK_h/TAW/Iek4L4SEFr`Q6T*^'[rZ'C_-bK<Yfm*B:5i
%XNCt([?iI<o2%5k%1@@SC:Mu`4',dXX68MH?fjEVKuLLNjMPq$Y.Yp(^>6'WXddkumo<`^a:i"tS9EuXmEnE2Qb-6D:E!\?n#Jc:
%;B]TP%&DI:d.*k(#qTg4h8G+N(qpPlk9!kC?JSFP7CN.aTcJKkTqrKfd$)XLQGQc?H)>%06F%#8=kJJ&^%[kYDu?p3[+@iMrNc!7
%mu^A@p/PEESP%,,^Srd3>a+Xk?VA+?8O!ZgMG^eJW$-dt,Q>OA']KFuYjn];>q01MqjU4#?^C7TYO;STO+TCqpBP7`YB]?:Osi#o
%fdmFgo_=&Wn&7Xof$2NKs0AEEO@pE951=*l:?<oUhAsjKn?<keBSfY6YrNBY9k$K:@Hn_bMC^MhTDk$eZQMK3?Nf@pQ)FZA4)HTC
%-lJR=%CQ\SZ>dI6])AYp`j+.^DmO98(%*_]2I8o8-DU1u=Z(RQ@@Ps=TKqiOWknTqJE9[tA6>(o"oL51fE+]`KG+06)R*-n>L%bS
%Rec9$SVFH-_WC1l*d=YHR-FEd^1!)7=*(,/CN"3efYafLRXb(re+]?Pf&nF;j$<TfPlFbn@D#_"o(,b1>OdaV,^2%QG%0Nb:2o]h
%)0A20P3]I%3Kj,Z/kb,S\-uB;=!?H"pTj!h#A_2K=KgQ^4d(T9kmf*oG<cK[mdd;eE'`.=pYbkO>3UX;`LF")s,olc5'1^9o[PVI
%@_OpMS-.TQ#5VNE5s;05&60)FCbu>gnf3M*#JGl-(8hH?.jOTj`>Fh0XG;,Ld`u^7/e5+1YDm8Y%59OeBYRN:<kXKa2@O7\jf!e_
%HF??8>j@t+^*d+u'7!C7Y>4AuA;,ZGpZ'Zki2CY6:;(IH<JHt,CF:`#S*O[&6=fMH<\anRXa]'3-2p7"C*790_cdj9s7U09qtS>V
%hX>V88t6LPAhT2sgKE"eYuPRZ[%-_7M$Y1s?Xnhk0NYrTcs`+'N]%G?i.>$=$<]\6YXp*KfrC;/Rd$l\'D=]cgF+AG`7Y3][hH+]
%B:fPJE'mgNe]$2cSmpP7o!G6u)L.7[TJ%1qbVm&c?)2IEj3S4:pbi4+XZ@el[9=5KQ12uJ\h$`BKBI?4c'oC(6@5rIq7oFR2TsK&
%.%'To;Z9l$NmD`t9u,&O#uu;_e#!GafS?8!"2@XR-<;_'2p+ECC0UKK2Yab9BpPi1Edb@kH0:LV`moVY%=()@8e%!3[L`pSS\e5=
%`)jnFY+C\T>_X"3%pja"9%Rf52s=_86$rh.5mGO'';\_Cq:#lOX$[77g;Pte1+^_2e.GQF^r>e3.@]!EJ=g>#)3=4)>>!(98M*Po
%/Y=&f!"2,r-i5FqSurn9TE92XJ>(#5Gm4eQENo=\iRdB:hX^h&[?WohXi\3OI(u1IRbu\Tp43cAh%U33$I1X63me-RRi[0K_NL'E
%hgB&I>6^`KUFe2;P;YkgZF'R62'[ogg:FK`s5#].^A7/o++N(:C8-G2mf_`o<TAsAYe.'Z3KqipKdPJ"?/'<#llFmf>5C[=,76Jg
%B`6Qf*(:kRdL?$[;3h:.D%(V0"5(OnJX]!jg'.[1jJ5::.TE*L2-B./K$eEhf,M$H.qGo_DP^TGDVP>&NJ]8e6?eoUIZ6oq"b\iF
%_h5^t'_&L2m<Tb8$8e;MQopHOSbcNHH>Qoh6G9h"e@+4&ZABM];Kd(J?P?H^%P=%h;c:;W0U411Dl$]HDVW.F&uAZuq"@h$BLn;H
%*&e<;qn2V^\8ull#e7*3HcIc*4*(f8rjr1`FQii\?fI_s9W)*:eqp0jn;ceo9,u5!k4/WjSU.+#Ic9e)(CnJ\O"YS5E5-;c_WusB
%]PMi4+n<5$"+C3g0,n/<>n5h&CHMGR^fb%mL]0*bT:1fZObc#<ZIC$YNH5p`YoDR[49cGY)lS'>0+nlNYm%#[K1e?W#Yg8,5?(:J
%PbOd'F\W'P7+Sm0SEOlUI!9>d*6NSS!HY=OU>XDaI"<<V3DLN/4oJd;"D\6$'-A@3Ka>ttIl@c7i-#1n1MjEHAB`pA<Pt_cWh5'>
%-FRchMoW;g7Jn9qg,4^-;T/H!K%O8N#Y\D=r>o3R1L+]i;YVI^BiUNDX4^[n`i<rnA93G42-$@+#Z21D=V]-&o()sGh=r*a&s?,q
%io4SB.d^bE(q*D66G!gB;R@u3\"K2.S!f5&]"UErX4uqQ_3HH5F\*$PQdd^4$+pOK\cf2o\L+a-['X`eY7Q[*C+YTZ.$3bXa(eI.
%nk84`Tot(,L,2],cu+MidU#tjZLfMBC'A@^n<\a?@1$AH[QbU$69slY#2n0J,2=IA<C.@TXa60EF/4TL[B7M.6ht!#mIFtuc/=mt
%7rTnp8qEb;W7F16XEU+LE?TG6a_shr4K%PC'VDBmS3UMQi97V/*Mdp]q+@B39*M1F43r)E9k,eBUT\o>dSdErJDSAm5pmcdSS/W]
%l0)7g>jU1[Ce@t$%)2W<Vc-m=ESd2?^,,@+M3A']^rPOChWrku"+dA7Ocs%UR"R0N8V4L>1#!%r``m1.ZFE<ARB?5Q4rA$JC`YKR
%#_^6WOKZNjEd2is5llKuaX#%u[e/Y>-#J6AfX9Y*/I(<hLjkGQ)dOBidt/8Q#cP9WF1_.ZQ]j4m-b!j"`i$]8'KCYYM%EgkokV`_
%.PN?J=?*;!%5")Z-$\&+S2Re"JV\tVi3=D!c)"f_g,aK.M&GiK;=Y<:`'EX%h;g%5R9Y@[)IQ$9qVWMF2%N1XNrtbaUSE*t4I+:3
%Oq3ckX<`AMh?0H4G`.H99miVVZ`V=p8oik=!0S7E'hYd>jFNn%!p4V:S_OT9ft`#Do!"X;aRdtd8oel-JG!<oXQ8,tPhsCcOpO["
%D/=9$*f1H21f:7R?:SGaOQF956a7-?6/a)FCmM1=>.2G$7#&>YU,-8PN<tEc*/m`.IZVq]3"/P7_9".UK+]43C'0^A_83Ul$3DjG
%8I[RW*/&M@E<iL?0p.V;#<GP9<0g8eM_WR1;29_<Sg_!d);!g)&MC.>(6;b*;E2@EU^WC0Z%d(CV[e`'+H@f@=;rN_0fABbhSiE?
%8.#PR0-D^UP]5/q+>>41WDs=#+PA7S\4b>2/U(]IiIYGe((fG:)j?HT=]Ts$j&d3n=lOM:k/ZI2-ecR2=IM2*;Gr6>kYPG%':oLf
%`M(hMp]P'\JJfrH3oPK29Nqa1h5SrU;,W-O#E:>rP6c,eQaFuP-;ksK>c)2<:_R*WYXD%mLE^/[64c4B_ZFN1]"Fb^C0d$>dP>)I
%Eh"?c2\/#^4AfjJTPl7Q%*VaCE[2"og(7dgb-5o\/9E4^n_,;u`"g8(G^[NQE6X-D#M2EUP#,4&BaXDGEFJjA!69lX;J9R@m("mt
%74&:s="#j3%60>73>,_NcO#fV0*nWZ^*tL9i8bAaSO.1rfg<?=H$t`!+Y[&-fkLd$Ej(Q)0G3!mPC>bIQWNRI8KYSUTd2D_7AbT7
%#0"]:J?ZC\],?]M-(L8ier&3+Th3%/]Z/#gV-@>A=.ALZPr<OSfIn>$'26KG"[*;KF?lkI)u)c]J.(qCH5($B;$Z2#?XW8/L+T*Y
%pgu)7oM(4m:Z),05LTQiGPC?TX*aJZEl-qOEUh_@2fsIt\6IhLp0K)R"J/WGdU>14E`VX`Gpqh^UfldXh(AD>RcXZu5277LI3"#t
%CrC]!r&lV+@4M:/lr-[;nb>64Frn-=:PKhJn\a2R2EY;-:\>AOi#1\)W]Z;^e<GZ"ZgtUDjES_k$dWEfl'OsU+!\Wpq-MAt[!r!\
%(]6=ZJ#tgS:?6EXmlZ&9`o.sI-k=m+r6%lDH$SD[Me'Q8@sDYIKcf0W#fMLOc6N]YMl5>?%?l]T7"\PS3aorP>O-sE0HIt:`(0tg
%*X,HpH:cq.k-&@4/jn<1+;jD,"Tnl15!^`Me%2_L-ld-E>6kDQ*ccq7"em$G1U>Q.=/4!iEd('p`3k*f$aq-::E`1GZ$e:[9A.!j
%rjlKm\)ln=hEh+lip,iT#=US6:5k.\2HMrXP9b,Ts",M$%2Z'o!XmT>n1r^SG:J&Q/s9DAZYH%gfDI/Cq<oAWmZ,`ADn"B0*"+$9
%dfr7mkqL10HgYMTMX8O_83\N]6lmd.#*[l4*aL7RHkM(Q,sR8S<A'mX9#G:"YtVL2*3ri=9c1PO)n$[BIG?s_V6+8IHg6(?]8uCl
%j.3m>G@B1qTeZ1!"5qfJY#(9Dbt;Z-S;d@I&&.V5Mc)m00H'M>][1QlH3l;eV@-;%A$rMlLac#Y@!5_WpaK<mmcCuQjU>Jb^C%sH
%lCNTMIX5J=9/&\`i'Z1$:R>17IdN_R<!$.sdFWF(UQV=JcEroM@>/@f.(fIrpZXnFGe"KA(SJ#)Ejp:(io.^sP,L\UZ)ng0J_gof
%Y9S?aOLe6"7%6:3-3qnX]H#<dNC47_LJeseIs++mVbolY)bD(i0GG#-5"afMKV:_N_]Xa:R^$6<6ZM>",N+bMrTIim-foeRQUrVr
%7-UZ'CUn_06q*C3a#^!HU"hR<\+p/@qd7PfaPeas$Xq4"_\*+u<lbkG[RirI`I9+kr;8goaG;/<A!g,GPl!c&jJGs!ZD=5Se/Mou
%qkrL(7%SJdK\G\(>&FOCXHT095PNn0cHT_aY*lh'+_"#^AiFZbaaW2\=@!./B#f0;eI5\1&@5n;7>;i6'_\1YE3kY%W;3LQk-*m&
%np7hA`EY;!h=pC<r7&`?FNm`A9h'HL8@RlkM;BWUaN#)*qL1DDAFK"^>BmHq24_=(TH/ZGXP;1sR6[cC.,f4[H:dBH^WE-6T0BRH
%c/]/;%&O?T<)b8=d<7!#e@B6K'ck.jFGP"cI\f-MF9f81kJDk@$MSZqge<G!4FojA?/ej$^'LM6p,VX:+5_Qtnh(;*hrt'^ZsAjr
%@oV):4O"1p4@qe9N8P`\P)KQG:G"#G%i'24lcInJ[9I8OAoh/]`h\Yp?DZ-Q:/ZtGe-L6OQs-tm"ATD1lit[<a>Jk\+"`&,I#8)k
%$p7%q,i\rpTn6L-5]dePY2J4]c[M%Z?j<aCO6l9[2$W90THb4^7oI-:7>c(-q17=`ppk5qHrChHSd`H?['r"L@3_RD0kKeK0e&6C
%VBK@ei46X"&@gVL9@KTK]F>/h0JHLLRtXP1*&b];$0;r^Ib@22:nTrP=YXH%n#q8F&q\m1NXb1T,R3NS)$//r*li7=P%6fmQW%VZ
%[?AfW8kN_AV>4P1]!6N*KD'a2=ID4.dtHbl;l>I=4[78`dAGOEeZqq!L'h'd?l,KH"_ikX:544HTKXT!%8([%r)9j8Aqj^7Z`/[g
%dnU1lVOns?o<Dp')CFg%m]/5;G^bkVof;!B*^btr]tdrM2?3?uVafV,Io:no%$V,Jmhk0)<VM[(I=M.Ys.$/1[(PSe#1oX]40e7@
%Vh-dJpp%_fY6P6j2mbHJEr^MDBWM+8l%Q<`!peDHiqKmG,W/4t*@>#Ud;_o4_br]4bKsC0,V-r2?>mn@@t&7H@Gg\F(B!!V`-j7S
%0H62-Y`+KI`ap:WE?XRd_1/onmY3!j?q>=^$d,SROrTA\F13F*\0X]p`t4iM$@F#;2"^E8NBN4c40fT0iD7d7W]j#4`Bdn;=]T2p
%5iQor-jpgrW_!thrW$n-QIWX0E8EX@V(ap8mEfa(GgRDO@b^*"IjB"E4E]>m;^VmrWt%770sQ!74E[+^N5p8B<JBTZ[4`V#qgN%`
%#64F$^.rsK#*sW-<pb+gJ,8KnG9;%22;b&&>R,6)Fdu[l#'mFc95ok,A?kaa6IUPp$;+djp-I[e-qnj?%!d(Y+!J,JVA^!bcG8CX
%Sq"$rs->8$<sm[.Yo2]0"d5>/O.>_;M^S[[4`E?r0NV(#\AaO\D50Sfl_X5!.kq%tnt^+f0.p-rR4;o8;GVlpKgKnR:?kF+:C$I#
%XYo#^7>dMR@QJf[7s?+K'K6@$61AB>jZ5a!YAh//f3cA&ka2dmQ!MeVi_&'O7A!`8I7gChln1H)!F.CS,YIgp71t.O$UsM:4Wa1[
%B,%)hB9lLc1N[le16g0pcI*L9UnNUGg[ujA==nHUp]pANZ?eGJ4mjP0!\IRH;K6BdlUur$QO5<P>q.IKs%>!Jm/0Q8rU/^,5G%/e
%?$"o["gDK(d_IEpfPhVb`rQs2g=73urI)A,qt9O2"5)L,&RXo>0g>'6]!%I_q1\JsYr%H2V%B9uW>)@DOuf%]L$qq'/qr^kkUVla
%p(^oPHG8JU.HJGOP8>[3B;m-O=84D%mS`7$Kt]l&jGl5o\E&W!n#1W*G@Wn`4#.o?*S;F'mo&@%L$hk&G,3L484[[/,?$&@m4kIY
%R7J@C^VY1DFI,=<.J+?IU"A(^M%l*nR*YAa9Vmd1?fAU2\kAa/'`&05d&ZTUm'7kBo8_%[GmCdpP5d.gmS`7$Kl0-_KbHU-^@%$*
%/itgMn&Ro^8H'@<9;/s3\kAa#;$t#%Nm'+;1-=sG<9hQJaT]COTt;#M9;/Od$GFTBCts">4#.TgWO'II,?o>-G:@X#6=2@!N]u<k
%`"5=Z4ZYOiZKNiBF=cjsX(k&c]6p*NmLL9_Xif%;S@r8-ho4/PCu*(]m>.kX*B.6(fTPa+X$tH_bI6+nY&?l!@d>YTmUGKo`)_87
%6[/K<.r>e\D-P8m'i'\>8p@O_(L)*gF^nl2*C[JUZ#q4Vf&Y2(G$=^6Rt(D)e2PW(pH-TIWubJM?jDI-7L8JO!A_LR%7=k$Du'Y9
%%Ju.E_6WRRoAQFho?6/<]4;UoBi-<)RKOt;U=)>L$+;(i>VlNLp=lh'3itb4[/I:,[!QDAq[NC+Nn'cYeiNO'R4YNgp&FhERBcL=
%lq1H*q5t%6i8c81LC7_l1i.7J5l]jOL#E[d02m-kicoNEr/!@1DDR76LR7-`"$SE;iQ5naBM4OG0\L;cerCc4`kGl33^<]1!.i#V
%M-AR?eR%J4;O1&mp;Oi3ch>Ah*,m'F&^g$cb\.CGO$B/n'=d/<c%lB$>q1::.r3ZBK5^HaD"&DQfekh]!#pl@_beI<)uZ*jZr"oh
%+S1H,XFc4H">62CZi0^1Ik%ULCAd-9hB[hQL0l)LU_t\6d$?OmNe.VQ6CX>g\4#_k\bul_6@T23nu_Kq\#%XY:/)qDKng4[jFeh2
%7srojI"4k1'Hp#1fThB3F_d`CLk7iNY%ibn^/ML[gEbut#d,ldGc'R"iu%_9`VNQPdo<0RME*`'6D_IaAV4c3*2g4,KhA[JBr!k(
%S@_T#O!+G4f,=DRbO3"BpuBE`2uiCH<57FEnd\N7EGe7%JUinBe#t,kbr'i?/_(G_:qe8d%E(XOP<Aeii$%:5$B;i_&9DTU-]"<&
%TCLUo*&<.di6MXkI'cnNIu0\_.q5q",3?.1C1msAU#I@)\Z)rmR,"&`JqH$IQI`S$(s4\bg/:'<R-<U"]/F(i_59Ec[$ePfEDDeu
%C\+M7Bc];q\of\JqE/9SEKl?f)RQB<,:!Qu>ANo#EM/([]VsgH;B/nZ0u8<C8n!dnhO$2;4Z5;4*PNY'Bi74-$h9MU%>q;HCP#BC
%%c@!t+a0H1pd.Wn)#&n,P.87<2sq:1<"B@XDJ7&:S^cGM_:R4gEIF9S$NtC#'reQ3;(F.W98b&%B16\8W<s8M*+lJj[m.DfbYu64
%@o/f;imN:hBpqpdTO]%2+iWiXpMGM7fM`uJ"t'%?c8?kQXOJ]>oA3<6OM_Z.D_Y#.U!UgjIsM(Sk-mSRi=EP])s^:*c5Y1n6@&l-
%[sF2L%F!qX?:dK2:qj.J'dnIX0e!gBo$2fL'dias:^r#9.UBoTmRO6jJAh1B-:J69bV%:)$tTg2):qT)$tUTQ6^o,$pT9"=au$7!
%BnWoI\+L\Jr..EO@/1,g%,tSR?i*p:?jeNr&RqOJg\.qTPhg-;Y7%cXb'j`WG_0b5LBZlc(5$lbgC6`m_d2g[EG%oc\QU0=b6CaI
%?1Q(eD2M(n/Q5]Te&^&@$""1p[[/RN4k.\_([V(mE:n8q`:$t0-!X_'Y-&.6f7g9k`79"hlFLqWS[c6`>[8/KXqOmgKraOVeb/7e
%C4#.//(7gcT19>?D#=>D2VtS<9=g@OF2\d$M&%:/$AGZYg-33W9qK37HX5R<+Z46,fS"otQ,<rsLg"]K[V`2bR9;R]BSj_jW2FK^
%*A(sk-T'8f-nLFF6Me'b:^or'3&o'3c4Y`.(9XSY[FFD#[<3`EMuf.h9G3%6W.6C;ro>@S)SX\9aJ?Pfgdm-q'08=";XZpb=tdmn
%s75E0+#j4ElB*OVIeSm^H!1P0H7RbQck/pfA^!)u#<B+K*_!-&!YJg]TsPG\g3?Z(g/pem`^O=jaE)Ue3$\Zs11d-o$]M]=jeQ]A
%-2Wu7,1e_:97baCA+dW^&^M1Zg)B9\Fg,pA<C8-CXC8':#?HL'XEVb6.P1c.=<&IjCS`:Ha.4PoR:SO97YW&!==L-#OP9=?0:3M%
%9^Zj=dZE^B@rRZ84J@EZ#I)$%>mupQju0/Wc@j_pW#,7l;tZ_3`MYh8(n`npop-'%mKpm2]aSEDQKfKr@&4"$+D=?K<lpLVFafMT
%.6BTTntomKi,>SV@mQO@`"NS$Hod9UmYch1`$>[LNJp:<9E\tii#nG=E!;sFnk^*Z.B4gb);3Tc2L%gINF)B/(iU]#.9),HX[.-g
%Gj!dgq2+3ZD*\boRBQi1ro,_#C>XO^HeD#4YF3,E"Zm3*^O\`6:HDT?ktKJENn8W!$JFAjGmf=b@qemrNUpsYiGG\1O7ul&$^jd.
%rbl-[s4\X1qf23l55k9HjBI)KGR#)Kh=P(%&fK>*V.@+oDCSXQSL8(Hogl(=UGYPZJt"C-8>nC*fJ(0a+idCu4h(tA$]&#"%4+S?
%@9]4OU&,e4WLd!0l0\^j`RKR--.,T/E\&.%-XR-K\qf@MQ>.EJ0N<M)ks;MW;j$ZM?`*GDWP>#^);Y`$Q]+'G!:FYB_LU3*RE#^T
%;0[P[:62q.4_)5iTtu=GCqbF,UVPZCM'+p2c=bQIld6j$?U-iH26\qW73."X5F\OFZ(8X?N13j8C*/h\J-tqUhj7tQG<?#eQWUMa
%?>o[6`+p+O5Nt<3fp[FRGo@hi4n<n#KU+q*p#jQA0cDQ%?i&B]@&Hk&#o*4-BY]YACf*?NRec9$SVOMs#n()"B0+.*a,Jgu'(0""
%#UdS6&&F:$TFgj-K;VQPFrU\<08u[A,,/S:E>/P=IN5S%03^nSW0tCQf_.s._4NUmgf3^-0-(4?i[D`Z']RQ%E>aHiNC$`:+Y;9p
%\fJZ9O'ro[3/p707NjD:nOlC2kYesM_UL/E3XSC/6!`9'l8g7jAXpV0!CLlR)tLFSSFn?G@%3A.L\<I,A+H)\84d[Ih_0;hT1]od
%$Qt6?,_]nR2O&nS_*`>N5EJ_f';_&7SSl=(G%mo_;ZWs<[IjfcdiS7jo3\Pt4#suhImum*It$1$HN2%1hgO5Wn`0?kWp59/:2k+?
%0T0eFZNR0pPIeta.E()DPr*#k`5IO"LFl_O;N_h6=X[G38dmJkNu]iaJ^IZND2.V>`2$D`q4T`4<+uj^!47==r4H[hncURsc`l[/
%9HV[>bKCMdG&5K-WqtnE7h=1hWGPC)2-")hQ\nsWRkD7"g48u22oo3^Em&Ep0Xq7nD&/_."8R<cS2GU:rHt9ZN%>C_Q#FclDFsFF
%3aJ6QQ%M.VAi:pe6fVb\nVEBJ9,j"d0K4_04BcZ?!++S&!8P@gA+8X``K"K>EdhL^[q,JATqb-?qq!nOs7H?h!63#+T+:qE]Dpp^
%]-"iHpbn`HfVg,V:B83m%Nct<2RYOF:Fh>n3,K+qbSK&ngPC%DTkDL%i+_'F#$(LccTl<FgJDr8?D8p5'AbdB>E3UA7)=H[3nEhU
%ar--8Du&&rg`HMN4!BPB)OA:r-jSdCUMHqWOhfR32CZ"#8.J0>YI'-fed`?G9?t!:f?=W'9oU#Q*b!,:gEnmSpQB!L?Enj59Ik(b
%<+lmNd\]$Pp"RuN;q-f#r2_+Jp6/OZd9pod.#sQ*=S..dW[6u<epjj-iId:DWs^XW!S^gZUV*oJEGZu_OumXK;KW$C"\m&,"g;kn
%9@kks&I]IC\Jatn!=_-L('uqC6huEnfF&ZH*gIQ!^>Jn!q3OmThQoNAGF8@&A:ubknSNZ10qAUPm/W<]"%mTE3=,%f0j.pAf,11:
%#gl$XbJO!g<0KFUlO`'uXb>bH.YH6o0]OXi)^22iQ^)m18a9k:dhdh=ULu@Q^s>t0]Md>g,_QmUbYmU>q2'bBJNsRm.\2>dQ5g6I
%=WPN8e=fCLD31gX42I-bY!_UXg6(p'TEc/8!eD5<aGjm4nI<$>^tto[fSI!).WEHX?d"%,UhlLJ'5^MQm5o&#Br[E9/Hl+h8;12=
%9^lqM!u3VXLJg_`.h*mIhGNa'VFjG8>?[W8;=NmN^VW\5=C)n-W#HD_JR=?8n`fqKpU`6;>5[b0Ie^;Il,U3s$i@=kLG\b%U^<bY
%jqhKICiO@WdUPeb-lhqsEDF^-Z,NPeYb"=bq%?lWok8=`.::;bp8i#YV1h:AI$.D9C[8;E0B.]9D#X6aoS\3S_Z+u[rP.+%s83g+
%`_e/4BpDUV_Z;!tFOKBArmi4g_+QFaMUE<Mi4303?`3upF0Q>39"C7.p)9q0):)+?rolNOqarcD%eYqtN#JcL?\_LroiRWf!]b4A
%>W=N7*$#9E%MM?f"YVDH*>Zp/'1^)oUZ9;?EP[Q?'h>mRj*^%R?bt.6Bnj*A$kZD=/DOf9Ks/&un]I-heM#PV9C>@)IMQY@fE\kj
%>-iT^Yes<2[IX!IEr%:@5._l=IYkP8s8)9ak1f>grd:^nY*T).k<J.rk='O"na'o8e./#IT[C$7%kC&+<R(.<:O&EmbJ?P@J/gfD
%_/D-$PY!kAU4m?tF1k6pAP.C?X\<tN..^5,WZB/mUOo`f=:SVd?PHSiq>6+Fj`]&]9;2I5N9-L7Y1-,%bCj0.geN;8a:J1/LU!;P
%:O_NgLPbp_ORMqcpLCa_T7#P<pCm?galefL5Z`5="hduLB'B!5</naMYl1EOL<F.OW;VDgHs,t(;Joe*mFZl_oKKa=I";Z(I,uR.
%&>sE%$TW2M2_N@3;`CMG)q*4FBu*G8\S8$%:#1n;VAmZsj.jsN7&j7aX*.q5.]b_i8X[`DTPlB_gscBWdk#<oho^URL,/WWXMZTj
%qm3MeZ_d*9_V/X2SRu:NAmsAbKk2gEm*EPsB473?@@bKCDWl5P7m9*?couJsjNI98S'(+]Dth>VUMR&UO*pq5-L@JgWXu.Q&L+Uj
%NQqq>:I8S/=N*0\fnCGG%+(=EY:eqfV;@5L2bNO3#SH<U3-@SnaGC;8EG81<\fhO=OJZnd$XR#Z9hW06lA"pdh/K!EpUPO@Mq9X!
%?i"eh\;pP-\Bk\0dREp,(pjjGF9M;3?qm[3Y+(E/A.UILHWD$2:i[De\,7]+Ta3cmaAj_l;l6DZ8%`[X1M5$KZoEGI$pCd/ekr!@
%XA09/A(&^N/n(hD'0U-UO*aZZ]jW]X--UHJ/f./\1Hom^b>.UI5aRH3bMDmumfkcBA`cfq`+GI?G1VM#*kpE_.sE]U7+3k(Vt(Of
%Q`q^I)doOe/.Z**NpXSgNkY2JkcqY?pWLt]jlh(PRP;DIM&u]QB<khn<3@^@nsbqG0W>p):2eVrR"\S3'M^?HRBT[GjPR$NNHf"c
%\+F]2Kp/JKCn^TNZ1glRi5pXNcG?%ZgTSPrj7Spq942DdJTQ_(".18B!*C2>PHIg6^=<nSc.EA5DLq0*LSj/6Cl3A:UfOS"lgg=R
%]dU''=m4CdhNe9PIG,J&q*?b"96&Et8LGAF><slU&o9X',jX$g9o0C^$i61jQ-e/Vfo-tpc14[!J,Jf&O$B.ZDkOX:^GW5sjYk1K
%I27A')Nm@Y7gAXLJOpK^6X3?-(q!1pMBuMU.RKGm]e%V!KDtck<+P\Vcli!kM0WU%b7^0P+;q21E9g2-08nQ2gO%O7hcfV6VBB,5
%o/s1*>Yb#UW]ZoWI%Emsl_pF''(bE(ck@oJ<7&tUQ2R^HjVLl]c]8\`%jrk%`CM7l3@Tco7ECD.9I_gf9JL)RM.07('RNtOVB[fS
%QR-TYEBB<RGfaVYoIee4CH9jNBKLK&a%m5rTp!<4!r@HCBhB!'l3JnOk0g-$5>]af_BA@"II*X3`o%Q9pPq_MHI>4$a*ru`>!7AE
%HR7=@Q63IeKJjh@%'N&0p4U.nQGlt`4B"<[XKTi,>3H2@Pg:fK94%+.0:-b#O`JB`^$V@YBg(#e?-cB6'$=0@D`NOQ&.XLd>9;8K
%Ee/?9e(A[ioE,ghZol>30?u-c=N;u</ajtM\>Qn!0eF]I@kD=nQeUr;iE4jPeFG<@n!34eAgm3P($UI=q\a<e[@\iO]Wo^RR^O)K
%*SVP\r%PVSVr$J_4(3BZpGA[Fn1.!pVlHY##2Wr[r@,&c*1b8SH/1+*!`Sn:q@"h2>L3is^qcVt")R003lB'VTJ0h,2-ITfJamVm
%2ZsF[.EMmq0b-<I@Oeop-mU!oVg"Do6E9\]E5CT:k,B+r>B%@acfRJFn0@r7?!+V=n8a6m5bK4W=kj3U26<n\Hce*0r;Lq7$JS80
%l4SDo"*\nu4#k*kJXlOP1VCA1[LWOKF@&["[SH&1d%6]HmTJ*8^]UU_3L;bD;b]$>F2IM-c4(h&q>\@1h>:..)#*s;pM_h%3^Rc>
%dAoa+ClPp<JZ&Ad!X41>Xu>H+,W-VDFq(f<qT*OTctNZ<i:BYPnH&Sf6n'L'3T+A(*!/7,_^U0Yae=l;F7(@_E\(^_jOU6\g>Er9
%$gNC2Hlk:E+,mQ:CK9S\]FG[//VBD/#,7L\\FgnTMMFV4>X,Q%%t$)"XI"`;c;CaQbtQ\tc(<)c>S]>4TU5?_lFMc/`rUqYApK#(
%V6EJmcasj7R*UB?k&?\OV\qWL[AB_.-Hdn4Q4b%NT\Y=,)<B.QC2B)..8__^&eJb^Q?6BpU5+T'*hNgbBq$d`24f2l.DC&D(3hF8
%di!_jb]1L49i_0U3B8V=2h<E(*CJ2[i:W<ga_A#Eg:p4M5?"XBE.;C*F%Rl6MgM>f6**#2D/6Be33EHR/112PW-GpKep'f'/67j<
%9So!cc<>^0QV=Y"0!@>,iFFIaN.<+d;LqPo'JH4l*P7&p.K'#;_.^tb>;8nI2qJt6Br!>*EYYd!>@20AnLrg='U"?K$/_[t$h*O5
%?W5`2@CH^r)a_Mf['2Rq)'u6$F#CA-Y1U#o$?R^d"D\>WpM#Z-;8sTlNUAuecZT?-2=`ATe%;8)nciIm$H5g+PGq;OK@;KDhI@?%
%[[Fb-M+uKW7Y5&$2dN4Q/H\:QmFh_oT%qgsHR(f0"m@qB>'kQ3Uo*[@D#6VW^=59M2u!a\pQO&_BFRVV:=CM+1Cu`i/Z^Y?.6eJm
%B9:tfSHg#PL:_0:X;!kQ!>0pZ`_]tlh!$O>jI^YRSSZ!bH#HLS8@cjTbaSV1e[Qt1EE5ubSWMYm,[8ua^qhUib!bm0`6N5H>=har
%gZ"KUAZn?"F9W#Ok&[An&qmIh"eE<F<Sn.E'YLZYa^bI8&JE#7Ce@1_)qo^b>:INNeuXic"VH<t%9mKnR(,FV/MPspl_d3>[>qr8
%i@c=]D*2%-[')6mXllstN\07;W;*l2(F/u!O68F#0rM"@VmXB[&h6Cnd*ne@gS@HDiXK,-,Ou6Qc`;;qCpPjK>CH-hNR!42m!odj
%qGQ5k_k;9p98n^ee3/Vk<feJ;1pBbhj1[a.cYX\OK4EHAk:@Q!=S!3E--.&X.bB?n?*/-[d$$O.kQ;d4ClP@gS>iKAXb0eI><8'a
%ZbKHZmf^iGfY_T:[>*mrXnh<+_g&QFGD<QX)$EN>Y:AR[-[d8JK'>=*9AA;+Fjh\Ac(Ck3iM]l6g#bW9P+L&h*na0;D_Q"sX&2ij
%\6V[.LtcN*CWM0>klV]RR3;no(K7[X]s2&W,!q/c67`iQ:2@(qWBJRfk;TO#95KO[H&%$V#,WkSin@GAen^pXZ5]I6EI+"Q&/ug6
%5<A:[!tMnIk0`fRjU9lK*dU0FGMiApe6>2\HN"Z;X$7[e*;U.`bd-DEZ5plYV^N=M\ZMAE=Pti'0X22.oJ5Hk?6Wrl&.biH9Zn`V
%PT";RC+#N4Q1u_kTG,jqVBCmua%gaoW=C^ZR&LQO"_"2fG,jRnFe!I2*n?i[fI]]#M#skl2=C52([>sC2pR9ea7U&o.t^5Ua%T_^
%/X=!r8=so"<$G.E!9PL-!N:/r:WCuKmEdLqfM#X!*%;?'&O83t*2B>J/ktVF?cn1'L=.!BM*$5.FEJ/bPLF]m!_\#7PY+//OJ3DK
%m3PY2#-n..1N82X<qi'"VGfc?DCQ6s2O))!^`=[-bV35BoMM^Mkgg'<K9<Jq.._.dYNc!n`r7\+c:B2O7@Lbi6)#K]gmgDaa,ukO
%N"[Sql_)J"TtRH"6Q3KqbrBFLE\kR8j9>W/!JJXRMM&d_5WBFk9K5ogAg9PdL?n6fd]uE;hD9/iM*kuLCD^apHaH6o4YF*2-81=b
%L6:&k7r-K"_Er%j`0#u<&K^X%&,SL2%a8p$iSgG'lXq:41Cs@G*qij5?[14A3Y`;=q`UtN9Qf3e\o8[$Tt2Y?H)<XK<9HEE1RFIF
%Wq3)d0i=JHWZ)od;2d^G4,WQ:7VCR_G;)VrO"u3U0W@Ia#*gp6*="au95CPn.,4hPe/lUD)J?UNB"=H*jDni]RMWN)<=l'2/rL(=
%i$t',Q^AQ!S2P(f/^q@uri$^VCL7=#K"gs%?Q.+j/'-WdjX;_N6g$D',;#9p,O6@-:22PR:5-&s/?r.@b!^@S(TLcsaPVhhV_"`*
%VO,r7DW!j(gEodSAYpBpB,j!upa;U\6?NML4k*J@<hd0@PHKf&WAnIhUP"IGl3`k+F1YB,W>P<TOm4^(g`7(9L6\b1'e>=q=e9VR
%09NP8.sE%8DCSL%f2qB8KsYr)\V8Ld6PNd<A*(7"QeC$EY0=4L3(1T*2ARpM/@2Tt3Yg+[m!YEk(HtV>8/-jn&eI*C/AT+MM<bdJ
%pG7iu,uRbJM#ooM2tVP)A,h3"-VPfr*)^AY.=3$Yb%t?CUaf$%R7#-@+_?^%$C=j1%OmlB`P`o%?`0m,41OKtX\Ve-j/!t1I4a/W
%STR"s3o\Y-K5Oan\#YF)f9Nm-lZTtFAH:C"7L*M3#L1&&<+BmB-K/R,s4cD<oL<j?iHkS)LUm3D61[el@jM-Wa@VHr!HM?lMS*7`
%]/"Q]%eB);`Hm]RP"3A[Q@qF10\+EoFRp_[,b%e?-!k=ZnUaW/:SL6Q5goJ+>/@/C&j*8$@t-.]OZNdc?(o/I7NOUBN6HNji7+GF
%oY-I-ADue;]L\bup_W@.iGQ#m;'_TraR^,iVj7TuCm88P[&5HNPK&oU`g2u%=sDWgo9F"P.rjX,K1)rT=IY6!T&i]0?03S'f9#)G
%_juA!g7,3Vj[gYUMA`Ug/O5m_fh0MA]kJWeGI$)4HL!R0Djk#uOBSp'YEJgl9H-OV2Nho5C#hj<6t<VDX`aqMHd^k#X1anb7]Y?Y
%[6(VHO[M-2m<3b[Q,s931+\[Q!(+tEY(XJLTt(MXbD>:9U:D8:\WF`bTt0O>M?1t6%T'7O`G/J=<P`%5cs-mm`M/dfbuV1A'TlEC
%1m]4e@*i`PZ"62,P!#<bRW1bE;VuETL3_k%"87u?O[7BR&d,=0$(BBO*]GH',GRbeW<Xg,r7jI(E#q(4V!e][%\*THr(DL$iGh>]
%'8a$;#'Z!e/0aV2?*rtGCm)5G=tu+Oht+tj^HP(s^DB@7-E/DSO0i(mm*eH$-<)5H)`a[UqYcW=e#(C2Y;5H%^c"aRY_1mY9p;*n
%F>:V`9C%k>i$c+N8!98e2`dLI4o7LZZ6XOe@+PrB2#&2SV]<8\*Wlne!C)'abR>5pe;B#561E^(lO&'ecMNLb7;cK0r]a(=0S)-s
%aU0+M&XE*a`Qg_MU>(Hn6Eg3]4)7Z:3%sGl@+EsL?RX+58#-a@='!:X2(6@tQc5_."nit1Ru3o6od*'#njC_D#nNI#>^=)oL#)oZ
%aaR>8Q[RbJ(H8kU-o'uG#.e8,;9E>a_H16&[ICE(XflICaCF(tUp^t>PMFcd\"D3mM6ZTb7fTK]5EUkP9kmf_Jh(E)C[+jGR]tWl
%dBi.AV/tPCC/bU*`J6HL.TC3:q`ZM%mo6p9OC`t0kNf]b'm<oiF@=[V.\o6F?/[/d8Q:SQXJ>7Nlm,`X+^6IIaA!UaB/e^tIs&.\
%]D-@3GESNU9kS]rh^UUEC/@$jrof+R>NAEoj.e7:^st?':JI.K(\gfDN\q$]1U+8=m3",K_l5PA6JT6kLn7LjIfcZm[=fPK?)gP&
%_a%kdgDebSF3E:kqA_TF(O0n5KpZm@8Ce4l)lV]f;I/RdhmotP\QUe[Mo1/Qbm@%!k19U5,B]/40Y`$ofZ)`6M^j9b/CA2!/5rE^
%%LnSs#Md.iEiX>bU8t"k+2EE7oq@;WLV,U[BYhn@rSk+L_`?sJ;s_h+8fKu"d2A"R3la`pd8!Lj7\<9NHMX?Nior:,n3L,sH3tOg
%:<4I-0BTXMo[^bmanW)_XU)EL9(/f^c+1fb1*2St3.-JbP-KBXdG"aB2LKb&8XRO\9,I&H]Qj>4CA7,?kKhc#IYK+aDj]nq[dnR.
%L`)!D^<]Y:kE>SenPG?X:LunD=bh2KFJ.]D9WqsJ\YU_#a#Z-;fe+7h?/M-2JU(fp50"X.Gd`OQdd!mS'"[]*MDA`WA6S@'LS#>Y
%q,*eD6FVW>q95@*ET2u;Wt=0qqf^79d(''#fm'[F/F26M1iY=rV.kXY1Kj-7AM5T=2:LB<3ucl!1tk:?a$a-6b*Q[VYneB#CI),5
%k;_K;b%#$=gInCabqtdeFcMXbn\`ZhfC/]eca2]IaE<B8jS(FS5L;7L].F]:E0C-jZGW"/q9-h"n+GI`XuW*=)#80k/e9`2^8K&5
%ZfRmZFSF4X#KZf=`DHl]VdB+;+rL!3IPciBRDh5R\_nuF\jcp8SM11dUEKqS:,IT@YZ'4rq8J'#d"%`V_o9t<>([*F8.g4hR"k@g
%G(gH=iR7!X-!oC-'12B)(rF1-G%`::1[B<4S`*`mM4!$?Gb#;]3<h4r')?9W``*S*_=c"s'psIbIHp?.?((l)i))pE4ZWQt1j&ZS
%+IFhCl)taOba5j95Op633>J(P&69(sP4e6(G;"CZ!6=5I`niSD4`2=YD_E_]Nh']ZfbYTgV?bBB#4oI?a&n)(LM4V!QKB$H^7PQq
%q@^XoH8r>P[#!-I!]Iiff?3_3#6#$ZQHDX\7M0p\3o=Yu;YTLaZ=soI;$:D[otb<mE(B5A<Jjls6]h-:=e+"D&X0MQM(9B>)F[%V
%k@:p\IHZl</tt1[i,b)O97tRdWtnR$@[Ll+>^!3tO`-18folY]D0:0X;+6qgqR2eE*6N<s9.(Q"8gW(G8$-;_;mgYjF!/[BUo#ru
%1t*is9$QtdppD6rFJ>49)FY@>H-t'9VDHaZdtt)iCL/3$3iQgEU3*8IjdMO/RSdf\;b]'m5rlL<78&c3:/o\9UPLBWcW\ngjdOIo
%dnFrtc4-$_FAYl!"+1XhF\`F`?cTHS(LFDS+3[0"GX=$WZl<<Yd_gFm,"hakeJg)F4'Y0f2cR"p;%2A/967aZKTTqFUi@!Ch#LKN
%L%3AUPkIJ.0Nu!:E"Sr&?=M)MV0q8'6#)<A!5[A\EllapCTF'u7%.nljJ#)-DU^HoMt]ndD=p=t/u!ILg.F@7>2U7&G?RE!7^\MI
%;N-oJ4!@-,961[7P,d'\CSuog7?h[H@P%JbXjOH*:2id_-saBlqT4&Y"_sr[/Y[?n[FM&t^@`JD>=%)^r=7s\_p)BLBWnjNo9Ute
%kdBuL_>^;+'f`-;\R]Epit;F78__Ju(b28eVrg_SEmf+5"3,?PB%lblMZ?X,$NnCgo4H\i3X@uG>#f.L:_BNETn<@+V!TK5$l)Xn
%;fa;dW><g1ESS3p7M1X],[.d+e,eU>Gr+8Fd&>0R,.&#"RD4>aVQ13mk&4j7U'hVk)`iu@0'V:#WJJuJHmt6B=l1/5;*']??F<>k
%:_BOL!9YCi7UO!IP"/1sBnXkXUTYf"MC>#cYc8JT1DNcU#B9*07>nMk.\\a1i3lPO3pD(-*o[=7%EkoOBrg4IGFpL;H?X1[Ft*B!
%V`0b3M's2X;j8XRb)3Xr^l4]]?=J:Ara6W4VMUdV/krrkQn-$m-^?8<_,N5HS[c"grERt&mogtq@0*jFoMaqL9T)?I:k[$!N2TLp
%JEf%d\kT,@"01+/b;Q(5AXbZ/"01$0k#T*$5,u)*ga>U7*)IY'<6#<qd@sf/MkdmmiXQaS9F3>hK^(Oi3_lW6'6egeW8=h^SfH:'
%5]rW:=XR2#!S(aJFd]b_JEeoKZ:q4""01[?l8iq:=+fcN2H6:ceWIWFY^SI%L,%P%s&&uJ?iH)(GfFha:#&DQIW[aEX!P!`Hq%`H
%l=U"[2YtrPqmiHt\BNTp?i=)U25+3P"2>aogO3EtFdl4`-<.GTeSW07)c;TD[A7S?7T?]9h+#0U<M4[0WuoHeAlQeWeT!ou[&>n'
%9bubj.sJ4rB"tntqUJ==C-d!4:`UqOpj,cMq:1Pe=#6lBKZcEM\dkYk'<96o>m=8p$(#3iFWF:a-WJ]S]=o1_DgqASq:0KSX5fm\
%*S%?ZX:a`!8*a6safg`UY7BO,YO6$r89Qu^X822%SW3"!MX%f7iQ\QT!l$c+IW[dFX/#OAK'G7f\kT,@"01+/b;Q(5AM^?Gk$\+%
%iE!Qt5,pQVqQ]t`3;D%od'&b:/rFE(=*%E0OZQZElhU&'Y9r&E!S)0VFe#u%lTt4+=$N!X*='>?*r=DarG"W@R8@09mP:HH9XlVe
%Wp>3#3ha,[h"B3jHLn0Zc*+:&?X43@lDhQOIjA\ij(ePX3r.<Kn>ja+?X6WS3V9A1orH9s=4_)Dl?!hI2o#1qr9??<eb.:mY3Plk
%WnW3l2PI\kW,<8$gPBU/c)<OhMtO-ojB')#<,[6YA,4Ytn>klK?X;4VAQ0Vp\6?YY:4@=+r9A=d<u7,RW/_Okj2;sF&#qS'qQ]t`
%3r%7ud''V;q[0@HK^(=4QN>WJ_I]-3>mF?\$.X1XY-/&[RpUSY<7>".h="Ae;5dN&i$<=J3FBo*Q<'5:[N#_KQ1lo]eurI:S0!^r
%ZI-Iu"tc/q2N.p!HcW-;A>$k'EWK&sXd';-@e9Q9OFAY]K"WP/3p7NYZ]Y-8E=0eHHak90ibBX14kJ!t[]CC<ZfT>Yl(Pm`;""-a
%XenLki2An:#!$@KPNDd/e,!l5&"5U+rDZ(3d*a0%ktQsh2*;E1aU/:!"(#7PSgRQr:PXNG<i47YYqi-U<MbgC2*#AC''=tm@:b=h
%?C=hkY=qm1NHNIPJ:K9a80[=R.#MQ]Lc-j*W+80s>:/l?=AARnN!+Ht<YN1@5uXHA@6jp0:IoE3"KZgb:!bRt!b#cl6;S=]LdWDm
%VKI(;jTCg."G4897."I57*S4)@I%AX0)JLCUulCV3-ksaa="7r,]mBi'X<]QBT(B,S0:E0Pu<WN97e#4Wel:&"f,^c"DL/&PI<;#
%-VY0Vol_fgU_2'MC$!2`]tp@1H4;=Dh$OJJIRc88a$^*,k7S*L_[W'1-^8Z,<MCW(8k"m9[8ar&Fj.4CJ4"Vr8>N^2'^;Q(dAH"B
%Pq7`!X4\cRUksW*'"DKi9r8).3GrOLKtK?5+U9UKLm=H6\JaL&DkNjFpDQ/O;7A<@VjAcf/Qm7Y&<VHP%(_qO+)\574s(kp:)WJL
%4R@:<k_p@Tf8^hM!E\cP5$+0t;/uE"k42_eWa@P;eSVRG?:nb.g[*fA;k5s)'s-gC'pm))E+d"N`23#RNP3]gWuUgoF0Ch:?>/YY
%[U/1jp-SEYHD+$G:?Gk2.K+s,7`s&!hKklt(YX2/QdZ>u(=DgC2>"r[Kr/0):;,":6bC<=g3THp(YX2/f@UHol&7/h1U:69I1CY"
%a`lHbTrf-bHD+Ej$U)=bMus%M]W1<k0),`ET"Cb%VJ9ri4f>OC4q"g$+Ir7o]!^:_Xg2lj#TBLgEN8fqmZLS6S/>BiFg<(3d+2@`
%Bd*I!heIlE+em#!a2mp<ge?t<.mu9s$59k`S&0h2+X-TsIrRuJWG?lb9GBj*aZbh52"+4t*S7u_(Zf`k[GcTn^V?TEa`BMo>4HK<
%3jTAp\EnZ.8_!?(q]^4TkIZXJs#G,S#E-=/6pi-?(KD#[29Ns=oG;6rnFqGQ09YmSpKR7jXHUDj@l36&57/f#MU`Appf&D.LnC?6
%++THZ_]VOGQ,'Mt/DeOtJ3Y9VlB"N:Jn3oX;YV*VO&$T=E@Cdf@TEGTdZBb<9#QZp#81Br+0kkE)/]V)MnZ-FcOEd\F:FVd0Bciq
%ll[(H*d.E/h"=?t:6?h<iKFI?Gm#I/Jg@Kr0p/d_iiPeRdUJrB/OU9FCa#1EkIj9]aNC97cQp5<QIH5;%@tW:e_?SL+5X^0l/T$Q
%ah[G$3F6I!dC>Qs7Y%%A&f.TtHDkuTgEL>V6^:"eASFnRDOOQ=*$W-%0*O("?;Jk_qD_CYgVYI7iY#'"?&G-iOQ6^RR6RZ6f7kW!
%NP,6Q_t2dc;pc7QGQ)^UnbpH"4_HjkrR[s:l^pAeW_Yb5\W:J(Tr'Q>4"<VHIAQNS]62<Vb7gKE4?:%4/tZmqF.BMY6]A_II-3If
%*fS9Lb&2?+MPfgU*]<$cmKlcJh:\!`)k%Bt9)4n3;T1eOKpQ!Uo28UqDHgk'Q7FW393unclh'F%F[O0BlJ7PAW6PiHPB`c;82=Fn
%5kdM#@(*Mj4PrX6Y;N/[;;[Oai(Kf:j9b5+6!FP??BE(t,e_usqHK$GDVYZn/L0E6^"dT\m\tQDn@[O.8jrl^?sm[d<f4,n$iAQr
%I6c[pN,&q>,roIBIVRP2=BgpCO*Gl>8M5-"d.SW-O%R\kdVI3!b>n!_KkD'M[RmYG#NRh,oGUE48[#\"<Gn\E1bIL)-Hj*$D!@`q
%1YnV3K9?++O%17XoK"PrNagc5a9OOR*o\'fD8KkR:u)=Tf*TuMiiWB`l\*GBTt1]3DA0&)`8+`/Wa4CVI9KUB+>]9U@@,cV$h^tN
%N_W9%7:4n(<9+^U!Tt.O'W#4J!,'i$;7BniJVFuP/2WpS+6[K-2d3"WH!N5lM`ccf?&2$mR$bN;lLscgdt6[qbR<EkUOK)n?Bp;l
%UUqYi+33Q29XheS@LdXd("`2IiG&dhpJJ6^$A_rf.iK>Ne$F>1FR:X_hI2=>@ecOG.2%)u:#XgsNGD0(cEZe&.SC.`d)@7K+r$FO
%F:S"1egib7@NP<'N9CHn1*M6obtk[7KI3#`MIWP@4]N:`)[Ds'A=b`k<;d:J]EM#*Ae_NN8J+Am)@Jg$Z(`Ml0drQ.i&>@PW%*&`
%JS[(kcVCe7IHu@4G8EL3rd+2#C?LW6!rqd"0YDBYZ3p_(+7lbX"ccNJ?6LohX3Yn<`Dp\WkYLs9qb=TM3VrG[QU:@L"!$/,k/Mb\
%=qg>jP(Zr\hNa1^Sop4$2YA@8K1Mrtn0G^U'a^JM)a0d1>(]?Q$FPp[2r<RpH<-0$Daa6]X(-cYkYGT&gfN:n?e]M$TqGZUO+$IO
%9USm&I)U>*:J*1O3B2g.f^$KI>#8iY(+mGJE[-Zn@?r3Z<PW1%\WSL$WP@K4RVg3/R.GqW)1/gJrjl,_659)dA-2/fLU@tV/Q2\]
%Vg<&raFaWDF07""J@4A6a:m$0s5i8-e_`St]Xrnnj6`b&T<EDS+$P5,FS4[?C\RP_eYg_P+0Tj[I^o2,>QH0[q"j=6s7m14rT=-k:3P_~>
%AI9_PrivateDataEnd
